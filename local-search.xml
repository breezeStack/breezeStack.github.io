<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于google工具类Thumbnailator实现图片不失真压缩</title>
    <link href="/2021/01/25/%E5%9F%BA%E4%BA%8Egoogle%E5%B7%A5%E5%85%B7%E7%B1%BBThumbnailator%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E5%A4%B1%E7%9C%9F%E5%8E%8B%E7%BC%A9/"/>
    <url>/2021/01/25/%E5%9F%BA%E4%BA%8Egoogle%E5%B7%A5%E5%85%B7%E7%B1%BBThumbnailator%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E5%A4%B1%E7%9C%9F%E5%8E%8B%E7%BC%A9/</url>
    
    <content type="html"><![CDATA[<h3 id="1、图片压缩，有下面几个要求。"><a href="#1、图片压缩，有下面几个要求。" class="headerlink" title="1、图片压缩，有下面几个要求。"></a>1、图片压缩，有下面几个要求。</h3><p>1、压缩程度可控制，想压缩成多小就多小。</p><p>2、压缩之后图片尽可能的不失真。</p><p>3、压缩速度要快。</p><p>4、代码简单，依赖较少。</p><h3 id="2、maven的地址"><a href="#2、maven的地址" class="headerlink" title="2、maven的地址"></a>2、maven的地址</h3><dependency>   <groupId>net.coobird</groupId>   <artifactId>thumbnailator</artifactId>   <version>0.4.8</version></dependency><h3 id="3、使用起来特别的简单：一行代码就搞定了"><a href="#3、使用起来特别的简单：一行代码就搞定了" class="headerlink" title="3、使用起来特别的简单：一行代码就搞定了"></a>3、使用起来特别的简单：一行代码就搞定了</h3><p>Thumbnails.of(“原图文件的路径”)<br>        .scale(1f)<br>        .outputQuality(0.5f)<br>        .toFile(“压缩后文件的路径”);</p><p>其中的scale是可以指定图片的大小，值在0到1之间，1f就是原图大小，0.5就是原图的一半大小，这里的大小是指图片的长宽。</p><p>而outputQuality是图片的质量，值也是在0到1，越接近于1质量越好，越接近于0质量越差。</p><p>对于压缩图片来说上面就已经足够了。</p><h3 id="PS：经过使用后的反馈，这个工具无法正确压缩出png格式的图片"><a href="#PS：经过使用后的反馈，这个工具无法正确压缩出png格式的图片" class="headerlink" title="PS：经过使用后的反馈，这个工具无法正确压缩出png格式的图片"></a>PS：经过使用后的反馈，这个工具无法正确压缩出png格式的图片</h3><p>因为png本身就是一种无损的图片格式，而jpg是一种压缩的图片格式；<br>当前方法目的是为了在尽可能不丢失图片质量的情况下进行的压缩；<br>建议将图片压缩后的格式设置成jpg来解决；.outputFormat(“jpg”)<br>工具源码本身最后还是调用jdk中的ImageIO.createImageOutputStream(fos);来实现的；</p><h3 id="4、例子"><a href="#4、例子" class="headerlink" title="4、例子"></a>4、例子</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">import java.awt.image.BufferedImage;<br>import java.io.File;<br>import java.io.FileOutputStream;<br>import java.io.IOException;<br>import java.io.OutputStream;<br><br>import javax.imageio.ImageIO;<br><br>import net.coobird.thumbnailator.Thumbnails;<br>import net.coobird.thumbnailator.geometry.Positions;<br><br>public <span class="hljs-keyword">class</span> ThumbnailatorTest &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @param args</span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    public static void main(String<span class="hljs-literal">[]</span> args) throws IOException &#123;<br>        ThumbnailatorTest thumbnailatorTest = <span class="hljs-keyword">new</span> <span class="hljs-constructor">ThumbnailatorTest()</span>;<br>        thumbnailatorTest.test1<span class="hljs-literal">()</span>;<br>        thumbnailatorTest.test2<span class="hljs-literal">()</span>;<br>        thumbnailatorTest.test3<span class="hljs-literal">()</span>;<br>        thumbnailatorTest.test4<span class="hljs-literal">()</span>;<br>        thumbnailatorTest.test5<span class="hljs-literal">()</span>;<br>        thumbnailatorTest.test6<span class="hljs-literal">()</span>;<br>        thumbnailatorTest.test7<span class="hljs-literal">()</span>;<br>        thumbnailatorTest.test8<span class="hljs-literal">()</span>;<br>        thumbnailatorTest.test9<span class="hljs-literal">()</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 指定大小进行缩放</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> void test1<span class="hljs-literal">()</span> throws IOException &#123;<br>        <span class="hljs-comment">/*</span><br><span class="hljs-comment">         * size(width,height) 若图片横比200小，高比300小，不变</span><br><span class="hljs-comment">         * 若图片横比200小，高比300大，高缩小到300，图片比例不变 若图片横比200大，高比300小，横缩小到200，图片比例不变</span><br><span class="hljs-comment">         * 若图片横比200大，高比300大，图片按比例缩小，横为200或高为300</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">200</span>, <span class="hljs-number">300</span>).<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_200x300.jpg&quot;</span>)</span>;<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">2560</span>, <span class="hljs-number">2048</span>).<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_2560x2048.jpg&quot;</span>)</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 按照比例进行缩放</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> void test2<span class="hljs-literal">()</span> throws IOException &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * scale(比例)</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).scale(<span class="hljs-number">0.25</span>f).<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_25%.jpg&quot;</span>)</span>;<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).scale(<span class="hljs-number">1.10</span>f).<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_110%.jpg&quot;</span>)</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 不按照比例，指定大小进行缩放</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> void test3<span class="hljs-literal">()</span> throws IOException &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * keepAspectRatio(false) 默认是按照比例缩放的</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">120</span>, <span class="hljs-number">120</span>).keep<span class="hljs-constructor">AspectRatio(<span class="hljs-params">false</span>)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_120x120.jpg&quot;</span>)</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 旋转</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> void test4<span class="hljs-literal">()</span> throws IOException &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * rotate(角度),正数：顺时针 负数：逆时针</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">1280</span>, <span class="hljs-number">1024</span>).rotate(<span class="hljs-number">90</span>).<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image+90.jpg&quot;</span>)</span>;<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">1280</span>, <span class="hljs-number">1024</span>).rotate<span class="hljs-number">(-90)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/iamge-90.jpg&quot;</span>)</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 水印</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> void test5<span class="hljs-literal">()</span> throws IOException &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * watermark(位置，水印图，透明度)</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">1280</span>, <span class="hljs-number">1024</span>).watermark(Positions.BOTTOM_RIGHT, <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ImageIO</span>.</span></span>read(<span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-string">&quot;images/watermark.png&quot;</span>)</span>), <span class="hljs-number">0.5</span>f)<br>                .output<span class="hljs-constructor">Quality(0.8f)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_watermark_bottom_right.jpg&quot;</span>)</span>;<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">1280</span>, <span class="hljs-number">1024</span>).watermark(Positions.CENTER, <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ImageIO</span>.</span></span>read(<span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-string">&quot;images/watermark.png&quot;</span>)</span>), <span class="hljs-number">0.5</span>f)<br>                .output<span class="hljs-constructor">Quality(0.8f)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_watermark_center.jpg&quot;</span>)</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 裁剪</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> void test6<span class="hljs-literal">()</span> throws IOException &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 图片中心400*400的区域</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).source<span class="hljs-constructor">Region(Positions.CENTER, 400, 400)</span>.size(<span class="hljs-number">200</span>, <span class="hljs-number">200</span>).keep<span class="hljs-constructor">AspectRatio(<span class="hljs-params">false</span>)</span><br>                .<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_region_center.jpg&quot;</span>)</span>;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 图片右下400*400的区域</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).source<span class="hljs-constructor">Region(Positions.BOTTOM_RIGHT, 400, 400)</span>.size(<span class="hljs-number">200</span>, <span class="hljs-number">200</span>).keep<span class="hljs-constructor">AspectRatio(<span class="hljs-params">false</span>)</span><br>                .<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_region_bootom_right.jpg&quot;</span>)</span>;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 指定坐标</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).source<span class="hljs-constructor">Region(600, 500, 400, 400)</span>.size(<span class="hljs-number">200</span>, <span class="hljs-number">200</span>).keep<span class="hljs-constructor">AspectRatio(<span class="hljs-params">false</span>)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_region_coord.jpg&quot;</span>)</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 转化图像格式</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> void test7<span class="hljs-literal">()</span> throws IOException &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * outputFormat(图像格式)</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">1280</span>, <span class="hljs-number">1024</span>).output<span class="hljs-constructor">Format(<span class="hljs-string">&quot;png&quot;</span>)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_1280x1024.png&quot;</span>)</span>;<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">1280</span>, <span class="hljs-number">1024</span>).output<span class="hljs-constructor">Format(<span class="hljs-string">&quot;gif&quot;</span>)</span>.<span class="hljs-keyword">to</span><span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_1280x1024.gif&quot;</span>)</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 输出到OutputStream</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> void test8<span class="hljs-literal">()</span> throws IOException &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * toOutputStream(流对象)</span><br><span class="hljs-comment">         */</span><br>        OutputStream os = <span class="hljs-keyword">new</span> <span class="hljs-constructor">FileOutputStream(<span class="hljs-string">&quot;C:/image_1280x1024_OutputStream.png&quot;</span>)</span>;<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">1280</span>, <span class="hljs-number">1024</span>).<span class="hljs-keyword">to</span><span class="hljs-constructor">OutputStream(<span class="hljs-params">os</span>)</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 输出到BufferedImage</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * @throws IOException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> void test9<span class="hljs-literal">()</span> throws IOException &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * asBufferedImage() 返回BufferedImage</span><br><span class="hljs-comment">         */</span><br>        BufferedImage thumbnail = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Thumbnails</span>.</span></span><span class="hljs-keyword">of</span>(<span class="hljs-string">&quot;images/test.jpg&quot;</span>).size(<span class="hljs-number">1280</span>, <span class="hljs-number">1024</span>).<span class="hljs-keyword">as</span><span class="hljs-constructor">BufferedImage()</span>;<br>        <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">ImageIO</span>.</span></span>write(thumbnail, <span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-constructor">File(<span class="hljs-string">&quot;C:/image_1280x1024_BufferedImage.jpg&quot;</span>)</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于逍遥模拟器的王者荣耀自动刷金币脚本</title>
    <link href="/2021/01/22/%E5%9F%BA%E4%BA%8E%E9%80%8D%E9%81%A5%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%9A%84%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80%E8%87%AA%E5%8A%A8%E5%88%B7%E9%87%91%E5%B8%81%E8%84%9A%E6%9C%AC/"/>
    <url>/2021/01/22/%E5%9F%BA%E4%BA%8E%E9%80%8D%E9%81%A5%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%9A%84%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80%E8%87%AA%E5%8A%A8%E5%88%B7%E9%87%91%E5%B8%81%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p><strong>王者荣耀自动刷金币/经验脚本</strong><br>王者荣耀金币周上限4000+，经验周上限100000，想要手动刷到上限实在是浪费时间、磨损手指。看了这篇教程，让你轻松挂机刷爆金币/经验上限。 本教程适用于手机屏幕分辨率为2160*1080，其他分辨率需要自行更改代码中的坐标，显示手机坐标自行百度。<br><strong>准备工作</strong><br>1、手机或装有手机模拟器（推荐逍遥模拟器）的电脑。<br>2、安装好王者荣耀，auto.js（自行百度下载或通过此链接下载(<a href="https://share.weiyun.com/tMNhozS2">https://share.weiyun.com/tMNhozS2</a> 密码:rvfn6m)）<br>3、开启开发者模式，打开指针位置，以下步骤中凡是需要点击的地方都要记录下坐标。<br>4、打开王者荣耀，进入游戏，进入万象天工。<br>5、左上角快捷入口添加为冒险玩法，进入冒险玩法。<br>6、进入挑战，选择大师级别魔女回忆，更换阵容为三个射手，点击闯关。<br>6、进入闯关后，开启右上角自动模式，不要手动点击屏幕，等待关卡完成，记录下完成关卡的时间。<br>7、记录“再来一次”的坐标，之后按两次返回键退出王者荣耀。<br>8、开始挂机<br>9、打开auto.js，开启无障碍模式和悬浮窗，在设置中打开音量上键停止所有脚本（如果有root权限可以开启通过root权限自动启动服务），右下角导入文件或新建文件将代码粘贴。<br>10、将准备工作中记录下的坐标在代码中进行更改，更改的地方是每个对应方法中click()中的两个参数。<br>11、如果手机卡顿，则更改sleep()中的参数，1000表示1秒。<br>12、将代码保存运行，看看是否可以正常闯关，如果中间有任何地方有问题（点不到、点击过快或太慢），则多修改一下代码中的坐标和sleep时间。<br>多跑两次没问题之后，就可以挂着不管了，等着金币/经验刷满退出脚本即可。<br><strong>代码</strong><br>有问题可以留言或提Issues。 [图文教程] (<a href="https://blog.csdn.net/qq_36936510/article/details/106661296">https://blog.csdn.net/qq_36936510/article/details/106661296</a>)</p><p><strong>原理</strong><br>模拟人点击游戏的过程，冒险模式时间和行为相对固定，适合刷金币/经验。</p><p>参考：<a href="https://github.com/MaQuanZhi/wzry_auto">https://github.com/MaQuanZhi/wzry_auto</a></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>王者荣耀刷金币脚本</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决导入eclipse svn导入maven项目后右键没有improt as maven project选项</title>
    <link href="/2021/01/21/%E8%A7%A3%E5%86%B3%E5%AF%BC%E5%85%A5eclipse-svn%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89improt-as-maven-project%E9%80%89%E9%A1%B9/"/>
    <url>/2021/01/21/%E8%A7%A3%E5%86%B3%E5%AF%BC%E5%85%A5eclipse-svn%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89improt-as-maven-project%E9%80%89%E9%A1%B9/</url>
    
    <content type="html"><![CDATA[<p>1、缺少插件，搜索安装就可以了<br>maven integration for eclipse<br><img src="https://img-blog.csdnimg.cn/20201201174809912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20201201175001780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p><p>选择luna and newer版本安装</p><p>2、如果装了还不行的话使用<br> <a href="http://download.eclipse.org/technology/m2e/releases/">http://download.eclipse.org/technology/m2e/releases/</a><br> 安装<br><img src="https://img-blog.csdnimg.cn/20201203170658883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>]]></content>
    
    
    <categories>
      
      <category>elipse</category>
      
    </categories>
    
    
    <tags>
      
      <tag>elipse使用问题解决</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于解决IDEA中Tomcat-＞output中日志打印乱码的问题</title>
    <link href="/2021/01/21/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3IDEA%E4%B8%ADTomcat-%EF%BC%9Eoutput%E4%B8%AD%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E4%B9%B1%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2021/01/21/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3IDEA%E4%B8%ADTomcat-%EF%BC%9Eoutput%E4%B8%AD%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E4%B9%B1%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>1、tomcat中的conf-&gt;logging.properties要跟电脑的编码方式相同，这样子tomcat日志打印出来就没有问题<br><img src="https://img-blog.csdnimg.cn/20210115192619755.png"><img src="https://img-blog.csdnimg.cn/202101151926451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p><p>2、Help-&gt;Edit Custom VM Options中使用默认的就好，不然log4j日志log.info()输出会出现乱码<br><img src="https://img-blog.csdnimg.cn/20210115192720261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20210115192736129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p><p>3、<img src="https://img-blog.csdnimg.cn/20210120165118542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>]]></content>
    
    
    <categories>
      
      <category>IDEA</category>
      
    </categories>
    
    
    <tags>
      
      <tag>IDEA问题解决</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>

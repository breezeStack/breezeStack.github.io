<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Eclipse安装Jad 解决debug查看源代码报错：Source not found</title>
    <url>/2021/03/08/Eclipse%E5%AE%89%E8%A3%85Jad%E8%A7%A3%E5%86%B3Source-not-found/</url>
    <content><![CDATA[<h3 id="1、下载安装Eclipse插件-net-sf-jadclipse-3-3-0-jar"><a href="#1、下载安装Eclipse插件-net-sf-jadclipse-3-3-0-jar" class="headerlink" title="1、下载安装Eclipse插件 net.sf.jadclipse_3.3.0.jar"></a>1、下载安装Eclipse插件 net.sf.jadclipse_3.3.0.jar</h3><p>（1）下载地址：<a href="http://jadclipse.sourceforge.net/">http://jadclipse.sourceforge.net/</a></p>
<p>（2）下载后将jar包复制到Eclipse安装目录下的plugins下</p>
<img src="/2021/03/08/Eclipse%E5%AE%89%E8%A3%85Jad%E8%A7%A3%E5%86%B3Source-not-found/image-20210308170209026.png" class="">

<p>（3）重启Eclipse</p>
<img src="/2021/03/08/Eclipse%E5%AE%89%E8%A3%85Jad%E8%A7%A3%E5%86%B3Source-not-found/image-20210308170401234.png" class="">

<h3 id="2、下载jad-exe"><a href="#2、下载jad-exe" class="headerlink" title="2、下载jad.exe"></a>2、下载jad.exe</h3><p>（1）下载地址：<a href="http://www.javadecompilers.com/jad">http://www.javadecompilers.com/jad</a></p>
<img src="/2021/03/08/Eclipse%E5%AE%89%E8%A3%85Jad%E8%A7%A3%E5%86%B3Source-not-found/image-20210308170450103.png" class="">

<p>（2）Eclipse中添加jad.exe路径</p>
<img src="/2021/03/08/Eclipse%E5%AE%89%E8%A3%85Jad%E8%A7%A3%E5%86%B3Source-not-found/image-20210308170615570.png" class="">

<img src="/2021/03/08/Eclipse%E5%AE%89%E8%A3%85Jad%E8%A7%A3%E5%86%B3Source-not-found/image-20210308170642349.png" class="">

<h3 id="3、配置使用jad来反编译class文件"><a href="#3、配置使用jad来反编译class文件" class="headerlink" title="3、配置使用jad来反编译class文件"></a>3、配置使用jad来反编译class文件</h3><img src="/2021/03/08/Eclipse%E5%AE%89%E8%A3%85Jad%E8%A7%A3%E5%86%B3Source-not-found/image-20210308170739327.png" class="">

<img src="/2021/03/08/Eclipse%E5%AE%89%E8%A3%85Jad%E8%A7%A3%E5%86%B3Source-not-found/image-20210308170757803.png" class="">

<img src="/2021/03/08/Eclipse%E5%AE%89%E8%A3%85Jad%E8%A7%A3%E5%86%B3Source-not-found/image-20210308170816446.png" class="">







<p>参考：<a href="https://blog.csdn.net/zhang_ling_yun/article/details/78156641">https://blog.csdn.net/zhang_ling_yun/article/details/78156641</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Eclipse安装Jad</tag>
      </tags>
  </entry>
  <entry>
    <title>Eclipse运行报错java.lang.UnsatisfiedLinkError: no jacob-1.17-M2-x64 in java.library.path</title>
    <url>/2021/05/13/Eclipse%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99java-lang-UnsatisfiedLinkError-no-jacob-1-17-M2-x64-in-java-library-path/</url>
    <content><![CDATA[<p>参考：<a href="https://blog.csdn.net/ordinaryprogrammerc/article/details/84141472">https://blog.csdn.net/ordinaryprogrammerc/article/details/84141472</a></p>
]]></content>
  </entry>
  <entry>
    <title>Java实现Pdf转图片</title>
    <url>/2021/05/13/Java%E5%AE%9E%E7%8E%B0Pdf%E8%BD%AC%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<p>1</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 根据传入的Attr对象获取它的pdf路径，根据pdf来生成图片，并创建AttrImage对象，一个Attr对应多个AttrImage对象</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> Attr attr 附件上传对象</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> boolean 转换是否成功</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@author</span> liuwf</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">pdf2image</span><span class="params">(Attr attr)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">		String punid = attr.getId();</span><br><span class="line">		File pdfFile;</span><br><span class="line">		File file_attrImagePath = <span class="keyword">new</span> File(attrImagePath + File.separator + punid);</span><br><span class="line">		<span class="keyword">if</span> (!file_attrImagePath.exists()) &#123;</span><br><span class="line">			file_attrImagePath.mkdirs();<span class="comment">// 创建文件根目录</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 判断待转为图片的文件是否是pdf文件</span></span><br><span class="line">		<span class="comment">// 增加attr对象中pdfFile路径为空的判断</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (attr.getFilename().toLowerCase().indexOf(<span class="string">&quot;.pdf&quot;</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">			pdfFile = <span class="keyword">new</span> File(attr.getFileUrl());</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> (attr.getPdfUrl() != <span class="keyword">null</span>) &#123;</span><br><span class="line">				pdfFile = <span class="keyword">new</span> File(attr.getPdfUrl());</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 判断待转换的附件的pdfurl路径下的pdf是否存在</span></span><br><span class="line">		<span class="keyword">if</span> (pdfFile.exists()) &#123;</span><br><span class="line">			<span class="comment">// 开始转化pdf为图片</span></span><br><span class="line">			<span class="comment">// 利用PdfBox生成图像</span></span><br><span class="line">			PDDocument pdDocument = PDDocument.load(pdfFile);</span><br><span class="line">			PDFRenderer renderer = <span class="keyword">new</span> PDFRenderer(pdDocument);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">int</span> width = <span class="number">0</span>;</span><br><span class="line">			<span class="comment">// 保存一张图片中的RGB数据</span></span><br><span class="line">			<span class="keyword">int</span>[] singleImgRGB;</span><br><span class="line">			<span class="keyword">int</span> shiftHeight = <span class="number">0</span>;</span><br><span class="line">			<span class="comment">// 保存每张图片的像素值</span></span><br><span class="line">			BufferedImage imageResult = <span class="keyword">null</span>;</span><br><span class="line">			<span class="comment">// 循环每个页码</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, len = pdDocument.getNumberOfPages(); i &lt; len; i++) &#123;</span><br><span class="line">				BufferedImage image = renderer.renderImageWithDPI(i, DEFAULT_DPI, ImageType.RGB);</span><br><span class="line">				<span class="keyword">int</span> imageHeight = image.getHeight();</span><br><span class="line">				<span class="keyword">int</span> imageWidth = image.getWidth();</span><br><span class="line">				width = imageWidth;</span><br><span class="line">				<span class="comment">// 保存每页图片的像素值</span></span><br><span class="line">				imageResult = <span class="keyword">new</span> BufferedImage(width, imageHeight, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">				singleImgRGB = image.getRGB(<span class="number">0</span>, <span class="number">0</span>, width, imageHeight, <span class="keyword">null</span>, <span class="number">0</span>, width);</span><br><span class="line">				imageResult.setRGB(<span class="number">0</span>, shiftHeight, width, imageHeight, singleImgRGB, <span class="number">0</span>, width);</span><br><span class="line"></span><br><span class="line">				String imageName = String.format((attr.getFilename() + <span class="string">&quot;_ToImage_%d.png&quot;</span>), i);</span><br><span class="line">				String imageUrl = attrImagePath + File.separator + punid + File.separator + imageName;</span><br><span class="line">				String imageUrlBeforeCut = attrImagePath + File.separator + punid + File.separator</span><br><span class="line">						+ <span class="string">&quot;imageUrlBeforeCut.png&quot;</span>;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 写图片</span></span><br><span class="line">				ImageIO.write(imageResult, DEFAULT_FORMAT, <span class="keyword">new</span> File(imageUrlBeforeCut));</span><br><span class="line">				pictureCut(imageUrlBeforeCut, imageUrl);</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 每生成一张图片，就生成一条数据库记录</span></span><br><span class="line">				AttrImage attrImage = <span class="keyword">new</span> AttrImage();</span><br><span class="line">				attrImage.setPunid(punid);</span><br><span class="line">				attrImage.setImageName(imageName);</span><br><span class="line">				attrImage.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">				attrImage.setImageUrl(imageUrl);</span><br><span class="line">				attrImage.setDelFlag(<span class="keyword">null</span>);</span><br><span class="line">				attrImage.setSort(i);</span><br><span class="line">				<span class="comment">// 使用this.save保存数据到数据库中，this表示的服务类IAttrImageService类对象</span></span><br><span class="line">				<span class="keyword">this</span>.save(attrImage);</span><br><span class="line">			&#125;</span><br><span class="line">			pdDocument.close();</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;待转换的Attr对象的pdf不存在，装换失败&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Java_重启openoffice服务</title>
    <url>/2021/06/18/Java-%E9%87%8D%E5%90%AFopenoffice%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p>背景：项目使用openoffice来实现office应用转pdf，但是运行次数一多，就会出现转换的pdf出现中文乱码，格式错乱等问题，重启之后又正常了，于是考虑每次运行多了就重启openoffice服务</p>
<p>1、关闭服务的工具类</p>
<p>​    在这边是写死了只用来关闭端口为8100的服务，后续如果有用到关闭其他端口的服务可以将它写为参数传进来</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.feezet.modules.system.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KillServerUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">static</span> Set&lt;Integer&gt; ports = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">	    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">(<span class="keyword">int</span> port)</span></span>&#123;</span><br><span class="line">	        Runtime runtime = Runtime.getRuntime();</span><br><span class="line">	        <span class="keyword">try</span> &#123;</span><br><span class="line">	            <span class="comment">//查找进程号</span></span><br><span class="line">	            Process p = runtime.exec(<span class="string">&quot;cmd /c netstat -ano | findstr \&quot;&quot;</span>+port+<span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">	            InputStream inputStream = p.getInputStream();</span><br><span class="line">	            List&lt;String&gt; read = read(inputStream, <span class="string">&quot;UTF-8&quot;</span>,<span class="number">8100</span>);</span><br><span class="line">	            <span class="keyword">if</span>(read.size() == <span class="number">0</span>)&#123;</span><br><span class="line">	                System.out.println(<span class="string">&quot;找不到该端口的进程&quot;</span>);</span><br><span class="line">	                <span class="keyword">try</span> &#123;</span><br><span class="line">	                    Thread.sleep(<span class="number">6000</span>);</span><br><span class="line">	                    System.exit(<span class="number">0</span>);</span><br><span class="line">	                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">	                    e.printStackTrace();</span><br><span class="line">	                &#125;</span><br><span class="line">	            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	                <span class="keyword">for</span> (String string : read) &#123;</span><br><span class="line">	                    System.out.println(string);</span><br><span class="line">	                &#125;</span><br><span class="line">	                System.out.println(<span class="string">&quot;找到&quot;</span>+read.size()+<span class="string">&quot;个进程，正在准备清理&quot;</span>);</span><br><span class="line">	                kill(read);</span><br><span class="line">	            &#125;</span><br><span class="line">	        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">	            e.printStackTrace();</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line"></span><br><span class="line">	    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	     * 验证此行是否为指定的端口，因为 findstr命令会是把包含的找出来，例如查找80端口，但是会把8099查找出来</span></span><br><span class="line"><span class="comment">	     * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment">	     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	     */</span></span><br><span class="line">	    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">validPort</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">	        Pattern pattern = Pattern.compile(<span class="string">&quot;^ *[a-zA-Z]+ +\\S+&quot;</span>);</span><br><span class="line">	        Matcher matcher = pattern.matcher(str);</span><br><span class="line"></span><br><span class="line">	        matcher.find();</span><br><span class="line">	        String find = matcher.group();</span><br><span class="line">	        <span class="keyword">int</span> spstart = find.lastIndexOf(<span class="string">&quot;:&quot;</span>);</span><br><span class="line">	        find = find.substring(spstart + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	        <span class="keyword">int</span> port = <span class="number">0</span>;</span><br><span class="line">	        <span class="keyword">try</span> &#123;</span><br><span class="line">	            port = Integer.parseInt(find);</span><br><span class="line">	        &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">	            System.out.println(<span class="string">&quot;查找到错误的端口:&quot;</span> + find);</span><br><span class="line">	            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	        &#125;</span><br><span class="line">	        <span class="keyword">if</span>(ports!=<span class="keyword">null</span>) &#123;</span><br><span class="line">		        <span class="keyword">if</span>(ports.contains(port))&#123;</span><br><span class="line">		            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">		        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		        &#125;</span><br><span class="line">	        &#125;</span><br><span class="line">	        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	    &#125;</span><br><span class="line"></span><br><span class="line">	    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	     * 更换为一个Set，去掉重复的pid值</span></span><br><span class="line"><span class="comment">	     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">	     */</span></span><br><span class="line">	    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">kill</span><span class="params">(List&lt;String&gt; data)</span></span>&#123;</span><br><span class="line">	        Set&lt;Integer&gt; pids = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">	        <span class="keyword">for</span> (String line : data) &#123;</span><br><span class="line">	            <span class="keyword">int</span> offset = line.lastIndexOf(<span class="string">&quot; &quot;</span>);</span><br><span class="line">	            String spid = line.substring(offset);</span><br><span class="line">	            spid = spid.replaceAll(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">	            <span class="keyword">int</span> pid = <span class="number">0</span>;</span><br><span class="line">	            <span class="keyword">try</span> &#123;</span><br><span class="line">	                pid = Integer.parseInt(spid);</span><br><span class="line">	            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">	                System.out.println(<span class="string">&quot;获取的进程号错误:&quot;</span> + spid);</span><br><span class="line">	            &#125;</span><br><span class="line">	            pids.add(pid);</span><br><span class="line">	        &#125;</span><br><span class="line">	        killWithPid(pids);</span><br><span class="line">	    &#125;</span><br><span class="line"></span><br><span class="line">	    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	     * 一次性杀除所有的端口</span></span><br><span class="line"><span class="comment">	     * <span class="doctag">@param</span> pids</span></span><br><span class="line"><span class="comment">	     */</span></span><br><span class="line">	    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">killWithPid</span><span class="params">(Set&lt;Integer&gt; pids)</span></span>&#123;</span><br><span class="line">	        <span class="keyword">for</span> (Integer pid : pids) &#123;</span><br><span class="line">	            <span class="keyword">try</span> &#123;</span><br><span class="line">	                Process process = Runtime.getRuntime().exec(<span class="string">&quot;taskkill /F /pid &quot;</span>+pid+<span class="string">&quot;&quot;</span>);</span><br><span class="line">	                InputStream inputStream = process.getInputStream();</span><br><span class="line">	                String txt = readTxt(inputStream, <span class="string">&quot;GBK&quot;</span>);</span><br><span class="line">	                System.out.println(txt);</span><br><span class="line">	            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">	                e.printStackTrace();</span><br><span class="line">	            &#125;</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">read</span><span class="params">(InputStream in,String charset,<span class="keyword">int</span> pid)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">	    	ports.add(pid);</span><br><span class="line">	    	List&lt;String&gt; data = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in, charset));</span><br><span class="line">	        String line;</span><br><span class="line">	        <span class="keyword">while</span>((line = reader.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">	            <span class="keyword">boolean</span> validPort = validPort(line);</span><br><span class="line">	            <span class="keyword">if</span>(validPort)&#123;</span><br><span class="line">	                data.add(line);</span><br><span class="line">	            &#125;</span><br><span class="line">	        &#125;</span><br><span class="line">	        reader.close();</span><br><span class="line">	        <span class="keyword">return</span> data;</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">readTxt</span><span class="params">(InputStream in,String charset)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">	        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in, charset));</span><br><span class="line">	        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">	        String line;</span><br><span class="line">	        <span class="keyword">while</span>((line = reader.readLine()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">	            sb.append(line);</span><br><span class="line">	        &#125;</span><br><span class="line">	        reader.close();</span><br><span class="line">	        <span class="keyword">return</span> sb.toString();</span><br><span class="line">	    &#125;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2、调用杀死进程的工具类实现openoffice的重启</p>
<img src="/2021/06/18/Java-%E9%87%8D%E5%90%AFopenoffice%E6%9C%8D%E5%8A%A1/image-20210618150933017.png" class="" title="image-20210618150933017">

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value(value = &quot;$&#123;feezet.path.OpenOffice_HOME&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String OpenOffice_HOME;	</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 重启openoffice</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">restartOpenOffice</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		</span><br><span class="line">    	<span class="comment">//1.判断openoffice是否在运行</span></span><br><span class="line">    	String port =<span class="string">&quot;8100&quot;</span>;</span><br><span class="line">    	<span class="comment">//查找进程号</span></span><br><span class="line">    	Runtime runtime = Runtime.getRuntime();</span><br><span class="line">        Process p = runtime.exec(<span class="string">&quot;cmd /c netstat -ano | findstr \&quot;&quot;</span>+port+<span class="string">&quot;\&quot;&quot;</span>);</span><br><span class="line">        InputStream inputStream = p.getInputStream();</span><br><span class="line">        List&lt;String&gt; read = KillServerUtil.read(inputStream, <span class="string">&quot;UTF-8&quot;</span>,Integer.parseInt(port));</span><br><span class="line">        <span class="keyword">if</span>(read.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=====openoffice服务未启动，启动openoffice服务=====&quot;</span>);</span><br><span class="line">            <span class="comment">//如果openoffice没有在运行，那么就启动服务</span></span><br><span class="line">            <span class="keyword">if</span> (OpenOffice_HOME.charAt(OpenOffice_HOME.length() - <span class="number">1</span>) != <span class="string">&#x27;\\&#x27;</span>) &#123;</span><br><span class="line">                OpenOffice_HOME += <span class="string">&quot;\\&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 启动OpenOffice的服务</span></span><br><span class="line">            String command = OpenOffice_HOME</span><br><span class="line">                             + <span class="string">&quot;program\\soffice -headless -accept=\&quot;socket,host=127.0.0.1,port=8100;urp;\&quot; -nofirststartwizard&quot;</span>;</span><br><span class="line">            Process pro = Runtime.getRuntime().exec(command);</span><br><span class="line">            System.out.println(<span class="string">&quot;=====openoffice服务启动成功=====&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=====openoffice服务正在运行，关闭openoffice服务=====&quot;</span>);</span><br><span class="line">    	<span class="comment">//2.杀死该进程</span></span><br><span class="line">        Set&lt;Integer&gt; ports = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> pid = Integer.parseInt(port);</span><br><span class="line">        ports.add(pid);</span><br><span class="line">        KillServerUtil.ports = ports;</span><br><span class="line">        KillServerUtil.start(pid);</span><br><span class="line">        System.out.println(<span class="string">&quot;=====openoffice服务关闭成功=====&quot;</span>);</span><br><span class="line">        <span class="comment">//3.启动服务</span></span><br><span class="line">        System.out.println(<span class="string">&quot;=====开始重新启动openoffice服务=====&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (OpenOffice_HOME.charAt(OpenOffice_HOME.length() - <span class="number">1</span>) != <span class="string">&#x27;\\&#x27;</span>) &#123;</span><br><span class="line">            OpenOffice_HOME += <span class="string">&quot;\\&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 启动OpenOffice的服务</span></span><br><span class="line">        String command = OpenOffice_HOME</span><br><span class="line">                + <span class="string">&quot;program\\soffice -headless -accept=\&quot;socket,host=127.0.0.1,port=8100;urp;\&quot; -nofirststartwizard&quot;</span>;</span><br><span class="line">		Process pro = Runtime.getRuntime().exec(command);</span><br><span class="line">		System.out.println(<span class="string">&quot;=====openoffice服务启动成功=====&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>




<p>参考：<a href="https://blog.csdn.net/TaoYuanKuangDao/article/details/84140910">https://blog.csdn.net/TaoYuanKuangDao/article/details/84140910</a></p>
<p>​            <a href="https://zhidao.baidu.com/question/813257675762675372.html">https://zhidao.baidu.com/question/813257675762675372.html</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Java_实现重启openoffice服务</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven项目报错:More than one fragment with the name [spring_web] was found. This is not legal with relative ordering.</title>
    <url>/2021/03/08/Maven%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99-More-than-one-fragment-with-the-name-spring-web-was-found-This-is-not-legal-with-relative-ordering/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">More than one fragment with the name [spring_web] was found. This is not legal with relative ordering.</span><br></pre></td></tr></table></figure>
<p>在web.xml加上这一句</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;absolute-ordering &#x2F;&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/03/08/Maven%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99-More-than-one-fragment-with-the-name-spring-web-was-found-This-is-not-legal-with-relative-ordering/image-20210308144543285.png" class="" title="image-20210308144543285">



<p>参考：<a href="https://blog.csdn.net/PursueExcellence/article/details/89981690">https://blog.csdn.net/PursueExcellence/article/details/89981690</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Maven项目报错</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql性能监控语句</title>
    <url>/2021/03/29/MySql%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<p>1、慢查询日志查询</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> &quot;%slow%&quot;;</span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;long_query_time&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> slow_query_log<span class="operator">=</span><span class="keyword">ON</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">GLOBAL</span> long_query_time<span class="operator">=</span><span class="number">0.001</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;%long_query_time%&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>2、MySql缓存过大</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> @<span class="variable">@query</span>_cache_type;</span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@global</span>.query_cache_size;</span><br></pre></td></tr></table></figure>
<p>3、哪条sql占用资源最多</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>,查看每个客户端IP过来的连接消耗了多少资源。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> host_summary;</span><br><span class="line"> </span><br><span class="line"><span class="number">2</span>,查看某个数据文件上发生了多少IO请求。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> io_global_by_file_by_bytes;</span><br><span class="line"> </span><br><span class="line"><span class="number">3</span>,查看每个用户消耗了多少资源。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> user_summary;</span><br><span class="line"> </span><br><span class="line"><span class="number">4</span>,查看总共分配了多少内存。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> memory_global_total;</span><br><span class="line"> </span><br><span class="line"><span class="number">5</span>,数据库连接来自哪里，以及这些连接对数据库的请求情况是怎样的？</span><br><span class="line">查看当前连接情况。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> host, current_connections, statements <span class="keyword">from</span> host_summary;</span><br><span class="line"> </span><br><span class="line"><span class="number">6</span>,查看当前正在执行的<span class="keyword">SQL</span>和执行<span class="keyword">show</span> <span class="keyword">full</span> processlist的效果相当。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> conn_id, <span class="keyword">user</span>, current_statement, last_statement <span class="keyword">from</span> session;</span><br><span class="line"> </span><br><span class="line"><span class="number">7</span>,数据库中哪些<span class="keyword">SQL</span>被频繁执行？</span><br><span class="line">执行下面命令查询TOP <span class="number">10</span>最热<span class="keyword">SQL</span>。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> db,exec_count,query <span class="keyword">from</span> statement_analysis <span class="keyword">order</span> <span class="keyword">by</span> exec_count <span class="keyword">desc</span> limit <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="number">8</span>,哪个文件产生了最多的IO，读多，还是写的多？</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> io_global_by_file_by_bytes limit <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="number">9</span>,哪个表上的IO请求最多？</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> io_global_by_file_by_bytes <span class="keyword">where</span> file <span class="keyword">like</span> <span class="string">&#x27;%ibd&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> total <span class="keyword">desc</span> limit <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="number">10</span>,哪个表被访问的最多？</span><br><span class="line">先访问statement_analysis，根据热门<span class="keyword">SQL</span>排序找到相应的数据表。</span><br><span class="line">哪些语句延迟比较严重？</span><br><span class="line">查看statement_analysis中avg_latency的最高的<span class="keyword">SQL</span>。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> statement_analysis <span class="keyword">order</span> <span class="keyword">by</span> avg_latency <span class="keyword">desc</span> limit <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="number">11</span>,或者查看statements_with_runtimes_in_95th_percentile视图。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> statements_with_runtimes_in_95th_percentile;</span><br><span class="line"> </span><br><span class="line"><span class="number">12</span>,哪些<span class="keyword">SQL</span>执行了全表扫描或执行了排序操作？</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> statements_with_sorting;</span><br><span class="line"> </span><br><span class="line"> mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> statements_with_full_table_scans;</span><br><span class="line"> </span><br><span class="line"><span class="number">13</span>,哪些<span class="keyword">SQL</span>语句使用了临时表，又有哪些用到了磁盘临时表？</span><br><span class="line">查看statement_analysis中哪个<span class="keyword">SQL</span>的tmp_tables 、tmp_disk_tables值大于<span class="number">0</span>即可。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> db, query, tmp_tables, tmp_disk_tables <span class="keyword">from</span> statement_analysis <span class="keyword">where</span> tmp_tables<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">or</span> tmp_disk_tables <span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">order</span> <span class="keyword">by</span> (tmp_tables<span class="operator">+</span>tmp_disk_tables) <span class="keyword">desc</span> limit <span class="number">20</span>;</span><br><span class="line"> </span><br><span class="line"><span class="number">14</span>,也可以查看statements_with_temp_tables视图。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> statements_with_temp_tables\G</span><br><span class="line"> </span><br><span class="line"><span class="number">15</span> 哪个表占用了最多的buffer pool？</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> innodb_buffer_stats_by_table <span class="keyword">order</span> <span class="keyword">by</span> allocated <span class="keyword">desc</span> limit <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="number">16</span>,每个库（database）占用多少buffer pool？</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> innodb_buffer_stats_by_schema <span class="keyword">order</span> <span class="keyword">by</span> allocated <span class="keyword">desc</span> limit <span class="number">10</span>;</span><br><span class="line"> </span><br><span class="line"><span class="number">17</span>,每个连接分配多少内存？</span><br><span class="line">利用session表和memory_by_thread_by_current_bytes分配表进行关联查询。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> b.user, current_count_used, current_allocated, current_avg_alloc, current_max_alloc, total_allocated,current_statement <span class="keyword">from</span> memory_by_thread_by_current_bytes a, session b <span class="keyword">where</span> a.thread_id <span class="operator">=</span> b.thd_id;</span><br><span class="line"> </span><br><span class="line"><span class="number">18</span>,MySQL自增长字段的最大值和当前已经使用到的值？</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> schema_auto_increment_columns;</span><br><span class="line"> </span><br><span class="line"><span class="number">19</span>,MySQL索引使用情况统计？</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> schema_index_statistics;</span><br><span class="line"><span class="number">20</span>,MySQL有哪些冗余索引和无用索引？</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> schema_redundant_indexes;</span><br><span class="line"> </span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> schema_unused_indexes;</span><br><span class="line"> </span><br><span class="line"><span class="number">21</span>,MySQL内部有多个线程在运行？</span><br><span class="line">MySQL内部的线程类型及数量。</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">user</span>, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> processlist <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>MySql性能查询</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql_sql语句学习</title>
    <url>/2021/06/10/MySql-sql%E8%AF%AD%E5%8F%A5%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>先运行存储路径的记录</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> fzt_attr_new(</span><br><span class="line">id,filename,punid,filesize,type,file_url,create_by,create_time,update_by,update_time,del_flag,pdf_url,document_type) </span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">unid,filename,punid,filesize,TYPE,file_url,create_by,create_time,update_by,update_time,del_flag,<span class="keyword">NULL</span>,<span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">FROM</span> fzt_attr </span><br><span class="line"><span class="keyword">WHERE</span> (del_flag<span class="operator">&lt;&gt;</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">OR</span> del_flag <span class="keyword">IS</span> <span class="keyword">NULL</span>) </span><br><span class="line"><span class="keyword">AND</span> (content<span class="operator">=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> content <span class="keyword">IS</span> <span class="keyword">NULL</span>)</span><br><span class="line"><span class="keyword">AND</span> (file_url <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> file_url<span class="operator">&lt;&gt;</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">AND</span> (save_type<span class="operator">=</span><span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>再运行存储在大字段里面的文件 file_url先设为<span class="keyword">Null</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> fzt_attr_new(</span><br><span class="line">id,filename,punid,filesize,type,file_url,create_by,create_time,update_by,update_time,del_flag,pdf_url,document_type) </span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">unid,filename,punid,filesize,TYPE,</span><br><span class="line">CONCAT(<span class="string">&#x27;D:\\attr\\file_old\\&#x27;</span>,fzt_attr.unid,<span class="string">&#x27;\\&#x27;</span>,fzt_attr.unid,<span class="string">&#x27;.&#x27;</span>,<span class="keyword">RIGHT</span>(RTRIM(fzt_attr.filename), LOCATE(<span class="string">&#x27;.&#x27;</span>,REVERSE(RTRIM(fzt_attr.filename))) <span class="operator">-</span> <span class="number">1</span>)) <span class="keyword">AS</span> file_url</span><br><span class="line">,create_by,create_time,update_by,update_time,del_flag,<span class="keyword">NULL</span>,<span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">FROM</span> fzt_attr </span><br><span class="line"><span class="keyword">WHERE</span> (del_flag<span class="operator">&lt;&gt;</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">OR</span> del_flag <span class="keyword">IS</span> <span class="keyword">NULL</span>) </span><br><span class="line"><span class="keyword">AND</span> (content<span class="operator">&lt;&gt;</span><span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> content <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line"><span class="keyword">AND</span> (file_url <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> file_url<span class="operator">=</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">AND</span> (save_type<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>拼接字符串</span><br><span class="line">CONCAT(<span class="string">&#x27;D:\\attr\\file_old\\&#x27;</span>,fzt_attr.unid,<span class="string">&#x27;\\&#x27;</span>,fzt_attr.unid,<span class="string">&#x27;.&#x27;</span>,<span class="keyword">RIGHT</span>(RTRIM(fzt_attr.filename),LOCATE(<span class="string">&#x27;.&#x27;</span>,REVERSE(RTRIM(fzt_attr.filename))) <span class="operator">-</span> <span class="number">1</span>)) <span class="keyword">AS</span> file_url</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>获取文件名称(fzt_attr.filename)的后缀名不含.</span><br><span class="line"><span class="keyword">RIGHT</span>(RTRIM(fzt_attr.filename),LOCATE(<span class="string">&#x27;.&#x27;</span>,REVERSE(RTRIM(fzt_attr.filename))) <span class="operator">-</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>MySql学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle出现ORA-01045的解决方法</title>
    <url>/2021/02/20/ORA-01045/</url>
    <content><![CDATA[<h3 id="1、Oracle报错：ORA-01045"><a href="#1、Oracle报错：ORA-01045" class="headerlink" title="1、Oracle报错：ORA-01045"></a>1、Oracle报错：ORA-01045</h3><h4 id="（1）原因：新添加的用户没有赋予权限"><a href="#（1）原因：新添加的用户没有赋予权限" class="headerlink" title="（1）原因：新添加的用户没有赋予权限"></a>（1）原因：新添加的用户没有赋予权限</h4><h4 id="（2）解决办法："><a href="#（2）解决办法：" class="headerlink" title="（2）解决办法："></a>（2）解决办法：</h4><p>使用系统用户登录后，使用如下sql语句给出错用户赋权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grant create session to UserName;(UserName是登录出错的用户名)</span><br><span class="line">如想给scott赋予权限：使用 </span><br><span class="line">grant create session to scott;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Oracle报错ORA-01045</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle使用PLSQLDev工具</title>
    <url>/2021/02/22/Oracle%E4%BD%BF%E7%94%A8plsqlDev/</url>
    <content><![CDATA[<h4 id="1、安装Oracle-11g-64位"><a href="#1、安装Oracle-11g-64位" class="headerlink" title="1、安装Oracle 11g 64位"></a>1、安装Oracle 11g 64位</h4><h4 id="2、安装32位的Oracle客户端（-instantclient-basic-win32-11-2-0-1-0）"><a href="#2、安装32位的Oracle客户端（-instantclient-basic-win32-11-2-0-1-0）" class="headerlink" title="2、安装32位的Oracle客户端（ instantclient-basic-win32-11.2.0.1.0）"></a>2、安装32位的Oracle客户端（ instantclient-basic-win32-11.2.0.1.0）</h4><p>下载instantclient-basic-win32-11.2.0.1.0.zip (一定得是32位的，不要下错了版本，Oracle官网有下载）</p>
<p>下载地址：<a href="http://www.oracle.com/technetwork/cn/topics/winsoft-095945-zhs.html">http://www.oracle.com/technetwork/cn/topics/winsoft-095945-zhs.html</a></p>
<p>将其解压至Oracle安装目录的Product下（本机命名为：instantclient_11_1）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\Environment\ORACLE\Install\product\instantclient_11_1</span><br></pre></td></tr></table></figure>
<img src="/2021/02/22/Oracle%E4%BD%BF%E7%94%A8plsqlDev/image-20210225164332613.png" class="">

<p>拷贝数据库安装根目录下的一个目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\Environment\ORACLE\Install\product\11.2.0\dbhome_1NETWORK</span><br></pre></td></tr></table></figure>
<p>到Oracle客户端目录下</p>
<img src="/2021/02/22/Oracle%E4%BD%BF%E7%94%A8plsqlDev/image-20210225164641791.png" class="">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\Environment\ORACLE\Install\product\instantclient_11_1（其实只需要 NETWORK\ADMIN\tnsnames.ora）</span><br></pre></td></tr></table></figure>
<img src="/2021/02/22/Oracle%E4%BD%BF%E7%94%A8plsqlDev/image-20210225164356022.png" class="">

<h4 id="3、安装PL-SQL-Developer"><a href="#3、安装PL-SQL-Developer" class="headerlink" title="3、安装PL/SQL Developer"></a>3、安装PL/SQL Developer</h4><p>安装 PL/SQL Developer，在perference-&gt;Connection里面设置OCI Library和Oracle_Home，例如本机设置为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Oracle Home ：D:\Environment\ORACLE\Install\product\instantclient_11_1</span><br><span class="line">OCI Library ：D:\Environment\ORACLE\Install\product\instantclient_11_1\oci.dll</span><br></pre></td></tr></table></figure>
<img src="/2021/02/22/Oracle%E4%BD%BF%E7%94%A8plsqlDev/image-20210225164515462.png" class="">
<p>启动 PL/SQL Developer ，运行无问题。 </p>
<p>查看Oracle编码方式字符集</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select userenv(&#39;language&#39;) from dual;</span><br></pre></td></tr></table></figure>






<p>参考：<a href="https://blog.csdn.net/lee_charles/article/details/81949959">https://blog.csdn.net/lee_charles/article/details/81949959</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Oracle使用PLSQLDev工具</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle修改用户的默认表空间名</title>
    <url>/2021/03/04/Oracle%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%90%8D/</url>
    <content><![CDATA[<p>1、查看表空间名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PlSqlDev的SQLwindow:</span><br><span class="line">select * from Dba_Tablespaces 查看所有表空间的信息</span><br><span class="line">select * from user_users 查看当前用户的表空间名信息</span><br></pre></td></tr></table></figure>
<img src="/2021/03/04/Oracle%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%90%8D/image-20210304120118424.png" class="">

<p>2、打开Oracle的SQLPlus</p>
<img src="/2021/03/04/Oracle%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%90%8D/image-20210304120215254.png" class="">

<p>（1）首先输入账号密码连接到Oracle</p>
<img src="/2021/03/04/Oracle%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%90%8D/image-20210304120320790.png" class="">

<p>（2）连接到管理员权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$sqlplus &#x2F; as sysdba</span><br></pre></td></tr></table></figure>
<img src="/2021/03/04/Oracle%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%90%8D/image-20210304120351078.png" class="">

<p>（3）修改表空间名称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter tablespace 旧名称 rename to 新名称;</span><br></pre></td></tr></table></figure>
<p>（4）遇到问题：表空间处于脱机状态</p>
<img src="/2021/03/04/Oracle%E4%BF%AE%E6%94%B9%E8%A1%A8%E7%A9%BA%E9%97%B4%E5%90%8D/image-20210304120613310.png" class="">

<p>（5）将表空间状态改为在线</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter tablespace USERS online;</span><br></pre></td></tr></table></figure>
<p>（6）修改表空间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter tablespace 旧名称 rename to 新名称;</span><br><span class="line">select name from v$tablespace; 查看修改后的所有表空间名称</span><br></pre></td></tr></table></figure>
<p>3、新建用户步骤</p>
<p>（1）新建表空间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*分为四步 *&#x2F;</span><br><span class="line">&#x2F;*第1步：创建临时表空间  *&#x2F;</span><br><span class="line">create temporary tablespace user_temp </span><br><span class="line">tempfile &#39;D:\oracle\oradata\Oracle9i\user_temp.dbf&#39;</span><br><span class="line">size 50m </span><br><span class="line">autoextend on </span><br><span class="line">next 50m maxsize 20480m </span><br><span class="line">extent management local; </span><br><span class="line"> </span><br><span class="line">&#x2F;*第2步：创建数据表空间  *&#x2F;</span><br><span class="line">create tablespace user_data </span><br><span class="line">logging </span><br><span class="line">datafile &#39;D:\oracle\oradata\Oracle9i\user_data.dbf&#39;</span><br><span class="line">size 50m </span><br><span class="line">autoextend on </span><br><span class="line">next 50m maxsize 20480m </span><br><span class="line">extent management local; </span><br><span class="line"> </span><br><span class="line">&#x2F;*第3步：创建用户并指定表空间  *&#x2F;</span><br><span class="line">create user username identified by password </span><br><span class="line">default tablespace user_data </span><br><span class="line">temporary tablespace user_temp; </span><br><span class="line"> </span><br><span class="line">&#x2F;*第4步：给用户授予权限  *&#x2F;</span><br><span class="line">grant connect,resource,dba to username;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create temporary tablespace datacenter_temp </span><br><span class="line">tempfile &#39;D:\app\feezet01\oradata\orcl\datacenter_temp.dbf&#39;</span><br><span class="line">size 50m </span><br><span class="line">autoextend on </span><br><span class="line">next 50m maxsize 20480m </span><br><span class="line">extent management local; </span><br><span class="line"></span><br><span class="line">create tablespace datacenter_data </span><br><span class="line">logging </span><br><span class="line">datafile &#39;D:\app\feezet01\oradata\orcl\datacenter_data.dbf&#39;</span><br><span class="line">size 50m </span><br><span class="line">autoextend on </span><br><span class="line">next 50m maxsize 20480m </span><br><span class="line">extent management local; </span><br><span class="line"></span><br><span class="line">create user datacenter identified by datacenter </span><br><span class="line">default tablespace datacenter_data </span><br><span class="line">temporary tablespace datacenter_temp;</span><br><span class="line"></span><br><span class="line">grant connect,resource,dba to datacenter;</span><br></pre></td></tr></table></figure>


<p>（2）新建用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plsql dev 工具可以直接新建用户</span><br></pre></td></tr></table></figure>
<p>4、修改用户默认表空间</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER USER TEST DEFAULT TABLESPACE TEST_DATA;</span><br></pre></td></tr></table></figure>
<p>5、cmd导入dmp文件到oracle数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">imp qywx&#x2F;1456622145@192.168.1.100:1521&#x2F;orcl file&#x3D;D:&#x2F;Datas&#x2F;qywx&#x2F;normal.dmp full&#x3D;y</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Oracle命令</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle配置字符集解决中文乱码</title>
    <url>/2021/03/08/Oracle%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SQL*Plus: Release 11.2.0.1.0 Production on 星期一 3月 8 15:55:17 2021</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2010, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line">请输入用户名:  system</span><br><span class="line">输入口令:</span><br><span class="line"></span><br><span class="line">连接到:</span><br><span class="line">Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production</span><br><span class="line">With the Partitioning, OLAP, Data Mining and Real Application Testing options</span><br><span class="line"></span><br><span class="line">SQL&gt; $sqlplus &#x2F; as sysdba</span><br><span class="line"></span><br><span class="line">SQL*Plus: Release 11.2.0.1.0 Production on 星期一 3月 8 15:55:33 2021</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2010, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">连接到:</span><br><span class="line">Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production</span><br><span class="line">With the Partitioning, OLAP, Data Mining and Real Application Testing options</span><br><span class="line"></span><br><span class="line">SQL&gt; SHUTDOWN IMMEDIATE;</span><br><span class="line">数据库已经关闭。</span><br><span class="line">已经卸载数据库。</span><br><span class="line">ORACLE 例程已经关闭。</span><br><span class="line">SQL&gt; STARTUP MOUNT;</span><br><span class="line">ORACLE 例程已经启动。</span><br><span class="line"></span><br><span class="line">Total System Global Area 1.0222E+10 bytes</span><br><span class="line">Fixed Size                  2184592 bytes</span><br><span class="line">Variable Size            5301602928 bytes</span><br><span class="line">Database Buffers         4898947072 bytes</span><br><span class="line">Redo Buffers               19075072 bytes</span><br><span class="line">数据库装载完毕。</span><br><span class="line">SQL&gt; ALTER SYSTEM ENABLE RESTRICTED SESSION;</span><br><span class="line"></span><br><span class="line">系统已更改。</span><br><span class="line"></span><br><span class="line">SQL&gt; ALTER SYSTEM SET JOB_QUEUE_PROCESSES&#x3D;0;</span><br><span class="line"></span><br><span class="line">系统已更改。</span><br><span class="line"></span><br><span class="line">SQL&gt; ALTER SYSTEM SET AQ_TM_PROCESSES&#x3D;0;</span><br><span class="line"></span><br><span class="line">系统已更改。</span><br><span class="line"></span><br><span class="line">SQL&gt; ALTER DATABASE OPEN;</span><br><span class="line"></span><br><span class="line">数据库已更改。</span><br><span class="line"></span><br><span class="line">SQL&gt; ALTER DATABASE CHARACTER SET INTERNAL_USE UTF8;</span><br><span class="line"></span><br><span class="line">数据库已更改。</span><br><span class="line"></span><br><span class="line">SQL&gt; SHUTDOWN IMMEDIATE;</span><br><span class="line">数据库已经关闭。</span><br><span class="line">已经卸载数据库。</span><br><span class="line">ORACLE 例程已经关闭。</span><br><span class="line">SQL&gt; STARTUP;</span><br><span class="line">ORACLE 例程已经启动。</span><br><span class="line"></span><br><span class="line">Total System Global Area 1.0222E+10 bytes</span><br><span class="line">Fixed Size                  2184592 bytes</span><br><span class="line">Variable Size            5301602928 bytes</span><br><span class="line">Database Buffers         4898947072 bytes</span><br><span class="line">Redo Buffers               19075072 bytes</span><br><span class="line">数据库装载完毕。</span><br><span class="line">数据库已经打开。</span><br><span class="line">SQL&gt; select userenv(&#39;language&#39;) from dual;</span><br><span class="line"></span><br><span class="line">USERENV(&#39;LANGUAGE&#39;)</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">SIMPLIFIED CHINESE_CHINA.UTF8</span><br><span class="line"></span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://blog.csdn.net/River_Continent/article/details/94732734">https://blog.csdn.net/River_Continent/article/details/94732734</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Oracle中文乱码</tag>
      </tags>
  </entry>
  <entry>
    <title>VUE项目报错:Cannot find module &#39;webpack/lib/RuleSet&#39;</title>
    <url>/2021/01/26/VUE%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99-Cannot-find-module-%E2%80%98webpack-lib-RuleSet%E2%80%98-%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h3 id="1、报错"><a href="#1、报错" class="headerlink" title="1、报错"></a>1、报错</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: Cannot find module &#39;webpack&#x2F;lib&#x2F;RuleSet&#39;</span><br></pre></td></tr></table></figure>
<p>在第一个问题的时候还试过把node_modules文件夹和package-lock.json文件删除然后再npm install,不知道有没有用，一起做个笔记把<br>解决方案：<br><a href="https://segmentfault.com/q/1010000012177571/a-1020000012180629">https://segmentfault.com/q/1010000012177571/a-1020000012180629</a><br>底下的评论<br><img src="https://img-blog.csdnimg.cn/20201127091642782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70#pic_center"></p>
<h3 id="2、执行完之后运行报错"><a href="#2、执行完之后运行报错" class="headerlink" title="2、执行完之后运行报错"></a>2、执行完之后运行报错</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: Rule can only have one resource source (provided resource and test +</span><br></pre></td></tr></table></figure>
<p>解决方案：<br><a href="https://blog.csdn.net/weixin_40643648/article/details/109444867">https://blog.csdn.net/weixin_40643648/article/details/109444867</a><br>重装webpage</p>
<h3 id="3、执行之后报错"><a href="#3、执行之后报错" class="headerlink" title="3、执行之后报错"></a>3、执行之后报错</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">These dependencies were not found:</span><br><span class="line">@videojs&#x2F;vhs-utils&#x2F;dist&#x2F;byte-helpers in .&#x2F;node_modules&#x2F;video.js&#x2F;dist&#x2F;video.es.js</span><br><span class="line">@videojs&#x2F;vhs-utils&#x2F;dist&#x2F;containers in .&#x2F;node_modules&#x2F;video.js&#x2F;dist&#x2F;video.es.js</span><br></pre></td></tr></table></figure>
<p>解决方案：<br>百度发现错误是缺少依赖，于是直接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install </span><br><span class="line">yarn run server</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>VUE项目报错</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10一台电脑上安装切换多个版本的JDK</title>
    <url>/2021/01/28/Windows10%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E5%88%87%E6%8D%A2%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84JDK/</url>
    <content><![CDATA[<h2 id="1、下载安装JDK"><a href="#1、下载安装JDK" class="headerlink" title="1、下载安装JDK"></a>1、下载安装JDK</h2><p><img src="https://img-blog.csdnimg.cn/20210209212244944.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20210209212300212.png"><br><img src="https://img-blog.csdnimg.cn/20210209212310968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<h2 id="2、配置环境变量"><a href="#2、配置环境变量" class="headerlink" title="2、配置环境变量"></a>2、配置环境变量</h2><h4 id="（1）配置JAVA8-HOME"><a href="#（1）配置JAVA8-HOME" class="headerlink" title="（1）配置JAVA8_HOME"></a>（1）配置JAVA8_HOME</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA8_HOME</span><br><span class="line">D:\Environment\JDK\JDK8\JDK</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209212445372.png"></p>
<h4 id="（2）配置JAVA11-HOME"><a href="#（2）配置JAVA11-HOME" class="headerlink" title="（2）配置JAVA11_HOME"></a>（2）配置JAVA11_HOME</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA11_HOME</span><br><span class="line">D:\Environment\JDK\JDK11\JDK</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209212531681.png"></p>
<h4 id="（3）配置JAVA-HOME"><a href="#（3）配置JAVA-HOME" class="headerlink" title="（3）配置JAVA_HOME"></a>（3）配置JAVA_HOME</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JAVA_HOME</span><br><span class="line">%JAVA11_HOME%</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209212606448.png"></p>
<h4 id="（4）配置CLASSPATH"><a href="#（4）配置CLASSPATH" class="headerlink" title="（4）配置CLASSPATH"></a>（4）配置CLASSPATH</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CLASSPATH</span><br><span class="line">.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209212733578.png"></p>
<h4 id="（5）配置PATH（重点）"><a href="#（5）配置PATH（重点）" class="headerlink" title="（5）配置PATH（重点）"></a>（5）配置PATH（重点）</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%JAVA_HOME%\bin</span><br><span class="line">%JAVA_HOME%\jre\bin</span><br></pre></td></tr></table></figure>
<p>这两个要加在原先的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\ProgramData\Oracle\Java\javapath</span><br></pre></td></tr></table></figure>
<p>前面；<br>然后去</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\ProgramData\Oracle\Java\javapath</span><br></pre></td></tr></table></figure>
<p>路径将</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.exe, javaw.exe 和 javaws.exe</span><br></pre></td></tr></table></figure>
<p>三个文件删除<br><img src="https://img-blog.csdnimg.cn/20210209212909263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<h2 id="3、测试"><a href="#3、测试" class="headerlink" title="3、测试"></a>3、测试</h2><h4 id="（1）测试JDK是否安装成功"><a href="#（1）测试JDK是否安装成功" class="headerlink" title="（1）测试JDK是否安装成功"></a>（1）测试JDK是否安装成功</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209213339349.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209213405372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">javac</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209213424598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<h4 id="（2）修改JAVA-HOME为JAVA8-HOME"><a href="#（2）修改JAVA-HOME为JAVA8-HOME" class="headerlink" title="（2）修改JAVA_HOME为JAVA8_HOME"></a>（2）修改JAVA_HOME为JAVA8_HOME</h4><p><img src="https://img-blog.csdnimg.cn/20210209213517585.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209213608464.png"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209213625850.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">javac</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210209213644308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>JDK安装</tag>
      </tags>
  </entry>
  <entry>
    <title>Ajax学习笔记</title>
    <url>/2021/01/28/ajax%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>1、思维导图<br><img src="https://img-blog.csdnimg.cn/20210128102220350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70#pic_center"><br>2、项目github仓库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;liuwf-github&#x2F;ajax-study-queryprovince.git</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Ajax学习</tag>
      </tags>
  </entry>
  <entry>
    <title>ch01-SpringMVC-requestmapping-使用java对象接收请求参数</title>
    <url>/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h2 id="一、流程"><a href="#一、流程" class="headerlink" title="一、流程"></a>一、流程</h2><h4 id="1、流程图："><a href="#1、流程图：" class="headerlink" title="1、流程图："></a>1、流程图：</h4><img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419155707021.png" class="" title="image-20210419155707021">

<h4 id="2、具体步骤"><a href="#2、具体步骤" class="headerlink" title="2、具体步骤"></a>2、具体步骤</h4><p>1、前端页面发起请求</p>
<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419154944773.png" class="" title="image-20210419154944773">

<p>2、点击提交参数，将form表单中的数据提交到对应的Controller中</p>
<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419154854045.png" class="" title="image-20210419154854045">

<p>3、后端使用Java对象接收参数</p>
<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419155023571.png" class="" title="image-20210419155023571">

<p>4、返回到将mv对象返回到show.jsp页面显示出来</p>
<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419155133199.png" class="" title="image-20210419155133199">

<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419155157711.png" class="" title="image-20210419155157711">

<h2 id="二、注意事项"><a href="#二、注意事项" class="headerlink" title="二、注意事项"></a>二、注意事项</h2><p>1、index.jsp发起请求时提交数据时的参数名要和实体类中的属性名一样</p>
<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419155358306.png" class="" title="image-20210419155358306">

<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419155419609.png" class="" title="image-20210419155419609">

<h2 id="三、源代码"><a href="#三、源代码" class="headerlink" title="三、源代码"></a>三、源代码</h2><h4 id="一、配置文件"><a href="#一、配置文件" class="headerlink" title="一、配置文件"></a>一、配置文件</h4><img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419151332569.png" class="" title="目录结构">

<p>1、web.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明、注册springmvc的核心对象DispatcherServlet</span></span><br><span class="line"><span class="comment">        需要在tomcat服务器启动时，创建DispatcherServlet对象的实例</span></span><br><span class="line"><span class="comment">        为什么要创建DispatcherServlet对象的实例呢？</span></span><br><span class="line"><span class="comment">            因为DispatcherServlet在他的创建过程中，会同时创建springmvc容器对象，读取springmvc的配置文件，</span></span><br><span class="line"><span class="comment">            把这个配置文件的对象都创建好，当用户发起请求时就可以直接使用对象了。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        servlet初始化会执行init()方法，DispatcherServlet中的init()&#123;</span></span><br><span class="line"><span class="comment">            //创建容器对象，读取配置文件</span></span><br><span class="line"><span class="comment">            webApplicationContext ctx = new ClassPathXlmApplicationContext(&quot;springmvc.xml&quot;);</span></span><br><span class="line"><span class="comment">            //把容器对象放入到ServletContext中</span></span><br><span class="line"><span class="comment">            getServletContext().setAttribute(key,ctx);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        启动tomcat服务器报错：无法读取这个文件 /WEB-INF/springmvc-servlet.xml(/WEB-INF/myspringmvc-servlet.xml)</span></span><br><span class="line"><span class="comment">        原因：springmvc创建容器对象时读取的配置文件默认地址是： /WEB-INF/&lt;servlet-name&gt;-servlet.xml</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myweb<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--自定义springmvc读取的配置文件的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--springmvc配置文件的位置的属性--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--指定自定义文件的位置--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--在tomcat启动后，创建Servelet对象</span></span><br><span class="line"><span class="comment">            load-on-startup:tomcat启动后创建对象的顺序。它的值是一个整数，数值越小，tomcat创建对象的时间越早</span></span><br><span class="line"><span class="comment">                            一般都是&gt;=0，一般不会是个负数</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myweb<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            在使用框架时，url-patten可以使用两种值</span></span><br><span class="line"><span class="comment">            1、使用扩展名方式 语法 *.xxx 其中：xxx是自定义的扩展名 常用的方式：*.do,*.action,*.mvc等等</span></span><br><span class="line"><span class="comment">                http://localhose:8080:/myweb/some.do 表示.do的请求都交给myweb这个中央调度器servlet来处理</span></span><br><span class="line"><span class="comment">                http://localhose:8080:/myweb/other.do</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            2、使用斜杠 &quot;/&quot;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注册声明过滤器，解决post乱码问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置项目中使用的字符编码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--强制请求对象（HttpServletRequest）使用encoding编码的值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--强制应答对象（HttpServletResponse）使用encoding编码的值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            /* 表示强制所有的请求先通过过滤器characterEncodingFilter</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>2、pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.bjpowernode<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ch02-requestmapping<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--servlet依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springmvc依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 编码和编译和JDK版本 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>3、springmvc.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--想要用@Controller注解就必须有组件扫描器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.bjpowernode.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明springmvc框架中的视图解析器，帮助开发人员设置视图文件的路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀：视图文件的路径--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/view/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀：视图文件的扩展名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="二、前端页面"><a href="#二、前端页面" class="headerlink" title="二、前端页面"></a>二、前端页面</h4><img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419151611307.png" class="" title="前端页面目录结构">

<p>1、index.jsp</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Stack</span><br><span class="line">  Date: 2021/1/14</span><br><span class="line">  Time: 15:39</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>提交参数给MyController<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;receiveproperty.do&quot;</span> <span class="attr">method</span> = <span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交参数&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>提交参数给MyController--使用对象接收参数<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;receiveparam.do&quot;</span> <span class="attr">method</span> = <span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交参数&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2、show.jsp</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Stack</span><br><span class="line">  Date: 2021/1/14</span><br><span class="line">  Time: 16:59</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>/WEB-INF/view/show.jsp<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>myname：$&#123;myname&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>myage：$&#123;myage&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>myStudent：$&#123;myStudent&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>3、other.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Stack</span><br><span class="line">  Date: 2021&#x2F;1&#x2F;14</span><br><span class="line">  Time: 16:59</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot; language&#x3D;&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;&#x2F;WEB-INF&#x2F;view&#x2F;other.jsp从request作用域来获取数据&lt;&#x2F;h3&gt;&lt;br &#x2F;&gt;</span><br><span class="line">    &lt;h3&gt;msg数据：$&#123;msg&#125;&lt;&#x2F;h3&gt;&lt;br&#x2F;&gt;</span><br><span class="line">    &lt;h3&gt;fun数据：$&#123;fun&#125;&lt;&#x2F;h3&gt;&lt;br&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="三、后端"><a href="#三、后端" class="headerlink" title="三、后端"></a>三、后端</h4><img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E4%BD%BF%E7%94%A8java%E5%AF%B9%E8%B1%A1%E6%8E%A5%E6%94%B6%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0/image-20210419151636096.png" class="" title="后端控制层及实体目录结构">

<p>1、MyController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bjpowernode.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bjpowernode.vo.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@RequestMapping</span>:</span></span><br><span class="line"><span class="comment"> *      value:所有请求地址的公共部分，叫做模块名称</span></span><br><span class="line"><span class="comment"> *      位置：放在类的上面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/some.do&quot;,&quot;/first.do&quot;&#125;)</span><span class="comment">/*斜杆表示这个地址是根地址*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">doSome</span><span class="params">()</span></span>&#123; <span class="comment">//doGet() --调用service请求处理数据等等</span></span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;欢迎使用springmvc做web开发&quot;</span>);</span><br><span class="line">        mv.addObject(<span class="string">&quot;fun&quot;</span>,<span class="string">&quot;执行的是doSome方法&quot;</span>);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;show&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/other.do&quot;,&quot;/second.do&quot;&#125;)</span><span class="comment">/*斜杆表示这个地址是根地址*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">doOther</span><span class="params">()</span></span>&#123; <span class="comment">//doGet() --调用service请求处理数据等等</span></span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;欢迎使用springmvc做web开发&quot;</span>);</span><br><span class="line">        mv.addObject(<span class="string">&quot;fun&quot;</span>,<span class="string">&quot;执行的是doOther方法&quot;</span>);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;other&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/receiveproperty.do&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">doReceiveproperty</span><span class="params">(<span class="meta">@RequestParam(value = &quot;rname&quot;,required = false)</span> String name,</span></span></span><br><span class="line"><span class="function"><span class="params">                                          <span class="meta">@RequestParam(value = &quot;rage&quot;,required = false)</span>Integer age)</span></span>&#123;</span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;myname&quot;</span>,name);</span><br><span class="line">        mv.addObject(<span class="string">&quot;myage&quot;</span>,age);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;show&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 试用java对象来接收参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/receiveparam.do&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">doReceiveproperty</span><span class="params">(Student myStudent)</span></span>&#123;</span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;myname&quot;</span>,myStudent.getName());</span><br><span class="line">        mv.addObject(<span class="string">&quot;myage&quot;</span>,myStudent.getAge());</span><br><span class="line">        mv.addObject(<span class="string">&quot;myStudent&quot;</span>,myStudent);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;show&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2、Student.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bjpowernode.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性名要和请求中参数名一样</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=============这是Student的无参构造方法================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setName&quot;</span>+name);</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setAge&quot;</span>+age);</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>ch01-SpringMVC-requestmapping-逐个接受参数</title>
    <url>/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<h2 id="一、流程"><a href="#一、流程" class="headerlink" title="一、流程"></a>一、流程</h2><h4 id="1、流程图："><a href="#1、流程图：" class="headerlink" title="1、流程图："></a>1、流程图：</h4><img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/image-20210419154300194.png" class="" title="image-20210419154300194">

<h4 id="2、具体步骤"><a href="#2、具体步骤" class="headerlink" title="2、具体步骤"></a>2、具体步骤</h4><p>1、前端页面发起请求</p>
<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/image-20210419152722759.png" class="" title="image-20210419152722759">

<p>2、点击提交参数，将form表单中的数据提交到对应的Controller中</p>
<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/image-20210419153415736.png" class="" title="image-20210419153415736">

<p>3、后端使用参数逐个接受数据</p>
<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/image-20210419153447489.png" class="" title="image-20210419153447489">

<p>4、返回到将mv对象返回到show.jsp页面显示出来</p>
<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/image-20210419153559261.png" class="" title="image-20210419153559261">

<img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/image-20210419153612549.png" class="" title="image-20210419153612549">

<h2 id="二、源代码"><a href="#二、源代码" class="headerlink" title="二、源代码"></a>二、源代码</h2><h4 id="一、配置文件"><a href="#一、配置文件" class="headerlink" title="一、配置文件"></a>一、配置文件</h4><img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/image-20210419151332569.png" class="" title="目录结构">

<p>1、web.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明、注册springmvc的核心对象DispatcherServlet</span></span><br><span class="line"><span class="comment">        需要在tomcat服务器启动时，创建DispatcherServlet对象的实例</span></span><br><span class="line"><span class="comment">        为什么要创建DispatcherServlet对象的实例呢？</span></span><br><span class="line"><span class="comment">            因为DispatcherServlet在他的创建过程中，会同时创建springmvc容器对象，读取springmvc的配置文件，</span></span><br><span class="line"><span class="comment">            把这个配置文件的对象都创建好，当用户发起请求时就可以直接使用对象了。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        servlet初始化会执行init()方法，DispatcherServlet中的init()&#123;</span></span><br><span class="line"><span class="comment">            //创建容器对象，读取配置文件</span></span><br><span class="line"><span class="comment">            webApplicationContext ctx = new ClassPathXlmApplicationContext(&quot;springmvc.xml&quot;);</span></span><br><span class="line"><span class="comment">            //把容器对象放入到ServletContext中</span></span><br><span class="line"><span class="comment">            getServletContext().setAttribute(key,ctx);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        启动tomcat服务器报错：无法读取这个文件 /WEB-INF/springmvc-servlet.xml(/WEB-INF/myspringmvc-servlet.xml)</span></span><br><span class="line"><span class="comment">        原因：springmvc创建容器对象时读取的配置文件默认地址是： /WEB-INF/&lt;servlet-name&gt;-servlet.xml</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myweb<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--自定义springmvc读取的配置文件的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--springmvc配置文件的位置的属性--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--指定自定义文件的位置--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--在tomcat启动后，创建Servelet对象</span></span><br><span class="line"><span class="comment">            load-on-startup:tomcat启动后创建对象的顺序。它的值是一个整数，数值越小，tomcat创建对象的时间越早</span></span><br><span class="line"><span class="comment">                            一般都是&gt;=0，一般不会是个负数</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myweb<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            在使用框架时，url-patten可以使用两种值</span></span><br><span class="line"><span class="comment">            1、使用扩展名方式 语法 *.xxx 其中：xxx是自定义的扩展名 常用的方式：*.do,*.action,*.mvc等等</span></span><br><span class="line"><span class="comment">                http://localhose:8080:/myweb/some.do 表示.do的请求都交给myweb这个中央调度器servlet来处理</span></span><br><span class="line"><span class="comment">                http://localhose:8080:/myweb/other.do</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            2、使用斜杠 &quot;/&quot;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注册声明过滤器，解决post乱码问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置项目中使用的字符编码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--强制请求对象（HttpServletRequest）使用encoding编码的值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--强制应答对象（HttpServletResponse）使用encoding编码的值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            /* 表示强制所有的请求先通过过滤器characterEncodingFilter</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>2、pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.bjpowernode<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ch02-requestmapping<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--servlet依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springmvc依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 编码和编译和JDK版本 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>3、springmvc.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--想要用@Controller注解就必须有组件扫描器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.bjpowernode.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明springmvc框架中的视图解析器，帮助开发人员设置视图文件的路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀：视图文件的路径--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/view/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀：视图文件的扩展名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="二、前端页面"><a href="#二、前端页面" class="headerlink" title="二、前端页面"></a>二、前端页面</h4><img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/image-20210419151611307.png" class="" title="前端页面目录结构">

<p>1、index.jsp</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Stack</span><br><span class="line">  Date: 2021/1/14</span><br><span class="line">  Time: 15:39</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>提交参数给MyController<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;receiveproperty.do&quot;</span> <span class="attr">method</span> = <span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交参数&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>提交参数给MyController--使用对象接收参数<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;receiveparam.do&quot;</span> <span class="attr">method</span> = <span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交参数&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2、show.jsp</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Stack</span><br><span class="line">  Date: 2021/1/14</span><br><span class="line">  Time: 16:59</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>/WEB-INF/view/show.jsp<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>myname：$&#123;myname&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>myage：$&#123;myage&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>myStudent：$&#123;myStudent&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>3、other.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Stack</span><br><span class="line">  Date: 2021&#x2F;1&#x2F;14</span><br><span class="line">  Time: 16:59</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot; language&#x3D;&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;&#x2F;WEB-INF&#x2F;view&#x2F;other.jsp从request作用域来获取数据&lt;&#x2F;h3&gt;&lt;br &#x2F;&gt;</span><br><span class="line">    &lt;h3&gt;msg数据：$&#123;msg&#125;&lt;&#x2F;h3&gt;&lt;br&#x2F;&gt;</span><br><span class="line">    &lt;h3&gt;fun数据：$&#123;fun&#125;&lt;&#x2F;h3&gt;&lt;br&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="三、后端"><a href="#三、后端" class="headerlink" title="三、后端"></a>三、后端</h4><img src="/2021/04/19/ch01-SpringMVC-requestmapping-%E9%80%90%E4%B8%AA%E6%8E%A5%E5%8F%97%E5%8F%82%E6%95%B0/image-20210419151636096.png" class="" title="后端控制层及实体目录结构">

<p>1、MyController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bjpowernode.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bjpowernode.vo.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@RequestMapping</span>:</span></span><br><span class="line"><span class="comment"> *      value:所有请求地址的公共部分，叫做模块名称</span></span><br><span class="line"><span class="comment"> *      位置：放在类的上面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/some.do&quot;,&quot;/first.do&quot;&#125;)</span><span class="comment">/*斜杆表示这个地址是根地址*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">doSome</span><span class="params">()</span></span>&#123; <span class="comment">//doGet() --调用service请求处理数据等等</span></span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;欢迎使用springmvc做web开发&quot;</span>);</span><br><span class="line">        mv.addObject(<span class="string">&quot;fun&quot;</span>,<span class="string">&quot;执行的是doSome方法&quot;</span>);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;show&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/other.do&quot;,&quot;/second.do&quot;&#125;)</span><span class="comment">/*斜杆表示这个地址是根地址*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">doOther</span><span class="params">()</span></span>&#123; <span class="comment">//doGet() --调用service请求处理数据等等</span></span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;欢迎使用springmvc做web开发&quot;</span>);</span><br><span class="line">        mv.addObject(<span class="string">&quot;fun&quot;</span>,<span class="string">&quot;执行的是doOther方法&quot;</span>);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;other&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/receiveproperty.do&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">doReceiveproperty</span><span class="params">(<span class="meta">@RequestParam(value = &quot;rname&quot;,required = false)</span> String name,</span></span></span><br><span class="line"><span class="function"><span class="params">                                          <span class="meta">@RequestParam(value = &quot;rage&quot;,required = false)</span>Integer age)</span></span>&#123;</span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;myname&quot;</span>,name);</span><br><span class="line">        mv.addObject(<span class="string">&quot;myage&quot;</span>,age);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;show&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 试用java对象来接收参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/receiveparam.do&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">doReceiveproperty</span><span class="params">(Student myStudent)</span></span>&#123;</span><br><span class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mv.addObject(<span class="string">&quot;myname&quot;</span>,myStudent.getName());</span><br><span class="line">        mv.addObject(<span class="string">&quot;myage&quot;</span>,myStudent.getAge());</span><br><span class="line">        mv.addObject(<span class="string">&quot;myStudent&quot;</span>,myStudent);</span><br><span class="line">        mv.setViewName(<span class="string">&quot;show&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2、Student.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bjpowernode.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性名要和请求中参数名一样</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=============这是Student的无参构造方法================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setName&quot;</span>+name);</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setAge&quot;</span>+age);</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>SpringMVC</tag>
      </tags>
  </entry>
  <entry>
    <title>ch03-SpringMVC-url-pattern</title>
    <url>/2021/04/19/ch03-SpringMVC-url-pattern/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Eclipse报错：eclipse ClassNotFoundException:org.jbpm.api.ProcessEngine</title>
    <url>/2021/02/08/eclipse-console%E6%89%93%E5%8D%B0%E5%87%BAClassNotFoundException-org-jbpm-api-ProcessEngine-%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h2 id="一、问题描述"><a href="#一、问题描述" class="headerlink" title="一、问题描述"></a>一、问题描述</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2021-2-8 9:33:28 org.apache.catalina.core.StandardContext listenerStart</span><br><span class="line">严重: Exception sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener</span><br><span class="line">java.lang.NoClassDefFoundError: org&#x2F;jbpm&#x2F;api&#x2F;ProcessEngine</span><br><span class="line">	at java.lang.Class.getDeclaredMethods0(Native Method)</span><br><span class="line">	at java.lang.Class.privateGetDeclaredMethods(Class.java:2436)</span><br><span class="line">	at java.lang.Class.getDeclaredMethods(Class.java:1793)</span><br><span class="line">	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:460)</span><br><span class="line">	at org.springframework.util.ReflectionUtils.doWithMethods(ReflectionUtils.java:443)</span><br><span class="line">	at org.springframework.util.ReflectionUtils.getAllDeclaredMethods(ReflectionUtils.java:484)</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getTypeForFactoryMethod(AbstractAutowireCapableBeanFactory.java:583)</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:521)</span><br><span class="line">	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)</span><br><span class="line">	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:222)</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:505)</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.__refresh(AbstractApplicationContext.java:362)</span><br><span class="line">	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:41010)</span><br><span class="line">	at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:255)</span><br><span class="line">	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199)</span><br><span class="line">	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45)</span><br><span class="line">	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4206)</span><br><span class="line">	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4705)</span><br><span class="line">	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)</span><br><span class="line">	at org.apache.catalina.core.StandardHost.start(StandardHost.java:840)</span><br><span class="line">	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1057)</span><br><span class="line">	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:463)</span><br><span class="line">	at org.apache.catalina.core.StandardService.start(StandardService.java:525)</span><br><span class="line">	at org.apache.catalina.core.StandardServer.start(StandardServer.java:754)</span><br><span class="line">	at org.apache.catalina.startup.Catalina.start(Catalina.java:595)</span><br><span class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)</span><br><span class="line">	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)</span><br><span class="line">	at java.lang.reflect.Method.invoke(Method.java:597)</span><br><span class="line">	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:289)</span><br><span class="line">	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:414)</span><br><span class="line">Caused by: java.lang.ClassNotFoundException: org.jbpm.api.ProcessEngine</span><br><span class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1680)</span><br><span class="line">	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)</span><br><span class="line">	... 31 more</span><br><span class="line">2021-2-8 9:33:28 org.apache.catalina.core.StandardContext start</span><br><span class="line">严重: Error listenerStart</span><br><span class="line">2021-2-8 9:33:28 org.apache.catalina.core.StandardContext start</span><br><span class="line">严重: Context [&#x2F;cms] startup failed due to previous errors</span><br><span class="line">2021-2-8 9:33:28 org.apache.catalina.core.ApplicationContext log</span><br></pre></td></tr></table></figure>
<h2 id="二、解决办法"><a href="#二、解决办法" class="headerlink" title="二、解决办法"></a>二、解决办法</h2><h3 id="1、查看本地是否maven仓库（找项目开发人员要来的）中是否存在这个包"><a href="#1、查看本地是否maven仓库（找项目开发人员要来的）中是否存在这个包" class="headerlink" title="1、查看本地是否maven仓库（找项目开发人员要来的）中是否存在这个包"></a>1、查看本地是否maven仓库（找项目开发人员要来的）中是否存在这个包</h3><p><img src="https://img-blog.csdnimg.cn/20210219135626381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<h3 id="2、发现存在，查看pom-xml文件中是否存在这个依赖，发现没找到jbpm-api，于是对照着本地仓库中的文件夹地址手动添加"><a href="#2、发现存在，查看pom-xml文件中是否存在这个依赖，发现没找到jbpm-api，于是对照着本地仓库中的文件夹地址手动添加" class="headerlink" title="2、发现存在，查看pom.xml文件中是否存在这个依赖，发现没找到jbpm-api，于是对照着本地仓库中的文件夹地址手动添加"></a>2、发现存在，查看pom.xml文件中是否存在这个依赖，发现没找到jbpm-api，于是对照着本地仓库中的文件夹地址手动添加</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">	&lt;groupId&gt;org.jbpm.jbpm4&lt;&#x2F;groupId&gt;</span><br><span class="line">	&lt;artifactId&gt;jbpm-api&lt;&#x2F;artifactId&gt;</span><br><span class="line">	&lt;version&gt;4.4&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<h3 id="3、添加后保存pom-xml"><a href="#3、添加后保存pom-xml" class="headerlink" title="3、添加后保存pom.xml"></a>3、添加后保存pom.xml</h3><p>解决问题</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Maven项目报错</tag>
      </tags>
  </entry>
  <entry>
    <title>未解决_Eclipse全局搜索时报错Problems encountered during text serch</title>
    <url>/2021/02/20/eclipse%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%97%B6%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<img src="/2021/02/20/eclipse%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%97%B6%E6%8A%A5%E9%94%99/image-20210220180441087.png" class="">]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Eclipse全局搜索报错</tag>
      </tags>
  </entry>
  <entry>
    <title>Eclipse安装lombok</title>
    <url>/2021/02/20/eclipse%E5%AE%89%E8%A3%85lombok/</url>
    <content><![CDATA[<h2 id="1、下载lombok-jar包"><a href="#1、下载lombok-jar包" class="headerlink" title="1、下载lombok.jar包"></a>1、下载lombok.jar包</h2><p><a href="https://projectlombok.org/download">https://projectlombok.org/download</a> 下载lombok 支持jar包lombok.jar</p>
<h2 id="2、将lombok-jar复制到eclipse安装目录下"><a href="#2、将lombok-jar复制到eclipse安装目录下" class="headerlink" title="2、将lombok.jar复制到eclipse安装目录下"></a>2、将lombok.jar复制到eclipse安装目录下</h2><img src="/2021/02/20/eclipse%E5%AE%89%E8%A3%85lombok/image-20210220183429806.png" class="">

<img src="/2021/02/20/eclipse%E5%AE%89%E8%A3%85lombok/image-20210220183457851.png" class="">

<h2 id="3、打开cmd执行命令，安装lombok-jar"><a href="#3、打开cmd执行命令，安装lombok-jar" class="headerlink" title="3、打开cmd执行命令，安装lombok.jar"></a>3、打开cmd执行命令，安装lombok.jar</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -jar D:\Tools\Eclipse\Eclipse_2020\Install\eclipse\lombok.jar</span><br></pre></td></tr></table></figure>
<img src="/2021/02/20/eclipse%E5%AE%89%E8%A3%85lombok/image-20210220183706706.png" class="" title="表示找不到需要安装lombok.jar的IDE 点击确定">

<img src="/2021/02/20/eclipse%E5%AE%89%E8%A3%85lombok/image-20210220183857361.png" class="" title="点击Specify location...查找eclipse的安装程序，选中到eclipse.exe">

<img src="/2021/02/20/eclipse%E5%AE%89%E8%A3%85lombok/image-20210220183930891.png" class="" title="点击Install进行安装，安装结束后quit">

<img src="/2021/02/20/eclipse%E5%AE%89%E8%A3%85lombok/image-20210220184006828.png" class="" title="打开eclipse.ini文件查看是否安装成功">

<img src="/2021/02/20/eclipse%E5%AE%89%E8%A3%85lombok/image-20210220184036572.png" class="" title="安装成功">]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Eclipse安装lombok.jar</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring框架不识别JDK8 Eclipse报错：Context namespace element &#39;component-scan&#39; and its parser class [org.springframework.context.annotation.ComponentScanBeanDefinitionParser] are only available on JDK 1.5 and higher</title>
    <url>/2021/03/05/eclipse%E6%8A%A5%E9%94%99component-scan-are-only-available-on-JDK-1-5-and-higher/</url>
    <content><![CDATA[<h2 id="一、eclipse报错："><a href="#一、eclipse报错：" class="headerlink" title="一、eclipse报错："></a>一、eclipse报错：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Caused by: java.lang.IllegalStateException: Context namespace element &#39;component-scan&#39; and its parser class [org.springframework.context.annotation.ComponentScanBeanDefinitionParser] are only available on JDK 1.5 and higher</span><br><span class="line">	at org.springframework.context.config.ContextNamespaceHandler$1.parse(ContextNamespaceHandler.java:65)</span><br><span class="line">	at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:69)</span><br><span class="line">	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1297)</span><br><span class="line">	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1287)</span><br><span class="line">	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:135)</span><br><span class="line">	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92)</span><br><span class="line">	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:507)</span><br><span class="line">	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:398)</span><br><span class="line">	... 22 more</span><br></pre></td></tr></table></figure>
<p>一般有两种原因：</p>
<h3 id="1、在项目Compile对项目进行了特殊设置，导致编译器和-JDK版本不同报错"><a href="#1、在项目Compile对项目进行了特殊设置，导致编译器和-JDK版本不同报错" class="headerlink" title="1、在项目Compile对项目进行了特殊设置，导致编译器和 JDK版本不同报错"></a>1、在项目Compile对项目进行了特殊设置，导致编译器和 JDK版本不同报错</h3><p>（1）解决办法：</p>
<img src="/2021/03/05/eclipse%E6%8A%A5%E9%94%99component-scan-are-only-available-on-JDK-1-5-and-higher/image-20210302100531778.png" class="">

<h3 id="2、Spring框架无法识别JDK8版本为高版本"><a href="#2、Spring框架无法识别JDK8版本为高版本" class="headerlink" title="2、Spring框架无法识别JDK8版本为高版本"></a>2、Spring框架无法识别JDK8版本为高版本</h3><p>（1）错误发生：一般发生在项目从jdk1.6替换到jdk1.8过程中</p>
<p>（2）解决办法：添加文件</p>
<img src="/2021/03/05/eclipse%E6%8A%A5%E9%94%99component-scan-are-only-available-on-JDK-1-5-and-higher/image-20210305180357731.png" class="">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package org.springframework.core;</span><br><span class="line"></span><br><span class="line">public abstract class JdkVersion</span><br><span class="line">&#123;</span><br><span class="line">  public static final int JAVA_13 &#x3D; 0;</span><br><span class="line">  public static final int JAVA_14 &#x3D; 1;</span><br><span class="line">  public static final int JAVA_15 &#x3D; 2;</span><br><span class="line">  public static final int JAVA_16 &#x3D; 3;</span><br><span class="line">  public static final int JAVA_17 &#x3D; 4;</span><br><span class="line">  public static final int JAVA_18 &#x3D; 5;</span><br><span class="line">  private static final String javaVersion &#x3D; System.getProperty(&quot;java.version&quot;);</span><br><span class="line">  private static final int majorJavaVersion;</span><br><span class="line"></span><br><span class="line">  public static String getJavaVersion()</span><br><span class="line">  &#123;</span><br><span class="line">    return javaVersion;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public static int getMajorJavaVersion()</span><br><span class="line">  &#123;</span><br><span class="line">    return majorJavaVersion;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Deprecated</span><br><span class="line">  public static boolean isAtLeastJava14()</span><br><span class="line">  &#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Deprecated</span><br><span class="line">  public static boolean isAtLeastJava15()</span><br><span class="line">  &#123;</span><br><span class="line">    return true;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @Deprecated</span><br><span class="line">  public static boolean isAtLeastJava16()</span><br><span class="line">  &#123;</span><br><span class="line">    return majorJavaVersion &gt;&#x3D; 3;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  static</span><br><span class="line">  &#123;</span><br><span class="line">    if (javaVersion.contains(&quot;1.8.&quot;)) &#123;</span><br><span class="line">      majorJavaVersion &#x3D; 5;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (javaVersion.contains(&quot;1.7.&quot;)) &#123;</span><br><span class="line">      majorJavaVersion &#x3D; 4;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (javaVersion.contains(&quot;1.6.&quot;)) &#123;</span><br><span class="line">      majorJavaVersion &#x3D; 3;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">      majorJavaVersion &#x3D; 2;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Spring框架不识别JDK8报错</tag>
      </tags>
  </entry>
  <entry>
    <title>Eclipse运行报错java.lang.OutOfMemoryError: PermGen space解决方法</title>
    <url>/2021/02/25/eclipse%E8%BF%90%E8%A1%8C%E6%8A%A5java-lang-OutOfMemoryError-PermGen-space%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h4 id="1、解决办法："><a href="#1、解决办法：" class="headerlink" title="1、解决办法："></a>1、解决办法：</h4><img src="/2021/02/25/eclipse%E8%BF%90%E8%A1%8C%E6%8A%A5java-lang-OutOfMemoryError-PermGen-space%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20210225162723839.png" class="" title="打开Run Configurations">

<img src="/2021/02/25/eclipse%E8%BF%90%E8%A1%8C%E6%8A%A5java-lang-OutOfMemoryError-PermGen-space%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20210225162814020.png" class="" title="加上这一句药到病除">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-Xms256m -Xmx1024m -XX:MaxNewSize&#x3D;512m -XX:MaxPermSize&#x3D;512m</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Eclipse报Tomcat内存不足</tag>
      </tags>
  </entry>
  <entry>
    <title>git pull 时报：cd: H:lll/repo/www:No such file or directory Cannot chdir to H:lll/repo/www,the toplevel of the working tree.</title>
    <url>/2021/03/18/gitpull%E6%8A%A5%E9%94%99-%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h4 id="是权限问题，将git-bash-改为管理员方式启动就可以了"><a href="#是权限问题，将git-bash-改为管理员方式启动就可以了" class="headerlink" title="是权限问题，将git bash 改为管理员方式启动就可以了"></a>是权限问题，将git bash 改为管理员方式启动就可以了</h4>]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>git pull报错</tag>
      </tags>
  </entry>
  <entry>
    <title>git简单使用</title>
    <url>/2021/01/28/git%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="1-如何将本地项目上传到github远程仓库上"><a href="#1-如何将本地项目上传到github远程仓库上" class="headerlink" title="1.如何将本地项目上传到github远程仓库上"></a>1.如何将本地项目上传到github远程仓库上</h2><h3 id="（1）在github上新建一个仓库"><a href="#（1）在github上新建一个仓库" class="headerlink" title="（1）在github上新建一个仓库"></a>（1）在github上新建一个仓库</h3><h3 id="（2）在本地随便新建一个文件夹克隆一下仓库到本地"><a href="#（2）在本地随便新建一个文件夹克隆一下仓库到本地" class="headerlink" title="（2）在本地随便新建一个文件夹克隆一下仓库到本地"></a>（2）在本地随便新建一个文件夹克隆一下仓库到本地</h3><p><img src="https://img-blog.csdnimg.cn/20210128102025292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;liuwf-github&#x2F;ajax-study-queryprovince.git</span><br></pre></td></tr></table></figure>
<h3 id="（3）将本地克隆的文件中的-git存在的这一级目录的所有东西复制到项目工作目录下"><a href="#（3）将本地克隆的文件中的-git存在的这一级目录的所有东西复制到项目工作目录下" class="headerlink" title="（3）将本地克隆的文件中的.git存在的这一级目录的所有东西复制到项目工作目录下"></a>（3）将本地克隆的文件中的.git存在的这一级目录的所有东西复制到项目工作目录下</h3><p><img src="https://img-blog.csdnimg.cn/20210128101506160.png"><br><img src="https://img-blog.csdnimg.cn/20210128101534286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<h3 id="（4）打开IDEA客户端，看到"><a href="#（4）打开IDEA客户端，看到" class="headerlink" title="（4）打开IDEA客户端，看到"></a>（4）打开IDEA客户端，看到</h3><p><img src="https://img-blog.csdnimg.cn/20210128101757122.png"><br>表示成功</p>
<h3 id="（5）打开IDEA下的dos-cd到项目目录"><a href="#（5）打开IDEA下的dos-cd到项目目录" class="headerlink" title="（5）打开IDEA下的dos,cd到项目目录"></a>（5）打开IDEA下的dos,cd到项目目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;提交备注信息&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<p>大功告成</p>
<h3 id="（6）附上一些常用的linux命令"><a href="#（6）附上一些常用的linux命令" class="headerlink" title="（6）附上一些常用的linux命令"></a>（6）附上一些常用的linux命令</h3><p><img src="https://img-blog.csdnimg.cn/20210128101950692.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70#pic_center"></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>git简单使用</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo_butterfly_自定义文章的标题图片</title>
    <url>/2021/06/10/hexo-butterfly-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E7%9A%84%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<p>1</p>
<p>1、首先修改默认的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">D:\MyBlog\liuwf_blog\blog\themes\butterfly\scripts\filters</span><br></pre></td></tr></table></figure>
<img src="/2021/06/10/hexo-butterfly-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E7%9A%84%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/image-20210610120017766.png" class="" title="image-20210610120017766">

<p>在这个文件中可以选择默认的文章标题图片</p>
<img src="/2021/06/10/hexo-butterfly-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E7%9A%84%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/image-20210610120111562.png" class="" title="image-20210610120111562">

<p>当然，你也可以再外面的配置文件设置 default_top_img的值</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;这个img是在D:\MyBlog\liuwf_blog\blog\themes\butterfly\source\img下的相对路径</span><br><span class="line">&#39;&#x2F;img&#x2F;default_back.png&#39;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/10/hexo-butterfly-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E7%9A%84%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/image-20210610120730246.png" class="" title="image-20210610120730246">

<img src="/2021/06/10/hexo-butterfly-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E7%9A%84%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/image-20210610120746765.png" class="" title="image-20210610120746765">

<p>2、然后设置每篇文章的标题图片</p>
<p>首先在post模板中增加cover字段</p>
<img src="/2021/06/10/hexo-butterfly-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E7%9A%84%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/image-20210610141640196.png" class="" title="image-20210610141640196">

<p>每次创建一个新文章时，手动添加标题图片（相对路径）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cover: &#39;&#x2F;img&#x2F;test-2&#x2F;1.png&#39;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/10/hexo-butterfly-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E7%9A%84%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/image-20210610141759166.png" class="" title="image-20210610141759166">

<img src="/2021/06/10/hexo-butterfly-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E7%AB%A0%E7%9A%84%E6%A0%87%E9%A2%98%E5%9B%BE%E7%89%87/image-20210610141818796.png" class="" title="image-20210610141818796">

]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>自定义文章的标题图片</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo_博客添加搜索功能</title>
    <url>/2021/06/17/hexo-%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p>1、添加依赖</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/hexo-%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/image-20210617163453615.png" class="" title="image-20210617163453615">

<img src="/2021/06/17/hexo-%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/image-20210617163106244.png" class="" title="image-20210617163106244">

<p>2、在博客配置文件中增加设置</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/hexo-%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/image-20210617163246908.png" class="" title="image-20210617163246908">

<img src="/2021/06/17/hexo-%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/image-20210617163218882.png" class="" title="image-20210617163218882">

<p>3、在主题配置文件中开启搜索功能</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/hexo-%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/image-20210617163423696.png" class="" title="image-20210617163423696">

<img src="/2021/06/17/hexo-%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/image-20210617163327280.png" class="" title="image-20210617163327280">







<p>参考：<a href="https://blog.csdn.net/weixin_34168880/article/details/93174317">https://blog.csdn.net/weixin_34168880/article/details/93174317</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客增加搜索功能</tag>
      </tags>
  </entry>
  <entry>
    <title>java在jsp页面中等比例缩放显示图片</title>
    <url>/2021/01/26/java%E5%9C%A8jsp%E9%A1%B5%E9%9D%A2%E4%B8%AD%E7%AD%89%E6%AF%94%E4%BE%8B%E7%BC%A9%E6%94%BE%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img  src&#x3D;&quot;&#x2F;实例.png&quot;  onload&#x3D;&quot;javascript:if(this.height&gt;this.width) this.height&#x3D;700;if(this.width&gt;this.height) this.width&#x3D;700&quot;  alt&#x3D;&quot;&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">onload&#x3D;&quot;javascript:if(this.height&gt;this.width) this.height&#x3D;700;if(this.width&gt;this.height) this.width&#x3D;700&quot;</span><br></pre></td></tr></table></figure>
<p>当你只设定宽度和高度其中的一个为固定值时，它会进行等比例缩放，但是当你两个都设定固定值时，会导致比例发生变化</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>jsp等比例缩放显示图片</tag>
      </tags>
  </entry>
  <entry>
    <title>“hexo g时报错”</title>
    <url>/2021/03/18/hexo-g%E6%97%B6%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<img src="/2021/03/18/hexo-g%E6%97%B6%E6%8A%A5%E9%94%99/image-20210318191229281.png" class="" title="image-20210318191229281">

<h4 id="仔细看报错位置，发现应该是title的-这里出现问题。将-改为-就可解决问题"><a href="#仔细看报错位置，发现应该是title的-这里出现问题。将-改为-就可解决问题" class="headerlink" title="仔细看报错位置，发现应该是title的:\这里出现问题。将\改为/,就可解决问题"></a>仔细看报错位置，发现应该是title的:\这里出现问题。将\改为/,就可解决问题</h4>]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客报错</tag>
      </tags>
  </entry>
  <entry>
    <title>pom.xml文件报错：maven missing artifact，但是本地仓库存在jar</title>
    <url>/2021/02/19/mavenMissingArtifact/</url>
    <content><![CDATA[<h4 id="1、本地仓库删掉-maven-repositories和-remote-repositories文件"><a href="#1、本地仓库删掉-maven-repositories和-remote-repositories文件" class="headerlink" title="1、本地仓库删掉_maven.repositories和_remote.repositories文件"></a>1、本地仓库删掉_maven.repositories和_remote.repositories文件</h4><h4 id="2、update-project-或-update-dependency"><a href="#2、update-project-或-update-dependency" class="headerlink" title="2、update project 或 update dependency"></a>2、update project 或 update dependency</h4>]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Maven pom文件报错</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql无法启动服务没有报告任何错误</title>
    <url>/2021/01/26/mysql%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1%E6%B2%A1%E6%9C%89%E6%8A%A5%E5%91%8A%E4%BB%BB%E4%BD%95%E9%94%99%E8%AF%AF-%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h4 id="1、解决办法：删除mysql安装目录下的同级date文件夹，运行命令"><a href="#1、解决办法：删除mysql安装目录下的同级date文件夹，运行命令" class="headerlink" title="1、解决办法：删除mysql安装目录下的同级date文件夹，运行命令"></a>1、解决办法：删除mysql安装目录下的同级date文件夹，运行命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mysqld  --initialize-insecure</span><br></pre></td></tr></table></figure>
<p>命令运行较慢，会在安装目录下重新生成date文件夹，然后运行命令net start mysql就可以启动mysql服务了</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>mysql无法启动</tag>
      </tags>
  </entry>
  <entry>
    <title>使用PLSQLDev工具导入dmp文件闪退</title>
    <url>/2021/02/25/plsqlx64%E5%AF%BC%E5%85%A5dmp%E6%96%87%E4%BB%B6%E9%97%AA%E9%80%80%E7%BB%88%E6%9E%81%E5%8A%9E%E6%B3%95-%E7%9C%9F%E5%AE%9E%E6%9C%89%E6%95%88/</url>
    <content><![CDATA[<h4 id="1、解决办法：添加两个环境变量"><a href="#1、解决办法：添加两个环境变量" class="headerlink" title="1、解决办法：添加两个环境变量"></a>1、解决办法：添加两个环境变量</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ORACLE_HOME: D:\oracle_base\oracle(我自己的oracle安装目录)</span><br><span class="line">ORACLE_SID: 导入的数据库名称</span><br></pre></td></tr></table></figure>
<h4 id="2、注意事项"><a href="#2、注意事项" class="headerlink" title="2、注意事项"></a>2、注意事项</h4><p>（1）dmp文件不要放在桌面(说是会有中文,虽然我的桌面路径是”C:\Users\bingo\Desktop”,但是确实是放到d盘成功了的)<br>（2）dmp文件不要有改动(我改了版本和我的oracle版本一致,导致导入失败)</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>数据库dmp文件导入</tag>
      </tags>
  </entry>
  <entry>
    <title>解决PLSQL报错“动态执行表不可访问，本会话的自动统计被禁止”</title>
    <url>/2021/02/20/plsql%E6%8A%A5%E9%94%99%E5%8A%A8%E6%80%81%E6%89%A7%E8%A1%8C%E8%A1%A8%E4%B8%8D%E5%8F%AF%E8%AE%BF%E9%97%AE%E6%9C%AC%E4%BC%9A%E8%AF%9D%E7%9A%84%E8%87%AA%E5%8A%A8%E7%BB%9F%E8%AE%A1%E8%A2%AB%E7%A6%81%E6%AD%A2/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://img-blog.csdn.net/20160126145807397?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"></h1><p>去掉框里的内容</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>PLSQLDev工具报错</tag>
      </tags>
  </entry>
  <entry>
    <title>vue报错:error:D:/Tools/Eclipse/Eclipse_2020/Data/vue/node_modules/node-sass:Command failed.</title>
    <url>/2021/02/19/vue%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h3 id="1、在使用-yarn-install命令安装VUE项目时报错"><a href="#1、在使用-yarn-install命令安装VUE项目时报错" class="headerlink" title="1、在使用 yarn install命令安装VUE项目时报错"></a>1、在使用 yarn install命令安装VUE项目时报错</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">error D:\Tools\Eclipse\Eclipse_2020\Data\vue\node_modules\node-sass: Command failed.</span><br><span class="line"> Exit code: 1</span><br></pre></td></tr></table></figure>
<p>解决办法<br>在项目路径下按顺序执行下面命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g mirror-config-china --registry&#x3D;http:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line">npm install node-sass</span><br><span class="line">yarn install</span><br></pre></td></tr></table></figure>
<h3 id="2、npm-install时报错："><a href="#2、npm-install时报错：" class="headerlink" title="2、npm install时报错："></a>2、npm install时报错：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: Can&#39;t find Python executable &quot;python&quot;, you can set the PYTHON env variable</span><br></pre></td></tr></table></figure>
<p> 以管理员方式打开PowerShell<br>执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install --global --production windows-build-tools</span><br></pre></td></tr></table></figure>
<h3 id="3、解决npm报错通用方法"><a href="#3、解决npm报错通用方法" class="headerlink" title="3、解决npm报错通用方法"></a>3、解决npm报错通用方法</h3><p>重新安装node.js勾选自动安装必要组件，对组件进行下载</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>vue报错</tag>
      </tags>
  </entry>
  <entry>
    <title>yarn报错:无法加载文件C:\Users\Administrator\AppData\Roaming\npm\yarn.ps1,因为在此系统上禁止运行脚本</title>
    <url>/2021/02/18/yarn-%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E6%96%87%E4%BB%B6-%E5%9B%A0%E4%B8%BA%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h2 id="1-搜索powershell，右键以管理员身份运行"><a href="#1-搜索powershell，右键以管理员身份运行" class="headerlink" title="1.搜索powershell，右键以管理员身份运行"></a>1.搜索powershell，右键以管理员身份运行</h2><h2 id="2-输入："><a href="#2-输入：" class="headerlink" title="2.输入："></a>2.输入：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>
<p>然后：输入 y</p>
<h2 id="3-关闭命令窗口-即可"><a href="#3-关闭命令窗口-即可" class="headerlink" title="3.关闭命令窗口 即可"></a>3.关闭命令窗口 即可</h2><p>参考：<a href="https://www.jianshu.com/p/6af4880f4018">https://www.jianshu.com/p/6af4880f4018</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>npm yarn安装</tag>
      </tags>
  </entry>
  <entry>
    <title>多版本MySQL安装</title>
    <url>/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/</url>
    <content><![CDATA[<h3 id="一、安装MySQL57"><a href="#一、安装MySQL57" class="headerlink" title="一、安装MySQL57"></a>一、安装MySQL57</h3><h4 id="1、官网下载压缩包"><a href="#1、官网下载压缩包" class="headerlink" title="1、官网下载压缩包"></a>1、官网下载压缩包</h4><p><a href="https://dev.mysql.com/downloads/mysql/5.7.html">https://dev.mysql.com/downloads/mysql/5.7.html</a></p>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312102453011.png" class="">

<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312093026544.png" class="">

<h4 id="2、解压"><a href="#2、解压" class="headerlink" title="2、解压"></a>2、解压</h4><img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312102534172.png" class="" title="目录结构">

<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312102603635.png" class="" title="目录结构">

<h4 id="3、在安装根目录下新增my-ini文件"><a href="#3、在安装根目录下新增my-ini文件" class="headerlink" title="3、在安装根目录下新增my.ini文件"></a>3、在安装根目录下新增my.ini文件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"> </span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set&#x3D;utf8 </span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"> </span><br><span class="line">#设置3306端口</span><br><span class="line">port &#x3D; 3306</span><br><span class="line"> </span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir&#x3D;D:\\Environment\\MySql\\Install\\mysql57</span><br><span class="line"> </span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir&#x3D;D:\\Environment\\MySql\\Install\\mysql57\\data</span><br><span class="line"> </span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections&#x3D;200</span><br><span class="line"> </span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server&#x3D;utf8</span><br><span class="line"> </span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br></pre></td></tr></table></figure>
<h4 id="4、环境变量配置"><a href="#4、环境变量配置" class="headerlink" title="4、环境变量配置"></a>4、环境变量配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;MySQL57安装目录bin目录</span><br><span class="line">D:\Environment\MySql\Install\mysql57\bin</span><br><span class="line">&#x2F;&#x2F;MySQL80安装目录bin目录</span><br><span class="line">D:\Environment\MySql\Install\mysql80\bin</span><br></pre></td></tr></table></figure>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312102944304.png" class="" title="path环境变量配置">

<h4 id="5、在安装目录bin下打开cmd"><a href="#5、在安装目录bin下打开cmd" class="headerlink" title="5、在安装目录bin下打开cmd"></a>5、在安装目录bin下打开cmd</h4><img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312102801049.png" class="">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;安装服务</span><br><span class="line">mysqld install MySQL57 --default-file&#x3D;&quot;D:\Environment\MySql\Install\mysql57\my.ini&quot;</span><br><span class="line">&#x2F;&#x2F;初始化 创建data文件夹</span><br><span class="line">mysqld --initialize</span><br></pre></td></tr></table></figure>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312093235341.png" class="" title="安装服务">

<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312093148121.png" class="" title="初始化MySQL">

<h4 id="6、修改注册表ImagePath信息"><a href="#6、修改注册表ImagePath信息" class="headerlink" title="6、修改注册表ImagePath信息"></a>6、修改注册表ImagePath信息</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;D:\Environment\MySql\Install\mysql57\bin\mysqld&quot; MySQL57</span><br></pre></td></tr></table></figure>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312093531222.png" class="" title="修改注册表">

<h4 id="7、修改MySQL57密码"><a href="#7、修改MySQL57密码" class="headerlink" title="7、修改MySQL57密码"></a>7、修改MySQL57密码</h4><p>在D:\Environment\MySql\Install\mysql57\data\DESKTOP-JUUSB8L.err文件中查看临时密码</p>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312093725448.png" class="" title="image-20210312093725448">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;临时密码</span><br><span class="line">H,PmWLT!Y6.j</span><br><span class="line">&#x2F;&#x2F;登陆MySQL</span><br><span class="line">mysql -uroot -p</span><br><span class="line">&#x2F;&#x2F;修改密码</span><br><span class="line">set password for root@localhost&#x3D;password(&#39;123456&#39;);</span><br></pre></td></tr></table></figure>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312095441470.png" class="" title="image-20210312095441470">

<h3 id="二、安装MySQL80"><a href="#二、安装MySQL80" class="headerlink" title="二、安装MySQL80"></a>二、安装MySQL80</h3><h4 id="1、官网下载压缩包-1"><a href="#1、官网下载压缩包-1" class="headerlink" title="1、官网下载压缩包"></a>1、官网下载压缩包</h4><p><a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312102404275.png" class="" title="image-20210312102404275">

<h4 id="2、解压-1"><a href="#2、解压-1" class="headerlink" title="2、解压"></a>2、解压</h4><img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312102534172.png" class="" title="目录结构">

<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312103650350.png" class="" title="目录结构">

<h4 id="3、在安装根目录下新增my-ini文件-1"><a href="#3、在安装根目录下新增my-ini文件-1" class="headerlink" title="3、在安装根目录下新增my.ini文件"></a>3、在安装根目录下新增my.ini文件</h4><p>将MySQL80的端口号设置为3307</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"> </span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set&#x3D;utf8 </span><br><span class="line"> </span><br><span class="line">[mysqld]</span><br><span class="line"> </span><br><span class="line">#设置3307端口</span><br><span class="line">port &#x3D; 3307</span><br><span class="line"> </span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir&#x3D;D:\\Environment\\MySql\\Install\\mysql80</span><br><span class="line"> </span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir&#x3D;D:\\Environment\\MySql\\Install\\mysql80\\data</span><br><span class="line"> </span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections&#x3D;200</span><br><span class="line"> </span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line">character-set-server&#x3D;utf8</span><br><span class="line"> </span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine&#x3D;INNODB</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="4、环境变量配置-1"><a href="#4、环境变量配置-1" class="headerlink" title="4、环境变量配置"></a>4、环境变量配置</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;MySQL57安装目录bin目录</span><br><span class="line">D:\Environment\MySql\Install\mysql57\bin</span><br><span class="line">&#x2F;&#x2F;MySQL80安装目录bin目录</span><br><span class="line">D:\Environment\MySql\Install\mysql80\bin</span><br></pre></td></tr></table></figure>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312102944304.png" class="" title="path环境变量配置">

<h4 id="5、在安装目录bin下打开cmd-1"><a href="#5、在安装目录bin下打开cmd-1" class="headerlink" title="5、在安装目录bin下打开cmd"></a>5、在安装目录bin下打开cmd</h4><img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312103839292.png" class="">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;安装服务</span><br><span class="line">mysqld install MySQL80 --default-file&#x3D;&quot;D:\Environment\MySql\Install\mysql80\my.ini&quot;</span><br><span class="line">&#x2F;&#x2F;初始化 创建data文件夹</span><br><span class="line">mysqld --initialize</span><br></pre></td></tr></table></figure>
<h4 id="6、修改注册表ImagePath信息-1"><a href="#6、修改注册表ImagePath信息-1" class="headerlink" title="6、修改注册表ImagePath信息"></a>6、修改注册表ImagePath信息</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;D:\Environment\MySql\Install\mysql80\bin\mysqld&quot; MySQL80</span><br></pre></td></tr></table></figure>
<h4 id="7、修改MySQL80密码"><a href="#7、修改MySQL80密码" class="headerlink" title="7、修改MySQL80密码"></a>7、修改MySQL80密码</h4><p>在D:\Environment\MySql\Install\mysql80\data\DESKTOP-JUUSB8L.err文件中查看临时密码</p>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312104515016.png" class="">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;临时密码</span><br><span class="line">032+ysi)Sc(j</span><br><span class="line">&#x2F;&#x2F;登陆MySQL80</span><br><span class="line">mysql -uroot -p</span><br><span class="line">&#x2F;&#x2F;失败报错：ERROR 1045 (28000): Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password: YES)</span><br><span class="line">&#x2F;&#x2F;原因：两个版本的服务都打开着</span><br><span class="line">&#x2F;&#x2F;解决：关闭MySQL57服务</span><br><span class="line">&#x2F;&#x2F;登陆MySQL</span><br><span class="line">mysql -uroot -p</span><br><span class="line">&#x2F;&#x2F;失败报错：ERROR 2003 (HY000): Can&#39;t connect to MySQL server on &#39;localhost&#39; (10061)</span><br><span class="line">&#x2F;&#x2F;原因：没有标明端口号，默认端口3306，但是3306端口的MySQL57服务被我们关闭了</span><br><span class="line">&#x2F;&#x2F;解决：加上端口号，这个端口号为3307，是在my.ini中设置的</span><br><span class="line">mysql -P3307  -uroot -p</span><br><span class="line">&#x2F;&#x2F;修改密码</span><br><span class="line">set password for root@localhost&#x3D;password(&#39;1456622145&#39;);</span><br><span class="line">&#x2F;&#x2F;报错：ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;password(&#39;1456622145&#39;)&#39; at line 1</span><br><span class="line">&#x2F;&#x2F;原因：语法错误 MySQL80 删除了passwfaord关键字，修改密码语句改变</span><br><span class="line">&#x2F;&#x2F;解决：修改密码语句发生变化</span><br><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;123456&#39;;</span><br></pre></td></tr></table></figure>
<img src="/2021/03/12/%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84MySql/image-20210312104726187.png" class="">











<h4 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h4><p><a href="https://blog.csdn.net/weixin_44051855/article/details/113111613">https://blog.csdn.net/weixin_44051855/article/details/113111613</a></p>
<p><a href="https://www.jb51.net/article/26505.htm?_t_t_t=0.35939535707756654">https://www.jb51.net/article/26505.htm?_t_t_t=0.35939535707756654</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>多版本MySQL安装</tag>
      </tags>
  </entry>
  <entry>
    <title>使用国产化数据库达梦数据库7替换Oracle数据库</title>
    <url>/2021/02/25/%E4%BD%BF%E7%94%A8%E5%9B%BD%E4%BA%A7%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%937%E6%9B%BF%E6%8D%A2oracle%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h2 id="1、先安装达梦数据库"><a href="#1、先安装达梦数据库" class="headerlink" title="1、先安装达梦数据库"></a>1、先安装达梦数据库</h2><p>达梦数据库官网：<a href="http://www.dameng.com/">http://www.dameng.com/</a></p>
<p>或者有我现在完的压缩包：</p>
<h2 id="2、安装达梦数据库"><a href="#2、安装达梦数据库" class="headerlink" title="2、安装达梦数据库"></a>2、安装达梦数据库</h2><p>傻瓜式安装，最后要创建一个实例</p>
<h2 id="3、达梦数据库配置"><a href="#3、达梦数据库配置" class="headerlink" title="3、达梦数据库配置"></a>3、达梦数据库配置</h2><p>（1）达梦的数据库管理工具默认不显示行号，也不能自动补全，需要手动设置。行号设置方法：在sql编辑页面，左侧空白竖栏（一般编辑器显示行号的地方）右击，选择”显示行号“。自动补全设置方法：在sql编辑页面空白处右击，选择“选项”，弹出的界面展开“查询分析器”，进入“编辑器”配置页面，选中“启用SQL输入助手”</p>
<p>（2）装完达梦数据库后，需要启动oracle兼容模式<code>sp_set_para_value(2,‘COMPATIBLE_MODE’,2);</code>，另外，需要启动dbms_job包，SP_INIT_JOB_SYS(1)。改完设置后记得重启。</p>
<p>达梦关键字忽略配置：<a href="https://www.cnblogs.com/zcx-94/p/11936551.html">https://www.cnblogs.com/zcx-94/p/11936551.html</a></p>
<p>参考：<a href="https://www.cnblogs.com/kingstarer/p/12952155.html">https://www.cnblogs.com/kingstarer/p/12952155.html</a></p>
<h2 id="4、进行迁移工作"><a href="#4、进行迁移工作" class="headerlink" title="4、进行迁移工作"></a>4、进行迁移工作</h2><p>（1）创建一个与oracle名称相同的用户</p>
<img src="/2021/02/25/%E4%BD%BF%E7%94%A8%E5%9B%BD%E4%BA%A7%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%937%E6%9B%BF%E6%8D%A2oracle%E6%95%B0%E6%8D%AE%E5%BA%93/image-20210225161048303.png" class="" title="打开DM管理工具创建用户">

<p>（2）然后给新创建的用户赋予权限</p>
<img src="/2021/02/25/%E4%BD%BF%E7%94%A8%E5%9B%BD%E4%BA%A7%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%937%E6%9B%BF%E6%8D%A2oracle%E6%95%B0%E6%8D%AE%E5%BA%93/image-20210225161320285.png" class="" title="打开DM交互式查询工具">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">连接数据库</span><br><span class="line">conn sysdba&#x2F;123456@192.168.40.40:5236</span><br><span class="line">或者</span><br><span class="line">conn sysdba&#x2F;密码</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://blog.csdn.net/weixin_42447367/article/details/107575363">https://blog.csdn.net/weixin_42447367/article/details/107575363</a></p>
<h2 id="5、eclipse中项目配置"><a href="#5、eclipse中项目配置" class="headerlink" title="5、eclipse中项目配置"></a>5、eclipse中项目配置</h2><p>（1）application.properties</p>
<figure class="highlight plain"><figcaption><span>liuwf</span></figcaption><table><tr><td class="code"><pre><span class="line">hibernate.dialect&#x3D;org.hibernate.dialect.DmDialect</span><br><span class="line">hibernate.ehcache_config_file&#x3D;&#x2F;ehcache&#x2F;ehcache-hibernate-local.xml</span><br><span class="line">hibernate.format_sql&#x3D;false</span><br><span class="line">hibernate.show_sql&#x3D;false</span><br><span class="line">jdbc.driver&#x3D;dm.jdbc.driver.DmDriver</span><br><span class="line">jdbc.url&#x3D;jdbc:dm:&#x2F;&#x2F;127.0.0.1:5236</span><br><span class="line">jdbc.username&#x3D;用户名</span><br><span class="line">jdbc.password&#x3D;密码</span><br></pre></td></tr></table></figure>
<p>（2）jar包引入</p>
<img src="/2021/02/25/%E4%BD%BF%E7%94%A8%E5%9B%BD%E4%BA%A7%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%937%E6%9B%BF%E6%8D%A2oracle%E6%95%B0%E6%8D%AE%E5%BA%93/image-20210225161820577.png" class="" title="jar包复制到WEB-INF目录下新建的lib目录">

<p>ps:这些引入的jar包在达梦数据库安装目录下的Install\drivers\jdbc目录下</p>
<img src="/2021/02/25/%E4%BD%BF%E7%94%A8%E5%9B%BD%E4%BA%A7%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%937%E6%9B%BF%E6%8D%A2oracle%E6%95%B0%E6%8D%AE%E5%BA%93/image-20210225162020968.png" class="" title="jar所在位置">

<img src="/2021/02/25/%E4%BD%BF%E7%94%A8%E5%9B%BD%E4%BA%A7%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%937%E6%9B%BF%E6%8D%A2oracle%E6%95%B0%E6%8D%AE%E5%BA%93/image-20210225162110509.png" class="" title="项目引入依赖">

<h2 id="6、如果项目运行报sql运行错误"><a href="#6、如果项目运行报sql运行错误" class="headerlink" title="6、如果项目运行报sql运行错误"></a>6、如果项目运行报sql运行错误</h2><p>有可能是关键词没屏蔽导致项目sql语句运行报错</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>数据库国产化</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA中Tomcat output中日志打印乱码的问题</title>
    <url>/2021/01/21/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3IDEA%E4%B8%ADTomcat-%EF%BC%9Eoutput%E4%B8%AD%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0%E4%B9%B1%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h4 id="1、tomcat中的conf-gt-logging-properties要跟电脑的编码方式相同，这样子tomcat日志打印出来就没有问题"><a href="#1、tomcat中的conf-gt-logging-properties要跟电脑的编码方式相同，这样子tomcat日志打印出来就没有问题" class="headerlink" title="1、tomcat中的conf-&gt;logging.properties要跟电脑的编码方式相同，这样子tomcat日志打印出来就没有问题"></a>1、tomcat中的conf-&gt;logging.properties要跟电脑的编码方式相同，这样子tomcat日志打印出来就没有问题</h4><p><img src="https://img-blog.csdnimg.cn/20210115192619755.png"><img src="https://img-blog.csdnimg.cn/202101151926451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<h4 id="2、Help-gt-Edit-Custom-VM-Options中使用默认的就好，不然log4j日志log-info-输出会出现乱码"><a href="#2、Help-gt-Edit-Custom-VM-Options中使用默认的就好，不然log4j日志log-info-输出会出现乱码" class="headerlink" title="2、Help-&gt;Edit Custom VM Options中使用默认的就好，不然log4j日志log.info()输出会出现乱码"></a>2、Help-&gt;Edit Custom VM Options中使用默认的就好，不然log4j日志log.info()输出会出现乱码</h4><p><img src="https://img-blog.csdnimg.cn/20210115192720261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/20210115192736129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></p>
<h4 id="3、Tomcat配置"><a href="#3、Tomcat配置" class="headerlink" title="3、Tomcat配置"></a>3、Tomcat配置<img src="https://img-blog.csdnimg.cn/20210120165118542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70"></h4>]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>Idea Tomcat日志问题解决</tag>
      </tags>
  </entry>
  <entry>
    <title>前端学习</title>
    <url>/2021/03/19/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>1、绝对路径和相对路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">绝对路径：使用斜杆：“\”      &lt;img src&#x3D;&quot;D:\MyBlog\liuwf_blog\blog\source\_posts&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">相对路径：使用反斜杠：“&#x2F;”    &lt;img src&#x3D;&quot;..&#x2F;hello.png&quot; &#x2F;&gt;</span><br><span class="line">同一级：直接输入图片名称就可  &lt;img src&#x3D;&quot;hello.png&quot; &#x2F;&gt;</span><br><span class="line">上一级：&quot;..&#x2F;&quot;             &lt;img src&#x3D;&quot;..&#x2F;hello.png&quot; &#x2F;&gt;</span><br><span class="line">下一级：&quot;&#x2F;&quot;               &lt;img src&#x3D;&quot;&#x2F;images&#x2F;hello.png&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>
<p>2、单标签：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;br &#x2F;&gt;</span><br><span class="line">&lt;imag src&#x3D;&quot;&quot; &#x2F;&gt;</span><br><span class="line">&lt;input &#x2F;&gt;</span><br></pre></td></tr></table></figure>
<p>3、超链接</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a&gt;&lt;&#x2F;a&gt;  &#x2F;&#x2F;anchot锚</span><br><span class="line">&lt;a href&#x3D;&quot;跳转目标&quot; target&#x3D;&quot;目标窗口的弹出方式&quot;&gt;文本和图像&lt;&#x2F;a&gt;</span><br><span class="line">href:跳转链接的url</span><br><span class="line">     外部链接：&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.qq.com&quot;&gt;QQ&lt;&#x2F;a&gt;</span><br><span class="line">     内部链接：&lt;a href&#x3D;&quot;index.html&quot;&gt;内部链接&lt;&#x2F;a&gt;</span><br><span class="line">     空链接：  &lt;a href&#x3D;&quot;#&quot;&gt;&lt;&#x2F;a&gt;</span><br><span class="line">     下载链接：链接是个下载地址或文件或.zip等压缩包文件</span><br><span class="line">     		 &lt;a href&#x3D;&quot;img.zip&quot;&gt;下载文件&lt;&#x2F;a&gt;</span><br><span class="line">     网页元素链接：在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接</span><br><span class="line">     		 &lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;&lt;img src&#x3D;&quot;img.jpg&quot; &#x2F;&gt;&lt;&#x2F;a&gt;  &#x2F;&#x2F;点击图片跳转到百度</span><br><span class="line">     锚点链接：点击链接，可以快速定位到页面中的某个位置</span><br><span class="line">             使用方法：</span><br><span class="line">             （1）在链接文本的href属性中，设置属性值为#名字的形式， 如&lt;a href&#x3D;&quot;#two&quot;&gt;第2集&lt;&#x2F;a&gt;</span><br><span class="line">             （2）找到目标标签，里面添加一个id属性&#x3D;刚才的名字，    如&lt;h3 id&#x3D;&quot;two&quot;&gt;第2集介绍&lt;&#x2F;h3&gt;</span><br><span class="line">target:打开窗口的方式</span><br><span class="line">       _self默认值 在当前窗口打开</span><br><span class="line">       _blank     在新窗口打开</span><br></pre></td></tr></table></figure>
<p>4、特殊字符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">空格符 &amp;nbsp;</span><br><span class="line">&lt;     &lt;</span><br><span class="line">&gt;     &gt;</span><br><span class="line">&amp;     &amp;amp</span><br><span class="line">￥    &amp;yen;</span><br><span class="line">版权   &amp;copy;</span><br><span class="line">注册商标 &amp;reg;</span><br><span class="line">摄氏度 &amp;deg;</span><br><span class="line">正负号 &amp;plusmn;</span><br><span class="line">乘号   &amp;times;</span><br><span class="line">除号   &amp;divide;</span><br><span class="line">平方2  &amp;sup2;</span><br><span class="line">立方3  &amp;sup3;</span><br></pre></td></tr></table></figure>
<p>5、表格标签</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">	&lt;tr&gt;</span><br><span class="line">		&lt;td&gt;单元格内的文字&lt;&#x2F;td&gt;</span><br><span class="line">		...</span><br><span class="line">	&lt;&#x2F;tr&gt;</span><br><span class="line">	...</span><br><span class="line">&lt;&#x2F;table&gt;</span><br><span class="line"></span><br><span class="line">1、&lt;table&gt;&lt;&#x2F;table&gt;是用于定义表格的标签</span><br><span class="line">2、&lt;tr&gt;&lt;&#x2F;tr&gt;标签是用于定义表格中的行，必须嵌套在&lt;table&gt;&lt;&#x2F;table&gt;标签中</span><br><span class="line">3、&lt;td&gt;&lt;&#x2F;td&gt;用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;&#x2F;tr&gt;标签中</span><br><span class="line">4、td：table data 数据单元格的内容</span><br><span class="line"></span><br><span class="line">1、表头单元格</span><br><span class="line">	&lt;th&gt; table head 表示HTML表格的表头部分 放在&lt;tr&gt;&lt;&#x2F;tr&gt;标签里面</span><br><span class="line">	一般表头单元格位于表格的第一行或第一列，表头单元格里面的文本内容加粗居中显示</span><br><span class="line">2、表格属性（CSS）</span><br><span class="line">（1）align： </span><br><span class="line">	属性值：left、center、right </span><br><span class="line">	功能：规定表格相对周围元素的对齐方式</span><br><span class="line">（2）border</span><br><span class="line">	1或“”</span><br><span class="line">	规定表格单元是否拥有边框，默认为“”，表示没有边框</span><br><span class="line">（3）cellpadding</span><br><span class="line">	像素值</span><br><span class="line">	规定单元边沿与其内容之间的空白，默认1像素</span><br><span class="line">（4）cellspacing</span><br><span class="line">	像素值</span><br><span class="line">	规定单元格之间的空白，默认2像素</span><br><span class="line">（5）width</span><br><span class="line">	像素值或百分比</span><br><span class="line">	规定表格的宽度</span><br><span class="line">3、表格结构标签</span><br><span class="line">	将表格划分为两个部分，结构清晰</span><br><span class="line">（1）&lt;thead&gt;&lt;&#x2F;thead&gt; 表头区域 </span><br><span class="line">	是table标签的子标签</span><br><span class="line">	比表头&lt;th&gt;&lt;&#x2F;th&gt;更大</span><br><span class="line">（2）&lt;tbody&gt;&lt;&#x2F;tbody&gt; 主题区域</span><br><span class="line">4、合并单元格</span><br><span class="line">	在单元格上操作：&lt;td&gt;&lt;&#x2F;td&gt;标签上操作</span><br><span class="line">（1）跨行合并：rowspan&#x3D;“合并单元格的个数”</span><br><span class="line">（2）跨列合并：colspan&#x3D;“合并单元格的个数”</span><br></pre></td></tr></table></figure>
<img src="/2021/03/19/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/image-20210319170035644.png" class="" title="跨行合并和跨列合并">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;table align&#x3D;&quot;center&quot; border&#x3D;&quot;1&quot; cellpadding&#x3D;&quot;20&quot; cellspacing&#x3D;&quot;0&quot; width&#x3D;&quot;500&quot; height&#x3D;&quot;249&quot;&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;姓名&lt;&#x2F;th&gt;</span><br><span class="line">        &lt;th&gt;性别&lt;&#x2F;th&gt;</span><br><span class="line">        &lt;th&gt;年龄&lt;&#x2F;th&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td rowspan&#x3D;&quot;2&quot;&gt;liuwf&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;td colspan&#x3D;&quot;2&quot;&gt;男&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;女&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;td&gt;20&lt;&#x2F;td&gt;</span><br><span class="line">    &lt;&#x2F;tr&gt;</span><br><span class="line">&lt;&#x2F;table&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/03/19/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/image-20210319170233556.png" class="" title="合并单元格">

<img src="/2021/03/19/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/image-20210319171037875.png" class="" title="合并单元格功能实现">

<p>6、列表标签</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、无序列表（重点）</span><br><span class="line">	（1）格式：</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;列表项1&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;列表项2&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;列表项3&lt;&#x2F;li&gt;</span><br><span class="line">            ...</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">	（2）注意事项：</span><br><span class="line">		a、无序列表的各个列表项之间没有顺序级别之分，是并列的</span><br><span class="line">		b、&lt;ul&gt;&lt;&#x2F;ul&gt;中只能嵌套&lt;li&gt;&lt;&#x2F;li&gt;，直接在&lt;ul&gt;&lt;&#x2F;ul&gt;标签中输入其他标签或者文字的做法是不被允许的</span><br><span class="line">		c、&lt;li&gt;与&lt;&#x2F;li&gt;之间相当于一个容器，可以容纳所有元素</span><br><span class="line">		d、无序列表会带有自己的样式属性，但在实际使用时，我们会使用CSS来设置</span><br><span class="line">2、有序列表</span><br><span class="line">	（1）格式：</span><br><span class="line">        &lt;ol&gt;</span><br><span class="line">            &lt;li&gt;列表项1&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;列表项2&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;列表项3&lt;&#x2F;li&gt;</span><br><span class="line">            ...</span><br><span class="line">        &lt;&#x2F;ol&gt;</span><br><span class="line">3、自定义列表</span><br><span class="line">	（1）格式：</span><br><span class="line">        &lt;dl&gt;</span><br><span class="line">            &lt;dt&gt;名词1&lt;&#x2F;dt&gt;</span><br><span class="line">            &lt;dd&gt;名词1解释1&lt;&#x2F;dd&gt;</span><br><span class="line">            &lt;dd&gt;名词1解释2&lt;&#x2F;dd&gt;</span><br><span class="line">            ...</span><br><span class="line">        &lt;&#x2F;dl&gt;</span><br><span class="line">	（2）例子</span><br><span class="line">   	&lt;dl&gt;</span><br><span class="line">        &lt;dt&gt;关注我们&lt;&#x2F;dt&gt;</span><br><span class="line">        &lt;dd&gt;新兰微博&lt;&#x2F;dd&gt;</span><br><span class="line">        &lt;dd&gt;官方微信&lt;&#x2F;dd&gt;</span><br><span class="line">    &lt;&#x2F;dl&gt;</span><br><span class="line">    （3）注意事项</span><br><span class="line">    &lt;dt&gt;与&lt;dd&gt;没有个数限制，经常是一个&lt;dt&gt;对应多个&lt;dd&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/03/19/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/image-20210319173509781.png" class="" title="自定义列表">

<p>7、表单标签</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1、表单域</span><br><span class="line">	（1）概述</span><br><span class="line">        是一个包含表单元素的区域</span><br><span class="line">        &lt;form&gt;用于定义表单域，以实现用户信息的收集和传递</span><br><span class="line">        &lt;form&gt;会把它范围内的表单元素信息提交给服务器</span><br><span class="line">    （2）格式</span><br><span class="line">     	&lt;form action&#x3D;&quot;url地址&quot; method&#x3D;&quot;提交方式&quot; name&#x3D;&quot;表单域名称&quot;&gt;</span><br><span class="line">     		各种表单元素控件</span><br><span class="line">     	&lt;&#x2F;form&gt;</span><br><span class="line">     （3）常用属性</span><br><span class="line">     	a、action</span><br><span class="line">     		属性值：url地址</span><br><span class="line">     		作用：用于指定接收并处理表单数据的服务器程序的url地址</span><br><span class="line">     	b、method</span><br><span class="line">     		get&#x2F;post</span><br><span class="line">     		用于设置表单数据的提交方式，其取值为get或post</span><br><span class="line">     	c、name</span><br><span class="line">     		名称</span><br><span class="line">     		用于指定表单的名称，以区分同一个页面中的多个表单域</span><br><span class="line">2、表单控件（表元素）</span><br><span class="line">	（1）input</span><br><span class="line">		a、格式</span><br><span class="line">			&lt;input type&#x3D;&quot;属性值&quot; &#x2F;&gt;</span><br><span class="line">		b、注意事项</span><br><span class="line">			&lt;input &#x2F;&gt;标签为单标签</span><br><span class="line">			type属性设置不用的属性值用来指定不同的控件类型</span><br><span class="line">				1、button</span><br><span class="line">					定义可点击按钮（多数情况下，用于通过JavaScript启动脚本）</span><br><span class="line">				2、checkbox</span><br><span class="line">					定义复选框</span><br><span class="line">				3、file</span><br><span class="line">					定义输入字段和“浏览“按钮，供文件上传</span><br><span class="line">				4、hidden</span><br><span class="line">					定义隐藏的的输入字段</span><br><span class="line">				5、image</span><br><span class="line">					定义图像形式的提交按钮</span><br><span class="line">				6、password</span><br><span class="line">					定义密码字段。该字段中的字符被掩码</span><br><span class="line">				7、radio</span><br><span class="line">					定义单选按钮</span><br><span class="line">				8、reset</span><br><span class="line">					定义重置按钮。重置按钮会清除表单中的所有数据</span><br><span class="line">				9、submit</span><br><span class="line">					定义提交按钮。提交按钮会把表单数据发送到服务器</span><br><span class="line">				10、text</span><br><span class="line">					定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符</span><br><span class="line">3、提示信息</span><br></pre></td></tr></table></figure>
<img src="/2021/03/19/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/image-20210319174503279.png" class="" title="表单组成">]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>web前端学习</tag>
      </tags>
  </entry>
  <entry>
    <title>前端返回的数据前面都带了个逗号</title>
    <url>/2021/03/11/%E5%89%8D%E7%AB%AF%E8%BF%94%E5%9B%9E%E7%9A%84%E6%95%B0%E6%8D%AE%E5%89%8D%E9%9D%A2%E9%83%BD%E5%B8%A6%E4%BA%86%E4%B8%AA%E9%80%97%E5%8F%B7/</url>
    <content><![CDATA[<img src="/2021/03/11/%E5%89%8D%E7%AB%AF%E8%BF%94%E5%9B%9E%E7%9A%84%E6%95%B0%E6%8D%AE%E5%89%8D%E9%9D%A2%E9%83%BD%E5%B8%A6%E4%BA%86%E4%B8%AA%E9%80%97%E5%8F%B7/image-20210311140951189.png" class="">



<p>原因是jsp页面的form表单有相同的path，导致的</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>博客-hexo_nodeJs_cnpm_yarn安装</title>
    <url>/2021/06/28/%E5%8D%9A%E5%AE%A2-hexo-nodeJs-cnpm-yarn%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<p>一、nodeJs安装</p>
<p>​    傻瓜式安装，中间有个选项是自动安装所需组件，这个要勾选，勾选后安装完成会弹出PowerShell来安装必要的组件</p>
<img src="/2021/06/28/%E5%8D%9A%E5%AE%A2-hexo-nodeJs-cnpm-yarn%E5%AE%89%E8%A3%85/image-20210628093321071.png" class="" title="image-20210628093321071">

<img src="/2021/06/28/%E5%8D%9A%E5%AE%A2-hexo-nodeJs-cnpm-yarn%E5%AE%89%E8%A3%85/image-20210628093434864.png" class="" title="image-20210628093434864">

<p>二、cnpm安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<img src="/2021/06/28/%E5%8D%9A%E5%AE%A2-hexo-nodeJs-cnpm-yarn%E5%AE%89%E8%A3%85/image-20210628093539138.png" class="" title="image-20210628093539138">

<p>注意：安装后cnpm并不能正常使用</p>
<img src="/2021/06/28/%E5%8D%9A%E5%AE%A2-hexo-nodeJs-cnpm-yarn%E5%AE%89%E8%A3%85/image-20210628094438804.png" class="" title="image-20210628094438804">

<p> 解决：使用管理员打开PowerShell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure>
<img src="/2021/06/28/%E5%8D%9A%E5%AE%A2-hexo-nodeJs-cnpm-yarn%E5%AE%89%E8%A3%85/image-20210628094515925.png" class="" title="image-20210628094515925">

<img src="/2021/06/28/%E5%8D%9A%E5%AE%A2-hexo-nodeJs-cnpm-yarn%E5%AE%89%E8%A3%85/image-20210628094544620.png" class="" title="image-20210628094544620">

<p>参考：<a href="https://blog.csdn.net/majing0520/article/details/105993470">https://blog.csdn.net/majing0520/article/details/105993470</a></p>
<p>三、yarn安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure>
<img src="/2021/06/28/%E5%8D%9A%E5%AE%A2-hexo-nodeJs-cnpm-yarn%E5%AE%89%E8%A3%85/image-20210628093737770.png" class="" title="image-20210628093737770">

<img src="/2021/06/28/%E5%8D%9A%E5%AE%A2-hexo-nodeJs-cnpm-yarn%E5%AE%89%E8%A3%85/image-20210628093806226.png" class="" title="image-20210628093806226">

]]></content>
      <categories>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>博客-hexo自建博客域名解析</title>
    <url>/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p>一、申请域名（要钱）</p>
<p>liuwf.top</p>
<p>二、域名解析</p>
<p>网址：<a href="https://console.dnspod.cn/dns/list">https://console.dnspod.cn/dns/list</a></p>
<p>1、添加待解析的域名</p>
<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622154258490.png" class="" title="image-20210622154258490">

<p>2、快速解析域名</p>
<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622154341152.png" class="" title="image-20210622154341152">

<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622154422456.png" class="" title="image-20210622154422456">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;你的github名称加上.github.com</span><br><span class="line">&#x2F;&#x2F;https:&#x2F;&#x2F;github.com&#x2F;liuwf-github</span><br><span class="line">ping liuwf-github.github.com</span><br></pre></td></tr></table></figure>
<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622154536165.png" class="" title="image-20210622154536165">

<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622154442491.png" class="" title="image-20210622154442491">

<p>将这个ip地址添加到刚才的快速添加解析中就可</p>
<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622154730998.png" class="" title="image-20210622154730998">

<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622154826207.png" class="" title="image-20210622154826207">

<p>三、在github中设置域名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;liuwf-github</span><br></pre></td></tr></table></figure>
<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622154935910.png" class="" title="image-20210622154935910">

<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622155000458.png" class="" title="image-20210622155000458">

<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622155029172.png" class="" title="image-20210622155029172">

<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622155052223.png" class="" title="image-20210622155052223">

<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622155118073.png" class="" title="image-20210622155118073">

<p>四、大功告成</p>
<p>尝试访问liuwf.top</p>
<img src="/2021/06/29/%E5%8D%9A%E5%AE%A2-hexo%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/image-20210622155156910.png" class="" title="image-20210622155156910">





]]></content>
      <categories>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>同一台电脑使用多个gitee账号对一个项目进行管理</title>
    <url>/2021/01/29/%E5%90%8C%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E5%A4%9A%E4%B8%AAgitee%E8%B4%A6%E5%8F%B7%E5%AF%B9%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E8%BF%9B%E8%A1%8C%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="一、先决条件"><a href="#一、先决条件" class="headerlink" title="一、先决条件"></a>一、先决条件</h2><p>先在一个账号上创建一个仓库<br>创建一个项目<br>将另一个账号添加到这个项目的管理者</p>
<h2 id="二、生成对应秘钥配置到对应账号中"><a href="#二、生成对应秘钥配置到对应账号中" class="headerlink" title="二、生成对应秘钥配置到对应账号中"></a>二、生成对应秘钥配置到对应账号中</h2><h3 id="1、生成ssh秘钥"><a href="#1、生成ssh秘钥" class="headerlink" title="1、生成ssh秘钥"></a>1、生成ssh秘钥</h3><p>分别生成这两个账号的rsa密钥、并分别配置到对应的gitee中<br>在这边发现只能将密钥生成在c盘用户目录下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Users\Stack\.ssh</span><br></pre></td></tr></table></figure>
<p>不能在其他路径，不然后面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T User@Host</span><br></pre></td></tr></table></figure>
<p>会报错，无法解决（血与泪的教训）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot; &#x2F;&#x2F;格式</span><br><span class="line">ssh-keygen -t rsa -C “liuwf17859719373@126.com” &#x2F;&#x2F;例子</span><br></pre></td></tr></table></figure>
<p>记得将每个rsa重命名并记住</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">id_rsa_liuwf17859719373 &#x2F;&#x2F;例子</span><br></pre></td></tr></table></figure>
<p>生成后添加到对应gitee账号的秘钥ssh秘钥中</p>
<h3 id="2、在-ssh目录下增加配置config文件（没有后缀名）"><a href="#2、在-ssh目录下增加配置config文件（没有后缀名）" class="headerlink" title="2、在.ssh目录下增加配置config文件（没有后缀名）"></a>2、在.ssh目录下增加配置config文件（没有后缀名）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#liuwf17859719373</span><br><span class="line">Host liuwf17859719373 #别名</span><br><span class="line">HostName gitee.com #远程仓库真实地址也有可能是ip地址xxx.xxx.xxx.xxx</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_liuwf17859719373 #id_ssh秘钥地址</span><br><span class="line">#liuwf13015946150</span><br><span class="line">Host liuwf13015946150</span><br><span class="line">HostName gitee.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_liuwf13015946150</span><br></pre></td></tr></table></figure>
<p>注意：这样设置后克隆仓库只能用ssh方式克隆，不能用http方式</p>
<h3 id="3、测试是否配置成功"><a href="#3、测试是否配置成功" class="headerlink" title="3、测试是否配置成功"></a>3、测试是否配置成功</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T User@Host &#x2F;&#x2F;格式</span><br><span class="line">ssh -T git@liuwf17859719373 &#x2F;&#x2F;例子</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2021020511060114.png#pic_center"></p>
<p><img src="https://img-blog.csdnimg.cn/20210205110609958.png#pic_center"></p>
<h2 id="三、用账号1管理仓库-x6c-x69-117-119-102-x31-55-56-x35-57-x37-49-x39-x33-55-51-x40-x31-50-54-x2e-x63-111-x6d"><a href="#三、用账号1管理仓库-x6c-x69-117-119-102-x31-55-56-x35-57-x37-49-x39-x33-55-51-x40-x31-50-54-x2e-x63-111-x6d" class="headerlink" title="三、用账号1管理仓库:&#x6c;&#x69;&#117;&#119;&#102;&#x31;&#55;&#56;&#x35;&#57;&#x37;&#49;&#x39;&#x33;&#55;&#51;&#x40;&#x31;&#50;&#54;&#x2e;&#x63;&#111;&#x6d;"></a>三、用账号1管理仓库:<a href="mailto:&#x6c;&#x69;&#117;&#119;&#102;&#x31;&#55;&#56;&#x35;&#57;&#x37;&#49;&#x39;&#x33;&#55;&#51;&#x40;&#x31;&#50;&#54;&#x2e;&#x63;&#111;&#x6d;">&#x6c;&#x69;&#117;&#119;&#102;&#x31;&#55;&#56;&#x35;&#57;&#x37;&#49;&#x39;&#x33;&#55;&#51;&#x40;&#x31;&#50;&#54;&#x2e;&#x63;&#111;&#x6d;</a></h2><h3 id="1、克隆仓库"><a href="#1、克隆仓库" class="headerlink" title="1、克隆仓库"></a>1、克隆仓库</h3><p>gitee上复制的克隆地址：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git@gitee.com:liuwf17859719373&#x2F;liuwf17859719373.git</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;代码格式</span><br><span class="line">git clone User@Host:仓库地址.git </span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;例子</span><br><span class="line">git clone git@liuwf17859719373:liuwf17859719373&#x2F;liuwf17859719373.git </span><br></pre></td></tr></table></figure>
<h3 id="2、删除全局配置"><a href="#2、删除全局配置" class="headerlink" title="2、删除全局配置"></a>2、删除全局配置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global --unset &#39;user.name&#39;</span><br><span class="line">git config --global --unset &#39;user.email&#39;</span><br></pre></td></tr></table></figure>
<h3 id="3、设置当前本地仓库的user-name和user-email"><a href="#3、设置当前本地仓库的user-name和user-email" class="headerlink" title="3、设置当前本地仓库的user.name和user.email"></a>3、设置当前本地仓库的user.name和user.email</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config user.name &#96;liuwf17859719373&#96;</span><br><span class="line">git config user.email &#96;liuwf17859719373@126.com&#96;</span><br></pre></td></tr></table></figure>
<p>注意,在设置结束之后,创建git repo(<code>git init</code>)的时候,一定要再次检查一下用户名和用户邮箱,如果不对, 需要再次设置.<br> 如果发现修改不成功，可能是凭证缓存没清除：<br> 到控制面板搜索Windows凭证删除普通凭证中的gitee凭证。</p>
<h3 id="4、将本地修改的内容使用设置的不同账号上传到gitee远程仓库中"><a href="#4、将本地修改的内容使用设置的不同账号上传到gitee远程仓库中" class="headerlink" title="4、将本地修改的内容使用设置的不同账号上传到gitee远程仓库中"></a>4、将本地修改的内容使用设置的不同账号上传到gitee远程仓库中</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;查看是否是目标账号</span><br><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;上传代码</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;上传文件备注&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>
<h2 id="四、使用账号2管理仓库-108-105-x75-119-102-x31-51-x30-x31-x35-x39-52-54-x31-53-x30-x40-49-x32-x36-46-x63-111-109"><a href="#四、使用账号2管理仓库-108-105-x75-119-102-x31-51-x30-x31-x35-x39-52-54-x31-53-x30-x40-49-x32-x36-46-x63-111-109" class="headerlink" title="四、使用账号2管理仓库:&#108;&#105;&#x75;&#119;&#102;&#x31;&#51;&#x30;&#x31;&#x35;&#x39;&#52;&#54;&#x31;&#53;&#x30;&#x40;&#49;&#x32;&#x36;&#46;&#x63;&#111;&#109;"></a>四、使用账号2管理仓库:<a href="mailto:&#108;&#105;&#x75;&#119;&#102;&#x31;&#51;&#x30;&#x31;&#x35;&#x39;&#52;&#54;&#x31;&#53;&#x30;&#x40;&#49;&#x32;&#x36;&#46;&#x63;&#111;&#109;">&#108;&#105;&#x75;&#119;&#102;&#x31;&#51;&#x30;&#x31;&#x35;&#x39;&#52;&#54;&#x31;&#53;&#x30;&#x40;&#49;&#x32;&#x36;&#46;&#x63;&#111;&#109;</a></h2><h3 id="1、使用账号-108-105-117-x77-102-49-x33-x30-49-x35-x39-52-54-x31-53-x30-64-x31-x32-54-46-99-x6f-109-克隆仓库"><a href="#1、使用账号-108-105-117-x77-102-49-x33-x30-49-x35-x39-52-54-x31-53-x30-64-x31-x32-54-46-99-x6f-109-克隆仓库" class="headerlink" title="1、使用账号&#108;&#105;&#117;&#x77;&#102;&#49;&#x33;&#x30;&#49;&#x35;&#x39;&#52;&#54;&#x31;&#53;&#x30;&#64;&#x31;&#x32;&#54;&#46;&#99;&#x6f;&#109;克隆仓库"></a>1、使用账号<a href="mailto:&#108;&#105;&#117;&#x77;&#102;&#49;&#x33;&#x30;&#49;&#x35;&#x39;&#52;&#54;&#x31;&#53;&#x30;&#64;&#x31;&#x32;&#54;&#46;&#99;&#x6f;&#109;">&#108;&#105;&#117;&#x77;&#102;&#49;&#x33;&#x30;&#49;&#x35;&#x39;&#52;&#54;&#x31;&#53;&#x30;&#64;&#x31;&#x32;&#54;&#46;&#99;&#x6f;&#109;</a>克隆仓库</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git@liuwf13015946150:liuwf17859719373&#x2F;liuwf17859719373.git</span><br></pre></td></tr></table></figure>
<h3 id="2、设置本地仓库user-name和user-email"><a href="#2、设置本地仓库user-name和user-email" class="headerlink" title="2、设置本地仓库user.name和user.email"></a>2、设置本地仓库user.name和user.email</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config user.name &quot;liuwf13015946150&quot;</span><br><span class="line">git config user.email &quot;liuwf13015946150@126.com&quot;</span><br></pre></td></tr></table></figure>
<h3 id="3、查看本地user账户信息是否修改成功"><a href="#3、查看本地user账户信息是否修改成功" class="headerlink" title="3、查看本地user账户信息是否修改成功"></a>3、查看本地user账户信息是否修改成功</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch&#x2F;&#x2F;查看当前分支</span><br><span class="line">git pull&#x2F;&#x2F;更新代码到本地</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git status</span><br><span class="line">git commit -m &quot;message&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>
<h2 id="五、在提交前记得先更新代码"><a href="#五、在提交前记得先更新代码" class="headerlink" title="五、在提交前记得先更新代码"></a>五、在提交前记得先更新代码</h2><pre><code>   在多人协作开发时，经常碰到同事把最新修改推送到远程库，你在本地也做了修改，这个时候无论是执行git pull还是执行git push都会提示错误，我的解决方式如下：</code></pre>
<p>先隐藏掉本地的修改，然后执行git pull从代码块拉取最新代码，<br>具体步骤如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.输入 git status 查看本地的修改</span><br><span class="line">2.输入git stash 隐藏掉本地修改</span><br><span class="line">3.输入 git pull 从代码库拉取更新</span><br><span class="line">4.输入 git stash pop stash@&#123;版本号&#125;</span><br><span class="line">5.然后再git add git commit git push 就行了</span><br><span class="line"></span><br><span class="line">git pull origin master</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;111&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>
<p>参考博客：<br><a href="https://www.shenxt.info/post/2020-03-11-multi-github-in-one-pc/">https://www.shenxt.info/post/2020-03-11-multi-github-in-one-pc/</a><br><a href="https://blog.csdn.net/wowoniuzailushang/article/details/78517744">https://blog.csdn.net/wowoniuzailushang/article/details/78517744</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>一台电脑使用多个Gitee账号管理一个仓库</tag>
      </tags>
  </entry>
  <entry>
    <title>启动windows的openoffice服务</title>
    <url>/2021/05/14/%E5%90%AF%E5%8A%A8windows%E7%9A%84openoffice%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p>1</p>
<img src="/2021/05/14/%E5%90%AF%E5%8A%A8windows%E7%9A%84openoffice%E6%9C%8D%E5%8A%A1/image-20210514091921125.png" class="" title="image-20210514091921125">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;启动服务</span><br><span class="line">cd C:\Program Files (x86)\OpenOffice 4\program</span><br><span class="line">soffice -headless -accept&#x3D;&quot;socket,host&#x3D;127.0.0.1,port&#x3D;8100;urp;&quot; -nofirststartwizard</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看端口对应的pid</span><br><span class="line">netstat -ano|findstr &quot;8100&quot;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看pid对应的服务程序名</span><br><span class="line">tasklist|findstr &quot;ipd值&quot;</span><br></pre></td></tr></table></figure>


<p>参考：<a href="https://blog.csdn.net/a363722188/article/details/46775221">https://blog.csdn.net/a363722188/article/details/46775221</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>安装openoffice服务</tag>
      </tags>
  </entry>
  <entry>
    <title>基于google工具类Thumbnailator实现图片不失真压缩</title>
    <url>/2021/01/25/%E5%9F%BA%E4%BA%8Egoogle%E5%B7%A5%E5%85%B7%E7%B1%BBThumbnailator%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E4%B8%8D%E5%A4%B1%E7%9C%9F%E5%8E%8B%E7%BC%A9/</url>
    <content><![CDATA[<h3 id="1、图片压缩，有下面几个要求。"><a href="#1、图片压缩，有下面几个要求。" class="headerlink" title="1、图片压缩，有下面几个要求。"></a>1、图片压缩，有下面几个要求。</h3><p>1、压缩程度可控制，想压缩成多小就多小。</p>
<p>2、压缩之后图片尽可能的不失真。</p>
<p>3、压缩速度要快。</p>
<p>4、代码简单，依赖较少。</p>
<h3 id="2、maven的地址"><a href="#2、maven的地址" class="headerlink" title="2、maven的地址"></a>2、maven的地址</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;net.coobird&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;thumbnailator&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;0.4.8&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<h3 id="3、使用起来特别的简单：一行代码就搞定了"><a href="#3、使用起来特别的简单：一行代码就搞定了" class="headerlink" title="3、使用起来特别的简单：一行代码就搞定了"></a>3、使用起来特别的简单：一行代码就搞定了</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Thumbnails.of(&quot;原图文件的路径&quot;)</span><br><span class="line">        .scale(1f)</span><br><span class="line">        .outputQuality(0.5f)</span><br><span class="line">        .toFile(&quot;压缩后文件的路径&quot;);</span><br></pre></td></tr></table></figure>
<p>其中的scale是可以指定图片的大小，值在0到1之间，1f就是原图大小，0.5就是原图的一半大小，这里的大小是指图片的长宽。</p>
<p>而outputQuality是图片的质量，值也是在0到1，越接近于1质量越好，越接近于0质量越差。</p>
<p>对于压缩图片来说上面就已经足够了。</p>
<h3 id="PS：经过使用后的反馈，这个工具无法正确压缩出png格式的图片"><a href="#PS：经过使用后的反馈，这个工具无法正确压缩出png格式的图片" class="headerlink" title="PS：经过使用后的反馈，这个工具无法正确压缩出png格式的图片"></a>PS：经过使用后的反馈，这个工具无法正确压缩出png格式的图片</h3><p>因为png本身就是一种无损的图片格式，而jpg是一种压缩的图片格式；<br>当前方法目的是为了在尽可能不丢失图片质量的情况下进行的压缩；<br>建议将图片压缩后的格式设置成jpg来解决；.outputFormat(“jpg”)<br>工具源码本身最后还是调用jdk中的ImageIO.createImageOutputStream(fos);来实现的；</p>
<h3 id="4、例子"><a href="#4、例子" class="headerlink" title="4、例子"></a>4、例子</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import java.awt.image.BufferedImage;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.OutputStream;</span><br><span class="line"></span><br><span class="line">import javax.imageio.ImageIO;</span><br><span class="line"></span><br><span class="line">import net.coobird.thumbnailator.Thumbnails;</span><br><span class="line">import net.coobird.thumbnailator.geometry.Positions;</span><br><span class="line"></span><br><span class="line">public class ThumbnailatorTest &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * </span><br><span class="line">     * @param args</span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void main(String[] args) throws IOException &#123;</span><br><span class="line">        ThumbnailatorTest thumbnailatorTest &#x3D; new ThumbnailatorTest();</span><br><span class="line">        thumbnailatorTest.test1();</span><br><span class="line">        thumbnailatorTest.test2();</span><br><span class="line">        thumbnailatorTest.test3();</span><br><span class="line">        thumbnailatorTest.test4();</span><br><span class="line">        thumbnailatorTest.test5();</span><br><span class="line">        thumbnailatorTest.test6();</span><br><span class="line">        thumbnailatorTest.test7();</span><br><span class="line">        thumbnailatorTest.test8();</span><br><span class="line">        thumbnailatorTest.test9();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 指定大小进行缩放</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void test1() throws IOException &#123;</span><br><span class="line">        &#x2F;*</span><br><span class="line">         * size(width,height) 若图片横比200小，高比300小，不变</span><br><span class="line">         * 若图片横比200小，高比300大，高缩小到300，图片比例不变 若图片横比200大，高比300小，横缩小到200，图片比例不变</span><br><span class="line">         * 若图片横比200大，高比300大，图片按比例缩小，横为200或高为300</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(200, 300).toFile(&quot;C:&#x2F;image_200x300.jpg&quot;);</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(2560, 2048).toFile(&quot;C:&#x2F;image_2560x2048.jpg&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 按照比例进行缩放</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void test2() throws IOException &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * scale(比例)</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).scale(0.25f).toFile(&quot;C:&#x2F;image_25%.jpg&quot;);</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).scale(1.10f).toFile(&quot;C:&#x2F;image_110%.jpg&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 不按照比例，指定大小进行缩放</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void test3() throws IOException &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * keepAspectRatio(false) 默认是按照比例缩放的</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(120, 120).keepAspectRatio(false).toFile(&quot;C:&#x2F;image_120x120.jpg&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 旋转</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void test4() throws IOException &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * rotate(角度),正数：顺时针 负数：逆时针</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(1280, 1024).rotate(90).toFile(&quot;C:&#x2F;image+90.jpg&quot;);</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(1280, 1024).rotate(-90).toFile(&quot;C:&#x2F;iamge-90.jpg&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 水印</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void test5() throws IOException &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * watermark(位置，水印图，透明度)</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(1280, 1024).watermark(Positions.BOTTOM_RIGHT, ImageIO.read(new File(&quot;images&#x2F;watermark.png&quot;)), 0.5f)</span><br><span class="line">                .outputQuality(0.8f).toFile(&quot;C:&#x2F;image_watermark_bottom_right.jpg&quot;);</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(1280, 1024).watermark(Positions.CENTER, ImageIO.read(new File(&quot;images&#x2F;watermark.png&quot;)), 0.5f)</span><br><span class="line">                .outputQuality(0.8f).toFile(&quot;C:&#x2F;image_watermark_center.jpg&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 裁剪</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void test6() throws IOException &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * 图片中心400*400的区域</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).sourceRegion(Positions.CENTER, 400, 400).size(200, 200).keepAspectRatio(false)</span><br><span class="line">                .toFile(&quot;C:&#x2F;image_region_center.jpg&quot;);</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * 图片右下400*400的区域</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).sourceRegion(Positions.BOTTOM_RIGHT, 400, 400).size(200, 200).keepAspectRatio(false)</span><br><span class="line">                .toFile(&quot;C:&#x2F;image_region_bootom_right.jpg&quot;);</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * 指定坐标</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).sourceRegion(600, 500, 400, 400).size(200, 200).keepAspectRatio(false).toFile(&quot;C:&#x2F;image_region_coord.jpg&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 转化图像格式</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void test7() throws IOException &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * outputFormat(图像格式)</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(1280, 1024).outputFormat(&quot;png&quot;).toFile(&quot;C:&#x2F;image_1280x1024.png&quot;);</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(1280, 1024).outputFormat(&quot;gif&quot;).toFile(&quot;C:&#x2F;image_1280x1024.gif&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 输出到OutputStream</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void test8() throws IOException &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * toOutputStream(流对象)</span><br><span class="line">         *&#x2F;</span><br><span class="line">        OutputStream os &#x3D; new FileOutputStream(&quot;C:&#x2F;image_1280x1024_OutputStream.png&quot;);</span><br><span class="line">        Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(1280, 1024).toOutputStream(os);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 输出到BufferedImage</span><br><span class="line">     * </span><br><span class="line">     * @throws IOException</span><br><span class="line">     *&#x2F;</span><br><span class="line">    private void test9() throws IOException &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * asBufferedImage() 返回BufferedImage</span><br><span class="line">         *&#x2F;</span><br><span class="line">        BufferedImage thumbnail &#x3D; Thumbnails.of(&quot;images&#x2F;test.jpg&quot;).size(1280, 1024).asBufferedImage();</span><br><span class="line">        ImageIO.write(thumbnail, &quot;jpg&quot;, new File(&quot;C:&#x2F;image_1280x1024_BufferedImage.jpg&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>无损压缩图片</tag>
      </tags>
  </entry>
  <entry>
    <title>基于逍遥模拟器的王者荣耀自动刷金币脚本</title>
    <url>/2021/01/22/%E5%9F%BA%E4%BA%8E%E9%80%8D%E9%81%A5%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%9A%84%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80%E8%87%AA%E5%8A%A8%E5%88%B7%E9%87%91%E5%B8%81%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>王者荣耀金币周上限4000+，经验周上限100000，想要手动刷到上限实在是浪费时间、磨损手指。看了这篇教程，让你轻松挂机刷爆金币/经验上限。 本教程适用于手机屏幕分辨率为2160*1080，其他分辨率需要自行更改代码中的坐标，显示手机坐标自行百度。</p>
<h3 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h3><p>1、手机或装有手机模拟器（推荐逍遥模拟器）的电脑。<br>2、安装好王者荣耀，auto.js</p>
<p>参考：<a href="https://github.com/hyb1996/Auto.js/issues/500">https://github.com/hyb1996/Auto.js/issues/500</a></p>
<p>​            <a href="https://dl.recolic.net/autojs">https://dl.recolic.net/autojs</a></p>
<p>或者上我的gitee下载：<a href="https://gitee.com/FunBreeze/auto.js.git">https://gitee.com/FunBreeze/auto.js.git</a></p>
<img src="/2021/01/22/%E5%9F%BA%E4%BA%8E%E9%80%8D%E9%81%A5%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%9A%84%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80%E8%87%AA%E5%8A%A8%E5%88%B7%E9%87%91%E5%B8%81%E8%84%9A%E6%9C%AC/image-20210226103432941.png" class="">

<img src="/2021/01/22/%E5%9F%BA%E4%BA%8E%E9%80%8D%E9%81%A5%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%9A%84%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80%E8%87%AA%E5%8A%A8%E5%88%B7%E9%87%91%E5%B8%81%E8%84%9A%E6%9C%AC/image-20210226103522682.png" class="">

<p>3、开启开发者模式，打开指针位置，以下步骤中凡是需要点击的地方都要记录下坐标。<br>4、打开王者荣耀，进入游戏，进入万象天工。<br>5、左上角快捷入口添加为冒险玩法，进入冒险玩法。<br>6、进入挑战，选择大师级别魔女回忆，更换阵容为三个射手，点击闯关。<br>6、进入闯关后，开启右上角自动模式，不要手动点击屏幕，等待关卡完成，记录下完成关卡的时间。<br>7、记录“再来一次”的坐标，之后按两次返回键退出王者荣耀。<br>8、开始挂机<br>9、打开auto.js，开启无障碍模式和悬浮窗，在设置中打开音量上键停止所有脚本（如果有root权限可以开启通过root权限自动启动服务），右下角导入文件或新建文件将代码粘贴。<br>10、将准备工作中记录下的坐标在代码中进行更改，更改的地方是每个对应方法中click()中的两个参数。<br>11、如果手机卡顿，则更改sleep()中的参数，1000表示1秒。<br>12、将代码保存运行，看看是否可以正常闯关，如果中间有任何地方有问题（点不到、点击过快或太慢），则多修改一下代码中的坐标和sleep时间。<br>多跑两次没问题之后，就可以挂着不管了，等着金币/经验刷满退出脚本即可。</p>
<h3 id="2、代码"><a href="#2、代码" class="headerlink" title="2、代码"></a>2、代码</h3><p>有问题可以留言或提Issues。 [图文教程] (<a href="https://gitee.com/FunBreeze/auto.js.git">https://gitee.com/FunBreeze/auto.js.git</a>)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;再来一次</span><br><span class="line">function zailai() &#123;</span><br><span class="line">    for (var i &#x3D; 0; i &lt; 2; i++) &#123;</span><br><span class="line">        click(1840, 1000);</span><br><span class="line">        sleep(500);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;对话</span><br><span class="line">function duihua() &#123;</span><br><span class="line">    for (var j &#x3D; 0; j &lt; 20; j++) &#123;</span><br><span class="line">        click(1000, 500);</span><br><span class="line">        sleep(1000);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;闯关</span><br><span class="line">function chuangguan() &#123;</span><br><span class="line">    for (var k &#x3D; 0; k &lt; 2; k++) &#123;</span><br><span class="line">        click(1555, 880);</span><br><span class="line">        sleep(500);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function run(hour) &#123;</span><br><span class="line"></span><br><span class="line">    var loop &#x3D; 55 * hour;</span><br><span class="line">    for (var n &#x3D; 0; n &lt; loop; n++) &#123;</span><br><span class="line">        toastLog(&quot;第&quot;+n+&quot;次冒险&quot;);</span><br><span class="line">        zailai();</span><br><span class="line">        sleep(1000);</span><br><span class="line"></span><br><span class="line">        chuangguan();</span><br><span class="line">        toastLog(&quot;闯关&quot;);</span><br><span class="line">        sleep(10000);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;duihua();</span><br><span class="line">        sleep(1000 * 25);</span><br><span class="line">        toastLog(&quot;对话&quot;);</span><br><span class="line">        duihua();</span><br><span class="line">        sleep(1000);</span><br><span class="line">        &#x2F;&#x2F;小妲己提醒</span><br><span class="line">        if(n &gt; 45)&#123;</span><br><span class="line">            click(1400,725);</span><br><span class="line">            sleep(1000);&#125;</span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;关闭广告</span><br><span class="line">function closeAD(t) &#123;</span><br><span class="line">    for (var i &#x3D; 0; i &lt; t; i++) &#123;</span><br><span class="line">        click(1900, 190);</span><br><span class="line">        sleep(800);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;退出王者荣耀</span><br><span class="line">function exitApp() &#123;</span><br><span class="line">    back();</span><br><span class="line">    sleep(500);</span><br><span class="line">    back();</span><br><span class="line">    sleep(1000);</span><br><span class="line">    click(1200, 750);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function click2(x, y, t) &#123;</span><br><span class="line">    for (var j &#x3D; 0; j &lt; t; j++) &#123;</span><br><span class="line">        click(x, y);</span><br><span class="line">        sleep(500);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function runtime(times) &#123;</span><br><span class="line">    launchApp(&quot;王者荣耀&quot;);</span><br><span class="line">    toastLog(&quot;打开王者荣耀&quot;);</span><br><span class="line">    sleep(30 * 1000);</span><br><span class="line">    closeAD(2);</span><br><span class="line">    toastLog(&quot;关闭弹窗&quot;);</span><br><span class="line">    click2(1065, 850,2); &#x2F;&#x2F; 开始游戏</span><br><span class="line">    toastLog(&quot;开始游戏&quot;);</span><br><span class="line">    sleep(10000);</span><br><span class="line">    closeAD(8);</span><br><span class="line">    toastLog(&quot;关闭弹窗2&quot;);</span><br><span class="line">    click(1600, 800); &#x2F;&#x2F;万象天工</span><br><span class="line">    toastLog(&quot;万象天工&quot;);</span><br><span class="line">    sleep(2000);</span><br><span class="line">    click(134, 268); &#x2F;&#x2F;快捷入口 冒险</span><br><span class="line">    toastLog(&quot;冒险模式&quot;);</span><br><span class="line">    sleep(2000);</span><br><span class="line">    click(1000, 500); &#x2F;&#x2F; 冒险</span><br><span class="line">    toastLog(&quot;进入冒险&quot;);</span><br><span class="line">    sleep(2000);</span><br><span class="line">    click(1600, 900); &#x2F;&#x2F; 下一步</span><br><span class="line">    toastLog(&quot;开始冒险&quot;);</span><br><span class="line">    run(times);</span><br><span class="line">    exitApp();</span><br><span class="line">    toastLog(&quot;退出王者荣耀&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">runtime(3); &#x2F;&#x2F; 3小时</span><br><span class="line">sleep(60 * 15 * 1000); &#x2F;&#x2F;休息15分钟</span><br><span class="line">runtime(3); &#x2F;&#x2F; 3小时</span><br><span class="line">sleep(60 * 15 * 1000); &#x2F;&#x2F;休息15分钟</span><br><span class="line">while (1) &#123;</span><br><span class="line">    runtime(1);</span><br><span class="line">    sleep(60 * 15 * 1000); &#x2F;&#x2F;休息15分钟</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>代码我已放到gitee上，有需要自取，有问题可以留言或提Issues。<br><a href="https://gitee.com/FunBreeze/auto.js.git">https://gitee.com/FunBreeze/auto.js.git</a></p>
<h3 id="3、原理"><a href="#3、原理" class="headerlink" title="3、原理"></a>3、原理</h3><p>模拟人点击游戏的过程，冒险模式时间和行为相对固定，适合刷金币/经验。</p>
<p>参考：<a href="https://github.com/MaQuanZhi/wzry_auto">https://github.com/MaQuanZhi/wzry_auto</a></p>
]]></content>
      <categories>
        <category>娱乐</category>
      </categories>
      <tags>
        <tag>王者荣耀刷金币脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>学习-MySql</title>
    <url>/2021/06/29/%E5%AD%A6%E4%B9%A0-MySql/</url>
    <content><![CDATA[<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>先运行存储路径的记录</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> fzt_attr_new(</span><br><span class="line">id,filename,punid,filesize,type,file_url,create_by,create_time,update_by,update_time,del_flag,pdf_url,document_type) </span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">unid,filename,punid,filesize,TYPE,file_url,create_by,create_time,update_by,update_time,del_flag,<span class="keyword">NULL</span>,<span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">FROM</span> fzt_attr </span><br><span class="line"><span class="keyword">WHERE</span> (del_flag<span class="operator">&lt;&gt;</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">OR</span> del_flag <span class="keyword">IS</span> <span class="keyword">NULL</span>) </span><br><span class="line"><span class="keyword">AND</span> (content<span class="operator">=</span><span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> content <span class="keyword">IS</span> <span class="keyword">NULL</span>)</span><br><span class="line"><span class="keyword">AND</span> (file_url <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> file_url<span class="operator">&lt;&gt;</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">AND</span> (save_type<span class="operator">=</span><span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>再运行存储在大字段里面的文件 file_url先设为<span class="keyword">Null</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> fzt_attr_new(</span><br><span class="line">id,filename,punid,filesize,type,file_url,create_by,create_time,update_by,update_time,del_flag,pdf_url,document_type) </span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">unid,filename,punid,filesize,TYPE,</span><br><span class="line">CONCAT(<span class="string">&#x27;D:\\attr\\file_old\\&#x27;</span>,fzt_attr.unid,<span class="string">&#x27;\\&#x27;</span>,fzt_attr.unid,<span class="string">&#x27;.&#x27;</span>,<span class="keyword">RIGHT</span>(RTRIM(fzt_attr.filename), LOCATE(<span class="string">&#x27;.&#x27;</span>,REVERSE(RTRIM(fzt_attr.filename))) <span class="operator">-</span> <span class="number">1</span>)) <span class="keyword">AS</span> file_url</span><br><span class="line">,create_by,create_time,update_by,update_time,del_flag,<span class="keyword">NULL</span>,<span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">FROM</span> fzt_attr </span><br><span class="line"><span class="keyword">WHERE</span> (del_flag<span class="operator">&lt;&gt;</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">OR</span> del_flag <span class="keyword">IS</span> <span class="keyword">NULL</span>) </span><br><span class="line"><span class="keyword">AND</span> (content<span class="operator">&lt;&gt;</span><span class="string">&#x27;&#x27;</span> <span class="keyword">OR</span> content <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line"><span class="keyword">AND</span> (file_url <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> file_url<span class="operator">=</span><span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">AND</span> (save_type<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>拼接字符串</span><br><span class="line">CONCAT(<span class="string">&#x27;D:\\attr\\file_old\\&#x27;</span>,fzt_attr.unid,<span class="string">&#x27;\\&#x27;</span>,fzt_attr.unid,<span class="string">&#x27;.&#x27;</span>,<span class="keyword">RIGHT</span>(RTRIM(fzt_attr.filename),LOCATE(<span class="string">&#x27;.&#x27;</span>,REVERSE(RTRIM(fzt_attr.filename))) <span class="operator">-</span> <span class="number">1</span>)) <span class="keyword">AS</span> file_url</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>获取文件名称(fzt_attr.filename)的后缀名不含.</span><br><span class="line"><span class="keyword">RIGHT</span>(RTRIM(fzt_attr.filename),LOCATE(<span class="string">&#x27;.&#x27;</span>,REVERSE(RTRIM(fzt_attr.filename))) <span class="operator">-</span> <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>学习-VUE</title>
    <url>/2021/06/29/%E5%AD%A6%E4%B9%A0-VUE/</url>
    <content><![CDATA[<p>1、JS方式</p>
<p>（1）准备一个div元素，也就是视图</p>
<p>（2）在js代码中准备一个json数据</p>
<p>（3）获取div对应的html dom对象</p>
<p>（4）把json数据赋给html dom对象</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> gareen=&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;盖伦&quot;</span>,<span class="string">&quot;hp&quot;</span>:<span class="number">616</span>&#125;;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> div1=<span class="built_in">document</span>.getElementById(<span class="string">&quot;div1&quot;</span>);</span></span><br><span class="line">  div1.innerHTML=gareen.name;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<img src="/2021/06/29/%E5%AD%A6%E4%B9%A0-VUE/image-20210514111825075.png" class="">

<p>2、VUE方式</p>
<p>（1）导入vue.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;http:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>（2）准备一个div元素</p>
<p>（3）在js代码中准备一个json数据</p>
<p>（4）创建一个Vue对象。 这个Vue对象就把数据 gareen和 视图 div1 关联起来了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">	  el: &#39;#div1&#39;,</span><br><span class="line">	  data: &#123;</span><br><span class="line">	    message: gareen</span><br><span class="line">	  &#125;</span><br><span class="line">	&#125;)</span><br></pre></td></tr></table></figure>
<p>（5）在视图div中，将数据取出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;gareen.name&#125;&#125;</span><br></pre></td></tr></table></figure>


<p>3、v-show</p>
<p>根据真假切换元素的显示状态</p>
<p>原理是修改元素的display，实现显示隐藏</p>
<p>指令后面的内容，最终都会解析为布尔值</p>
<p>数据改变之后，对应元素的显示状态会同步更新</p>
<p>4、替代显示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">columns:[</span><br><span class="line">    &#123; title: &#39;#&#39;,dataIndex: &#39;&#39;,key: &#39;rowIndex&#39;,align:&quot;center&quot;,</span><br><span class="line">    customRender:function(t,r,index)&#123;</span><br><span class="line">    return parseInt(index)+1;</span><br><span class="line">    &#125;&#125;,</span><br><span class="line">    &#123; title: &#39;标题&#39;,dataIndex: &#39;bt&#39;,align: &quot;center&quot;,scopedSlots: &#123; customRender: &#39;bt&#39; &#125;,&#125;,</span><br><span class="line">    &#123; title: &#39;描述&#39;,dataIndex: &#39;detail&#39;,align: &quot;center&quot;,scopedSlots: &#123; customRender: &#39;detail&#39; &#125;,&#125;,</span><br><span class="line">    &#123; title: &#39;是否公共&#39;,dataIndex: &#39;pub&#39;,align: &quot;center&quot;,</span><br><span class="line">    customRender: function (text) &#123;</span><br><span class="line">    if (text &#x3D;&#x3D; 0) &#123;</span><br><span class="line">    return &quot;私有&quot;;</span><br><span class="line">    &#125; else if (text &#x3D;&#x3D; 1) &#123;</span><br><span class="line">    return &quot;公共&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">    return text;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;&#125;,</span><br><span class="line">    &#123; title: &#39;创建人&#39;,dataIndex: &#39;createBy&#39;,align: &quot;center&quot;,&#125;,</span><br><span class="line">    &#123; title: &#39;创建时间&#39;,dataIndex: &#39;createTime&#39;,align: &quot;center&quot;,sorter:true,&#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    title: &#39;操作&#39;,</span><br><span class="line">    dataIndex: &#39;operation&#39;,</span><br><span class="line">    align:&quot;center&quot;,</span><br><span class="line">    scopedSlots: &#123; customRender: &#39;operation&#39; &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">],</span><br></pre></td></tr></table></figure>
<p>参考文档：<a href="https://ant.design/components/modal-cn/">https://ant.design/components/modal-cn/</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>学习-webpack</title>
    <url>/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/</url>
    <content><![CDATA[<p>一、</p>
<p>1、全局安装webpack</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">cnpm install -g webpack@<span class="number">1</span>.<span class="number">13</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>测试</p>
<p>（1）新增a.js文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;hello webpack&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>（2）新增index.html文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;bundle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>（3）使用webpack命令打包a.js</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">webpack a.js bundle.js</span><br></pre></td></tr></table></figure>
<p>（4）打开index.html文件</p>
<img src="/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/image-20210618175510811.png" class="" title="image-20210618175510811">

<p>2、增加配置文件，简化命令</p>
<p>（1）增加webpack.config.js文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  entry: <span class="string">&#x27;./a.js&#x27;</span>,</span><br><span class="line">  output: &#123;</span><br><span class="line">    filename: <span class="string">&#x27;bundle.js&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>（2）cmd运行webpack就可自动打包了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">webpack</span><br></pre></td></tr></table></figure>
<p>3、使用webpack-dev-server微服务器打开index.html</p>
<p>（1）全局安装webpack-dev-server</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install -g webpack-dev-server@1.15.0</span><br></pre></td></tr></table></figure>
<p>（2）运行webpack-dev-server</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">webpack-dev-server --open</span><br></pre></td></tr></table></figure>
<p>会自动访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:8080&#x2F;webpack-dev-server&#x2F;</span><br></pre></td></tr></table></figure>
<p>这个地址打开默认的index.html页面</p>
<p>（3）我们可以通过修改配置文件修改默认的端口</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">module.exports &#x3D; &#123;    entry: &#39;.&#x2F;a.js&#39;,    output: &#123;        filename: &#39;bundle.js&#39;    &#125;,    devServer: &#123;        port:8088    &#125;&#125;</span><br></pre></td></tr></table></figure>
<p>4、使用webpack-dev-server实现热更新</p>
<p>（1）修改配置文件webpack.config.js</p>
<p>​    导入 webpack 模块</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var webpack &#x3D; require(&#39;webpack&#39;)module.exports &#x3D; &#123;    entry: &#39;.&#x2F;a.js&#39;,    output: &#123;        filename: &#39;bundle.js&#39;    &#125;,   plugins:[        new webpack.HotModuleReplacementPlugin()    ],   devServer: &#123;        port:8088,        inline:true,        hot:true    &#125;&#125;</span><br></pre></td></tr></table></figure>
<p>（2）重要：因为webpack是全局的，这种导入有可能不被识别，需要进行一次链接</p>
<img src="/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/image-20210618180637143.png" class="" title="未链接前">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm link webpack</span><br></pre></td></tr></table></figure>
<img src="/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/image-20210618180655020.png" class="" title="image-20210618180655020">

<p>（3）重新启动webpack-dev-server</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">webpack-dev-server --open</span><br></pre></td></tr></table></figure>
<img src="/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/image-20210618180702320.png" class="" title="image-20210618180702320">

<p>二、不适用webpack-dev-server启动，而使用npm方式启动</p>
<p>1、进行package.json配置文件的初始化</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure>
<img src="/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/image-20210618182925147.png" class="" title="image-20210618182925147">

<p>2、修改package.json，增加脚本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;dev&quot;: &quot;webpack-dev-server --open&quot;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/image-20210618183607241.png" class="" title="image-20210618183607241">

<p>3、运行命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure>
<p>就跟之前的webpack-dev-server –open功能相同</p>
<img src="/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/image-20210618183820232.png" class="" title="image-20210618183820232">

<img src="/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/image-20210618183853759.png" class="" title="image-20210618183853759">

<p>三、使用npm打包多个js文件</p>
<p>1、新建两个js文件</p>
<p>（1）a.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.write(&quot;hello webpack from a.js&lt;br&gt;&quot;);</span><br></pre></td></tr></table></figure>
<p>（2）b.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.write(&quot;hello webpack from b.js&lt;br&gt;&quot;);</span><br></pre></td></tr></table></figure>
<p>2、修改webpack.config.json配置文件</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;    entry: &#123;        bundle1: &#x27;./a.js&#x27;,        bundle2: &#x27;./b.js&#x27;    &#125;,    output: &#123;        filename: &#x27;[name].js&#x27;    &#125;,    devServer: &#123;        port:8088    &#125;&#125;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/18/%E5%AD%A6%E4%B9%A0-webpack/image-20210618185010668.png" class="" title="image-20210618185010668">



]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>导入maven项目pom.xml文件报错</title>
    <url>/2021/02/05/%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AEmaven%E4%B8%8B%E8%BD%BD%E4%B8%8D%E4%B8%8B%E6%9D%A5-%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h2 id="1、问题："><a href="#1、问题：" class="headerlink" title="1、问题："></a>1、问题：</h2><p><img src="https://img-blog.csdnimg.cn/20210205104723191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70#pic_center"></p>
<h2 id="2、原因："><a href="#2、原因：" class="headerlink" title="2、原因："></a>2、原因：</h2><p>maven本地仓库目录一看，发现命名都被系统改掉了，难怪识别不出来<br><img src="https://img-blog.csdnimg.cn/20210205104749664.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70#pic_center"></p>
<h2 id="3、解决："><a href="#3、解决：" class="headerlink" title="3、解决："></a>3、解决：</h2><p>（1）删除后面有多余后缀：.lastUpdated的文件，然后重新Upadate Project（有这个后缀表示这个jar包没有下载下来，或者下载下来的损坏的）</p>
<p><img src="https://img-blog.csdnimg.cn/20210205104805736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70#pic_center"></p>
<p>（2）maven -&gt;update project</p>
<p><img src="https://img-blog.csdnimg.cn/20210205104817547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNDIxNTM5,size_16,color_FFFFFF,t_70#pic_center"></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>maven pom文件报错</tag>
      </tags>
  </entry>
  <entry>
    <title>工作-Eclipse_JRebel破解使用</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Eclipse-JRebel%E7%A0%B4%E8%A7%A3%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>参考网址：<a href="https://blog.csdn.net/cnd2449294059/article/details/82011103">https://blog.csdn.net/cnd2449294059/article/details/82011103</a>  激活</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作_Jacob调用报错</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Jacob%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<p>报错：</p>
<p>调用Jacob报错</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">com.jacob.com.ComFailException: Can&#39;&#39;t co-create object</span><br></pre></td></tr></table></figure>
<p>原因：没有释放进程</p>
<p>参考：com.jacob.com.ComFailException: Can’t co-create object解决办法  <a href="https://blog.csdn.net/woogfoog/article/details/50749971">https://blog.csdn.net/woogfoog/article/details/50749971</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Java_POI操作word工具类</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Java-POI%E6%93%8D%E4%BD%9Cword%E5%B7%A5%E5%85%B7%E7%B1%BB/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 工具类 将Word文件转化为XWPFDocument类对象返回 注意!!!:待转化的word不能是空的</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@author</span> liuwf</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> String fileUrl</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true:XWPFDocument</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> false:null</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> XWPFDocument <span class="title">docFileUrl2XWPFDocument</span><span class="params">(String fileUrl)</span> <span class="keyword">throws</span> IOException, InvalidFormatException </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (fileUrl != <span class="keyword">null</span>) &#123;</span><br><span class="line">			File file = <span class="keyword">new</span> File(fileUrl);</span><br><span class="line">			<span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line"></span><br><span class="line">				FileInputStream in = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">				OPCPackage open = OPCPackage.open(in);</span><br><span class="line">				XWPFDocument xWPFDocument = <span class="keyword">new</span> XWPFDocument(open);</span><br><span class="line">				<span class="keyword">return</span> xWPFDocument;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;ERROR:传入的待转化为XWPFDocument类对象的文件地址为null:&quot;</span> + fileUrl);</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 工具类 在Word文件里插入图片</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@author</span> liuwf</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> String imageUrl</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> String docFileUrl_target</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertImage2docFile</span><span class="params">(String imageUrl, String docFileUrl_target)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		</span><br><span class="line">		BufferedImage bufImage = ImageIO.read(<span class="keyword">new</span> File(imageUrl));</span><br><span class="line">		<span class="keyword">int</span> width=bufImage.getWidth();</span><br><span class="line">		<span class="keyword">int</span> height=bufImage.getHeight();</span><br><span class="line">		<span class="keyword">int</span> widthInput=<span class="number">790</span>;</span><br><span class="line">		Map&lt;String, Object&gt; datas = <span class="keyword">new</span> HashMap&lt;String, Object&gt;() &#123;</span><br><span class="line">			&#123;</span><br><span class="line">				put(<span class="string">&quot;localPicture&quot;</span>, <span class="keyword">new</span> PictureRenderData(widthInput, widthInput * height / width, imageUrl));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		File docFile_target = <span class="keyword">new</span> File(docFileUrl_target);</span><br><span class="line">		XWPFTemplate template = XWPFTemplate.compile(docFile_target).render(datas);</span><br><span class="line">		docFile_target.delete();</span><br><span class="line">		FileOutputStream out = <span class="keyword">new</span> FileOutputStream(docFile_target);</span><br><span class="line">		template.write(out);</span><br><span class="line">		out.flush();</span><br><span class="line">		out.close();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 工具类 在Word文件里插入Word文档中的内容 即合拼两个word文档的内容</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@author</span> liuwf</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> String docFileUrl 主文档</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> String modelDocFileUrl</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> true插入成功</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> false插入失败</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">docFileAddDocFile</span><span class="params">(String docFileUrl, String modelDocFileUrl)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		XWPFDocument xWPFDocument_picturemodel = docFileUrl2XWPFDocument(modelDocFileUrl);</span><br><span class="line">		<span class="keyword">if</span> (xWPFDocument_picturemodel != <span class="keyword">null</span>) &#123;</span><br><span class="line">			XWPFDocument xWPFDocument_shengChengWengDang = docFileUrl2XWPFDocument(docFileUrl);</span><br><span class="line">			<span class="keyword">if</span> (xWPFDocument_shengChengWengDang != <span class="keyword">null</span>) &#123;</span><br><span class="line">				appendBody(xWPFDocument_shengChengWengDang, xWPFDocument_picturemodel);</span><br><span class="line">				File file = <span class="keyword">new</span> File(docFileUrl); <span class="comment">// 最终生成文档</span></span><br><span class="line">				FileOutputStream outputStream_target = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">				xWPFDocument_shengChengWengDang.write(outputStream_target);</span><br><span class="line"></span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">&quot;合并两个office文档失败，插入的文档为转化XWPFDocument失败,为null:&quot;</span> + modelDocFileUrl);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 复制word文档</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@author</span> liuwf</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> File source 空文档等着复制东西进去的文档</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> File dest</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyFileUsingFileChannels</span><span class="params">(File source, File dest)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		FileChannel inputChannel = <span class="keyword">null</span>;</span><br><span class="line">		FileChannel outputChannel = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			inputChannel = <span class="keyword">new</span> FileInputStream(source).getChannel();</span><br><span class="line">			outputChannel = <span class="keyword">new</span> FileOutputStream(dest).getChannel();</span><br><span class="line">			outputChannel.transferFrom(inputChannel, <span class="number">0</span>, inputChannel.size());</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			inputChannel.close();</span><br><span class="line">			outputChannel.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 合并文档</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> append</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">appendBody</span><span class="params">(XWPFDocument src, XWPFDocument append)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		CTBody src1Body = src.getDocument().getBody();</span><br><span class="line">		CTBody src2Body = append.getDocument().getBody();</span><br><span class="line"></span><br><span class="line">		List&lt;XWPFPictureData&gt; allPictures = append.getAllPictures();</span><br><span class="line">		<span class="comment">// 记录图片合并前及合并后的ID</span></span><br><span class="line">		Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap();</span><br><span class="line">		<span class="keyword">for</span> (XWPFPictureData picture : allPictures) &#123;</span><br><span class="line">			String before = append.getRelationId(picture);</span><br><span class="line">			<span class="comment">// 将原文档中的图片加入到目标文档中</span></span><br><span class="line">			String after = src.addPictureData(picture.getData(), Document.PICTURE_TYPE_PNG);</span><br><span class="line">			map.put(before, after);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		appendBody(src1Body, src2Body, map);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> append</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">appendBody</span><span class="params">(CTBody src, CTBody append, Map&lt;String, String&gt; map)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		XmlOptions optionsOuter = <span class="keyword">new</span> XmlOptions();</span><br><span class="line">		optionsOuter.setSaveOuter();</span><br><span class="line">		String appendString = append.xmlText(optionsOuter);</span><br><span class="line">		String srcString = src.xmlText();</span><br><span class="line">		String prefix = srcString.substring(<span class="number">0</span>, srcString.indexOf(<span class="string">&quot;&gt;&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">		String mainPart = srcString.substring(srcString.indexOf(<span class="string">&quot;&gt;&quot;</span>) + <span class="number">1</span>, srcString.lastIndexOf(<span class="string">&quot;&lt;&quot;</span>));</span><br><span class="line">		String sufix = srcString.substring(srcString.lastIndexOf(<span class="string">&quot;&lt;&quot;</span>));</span><br><span class="line">		String addPart = appendString.substring(appendString.indexOf(<span class="string">&quot;&gt;&quot;</span>) + <span class="number">1</span>, appendString.lastIndexOf(<span class="string">&quot;&lt;&quot;</span>));</span><br><span class="line">		CTBody makeBody = CTBody.Factory.parse(prefix + mainPart + addPart + sufix);</span><br><span class="line">		src.set(makeBody);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 删除file文件及目录</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">		File[] files = file.listFiles();<span class="comment">// 将file子目录及子文件放进文件数组</span></span><br><span class="line">		<span class="keyword">if</span> (files != <span class="keyword">null</span>) &#123;<span class="comment">// 如果包含文件进行删除操作</span></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; files.length; i++) &#123;</span><br><span class="line">				<span class="keyword">if</span> (files[i].isFile()) &#123;<span class="comment">// 删除子文件</span></span><br><span class="line">					files[i].delete();</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (files[i].isDirectory()) &#123;<span class="comment">// 通过递归方法删除子目录的文件</span></span><br><span class="line">					remove(files[i]);</span><br><span class="line">				&#125;</span><br><span class="line">				files[i].delete();<span class="comment">// 删除子目录</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.deepoove<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-tl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-excelant<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Java_插入图片到word中</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Java-%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%E5%88%B0word%E4%B8%AD/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 工具类 在Word文件里插入图片 待插入的word不能为空</span><br><span class="line"> * @author liuwf</span><br><span class="line"> * @param String imageUrl</span><br><span class="line"> * @param String docFileUrl_target</span><br><span class="line"> * @return</span><br><span class="line"> *&#x2F;</span><br><span class="line">public static void insertImage2docFile(String imageUrl, String docFileUrl_target) throws IOException &#123;</span><br><span class="line">	</span><br><span class="line">	BufferedImage bufImage &#x3D; ImageIO.read(new File(imageUrl));</span><br><span class="line">	int width&#x3D;bufImage.getWidth();</span><br><span class="line">	int height&#x3D;bufImage.getHeight();</span><br><span class="line">	int widthInput&#x3D;790;</span><br><span class="line">	Map&lt;String, Object&gt; datas &#x3D; new HashMap&lt;String, Object&gt;() &#123;</span><br><span class="line">		&#123;</span><br><span class="line">			put(&quot;localPicture&quot;, new PictureRenderData(widthInput, widthInput * height &#x2F; width, imageUrl));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">	File docFile_target &#x3D; new File(docFileUrl_target);</span><br><span class="line">	XWPFTemplate template &#x3D; XWPFTemplate.compile(docFile_target).render(datas);</span><br><span class="line">	docFile_target.delete();</span><br><span class="line">	FileOutputStream out &#x3D; new FileOutputStream(docFile_target);</span><br><span class="line">	template.write(out);</span><br><span class="line">	out.flush();</span><br><span class="line">	out.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>pom.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 添加图片进word --&gt;</span><br><span class="line">		&lt;dependency&gt;</span><br><span class="line">		    &lt;groupId&gt;com.deepoove&lt;&#x2F;groupId&gt;</span><br><span class="line">		    &lt;artifactId&gt;poi-tl&lt;&#x2F;artifactId&gt;</span><br><span class="line">		    &lt;version&gt;1.0.0&lt;&#x2F;version&gt;</span><br><span class="line">		&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>


<p>参考：<a href="https://www.cnblogs.com/gscq073240/articles/11477812.html">https://www.cnblogs.com/gscq073240/articles/11477812.html</a></p>
<p>​            poi-tl官方文档：<a href="http://deepoove.com/poi-tl/">http://deepoove.com/poi-tl/</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Java实现word格式docx与doc的转化</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Java%E5%AE%9E%E7%8E%B0word%E6%A0%BC%E5%BC%8Fdocx%E4%B8%8Edoc%E7%9A%84%E8%BD%AC%E5%8C%96/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*** doc 格式 */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DOC_FMT = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*** docx 格式 */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DOCX_FMT = <span class="number">12</span>;</span><br></pre></td></tr></table></figure>


<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 根据格式类型转换 word 文件</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> srcPath  源文件</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> descPath 目标文件</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> fmt      所转格式 </span></span><br><span class="line"><span class="comment">	 * doc格式:DOC_FMT    </span></span><br><span class="line"><span class="comment">	 * docx格式:DOCX_FMT</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title">convertDocFmt</span><span class="params">(String srcPath, String descPath, <span class="keyword">int</span> fmt)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 实例化ComThread线程与ActiveXComponent</span></span><br><span class="line">		ComThread.InitSTA();</span><br><span class="line">		ActiveXComponent app = <span class="keyword">new</span> ActiveXComponent(<span class="string">&quot;Word.Application&quot;</span>);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 文档隐藏时进行应用操作</span></span><br><span class="line">			app.setProperty(<span class="string">&quot;Visible&quot;</span>, <span class="keyword">new</span> Variant(<span class="keyword">false</span>));</span><br><span class="line">			<span class="comment">// 实例化模板Document对象</span></span><br><span class="line">			Dispatch document = app.getProperty(<span class="string">&quot;Documents&quot;</span>).toDispatch();</span><br><span class="line">			<span class="comment">// 打开Document进行另存为操作</span></span><br><span class="line">			Dispatch doc = Dispatch.invoke(document, <span class="string">&quot;Open&quot;</span>, Dispatch.Method,</span><br><span class="line">					<span class="keyword">new</span> Object[] &#123; srcPath, <span class="keyword">new</span> Variant(<span class="keyword">true</span>), <span class="keyword">new</span> Variant(<span class="keyword">true</span>) &#125;, <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>]).toDispatch();</span><br><span class="line">			Dispatch.invoke(doc, <span class="string">&quot;SaveAs&quot;</span>, Dispatch.Method, <span class="keyword">new</span> Object[] &#123; descPath, <span class="keyword">new</span> Variant(fmt) &#125;, <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>]);</span><br><span class="line">			Dispatch.call(doc, <span class="string">&quot;Close&quot;</span>, <span class="keyword">new</span> Variant(<span class="keyword">false</span>));</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> File(descPath);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="keyword">throw</span> e;</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="comment">// 释放线程与ActiveXComponent</span></span><br><span class="line">			app.invoke(<span class="string">&quot;Quit&quot;</span>, <span class="keyword">new</span> Variant[] &#123;&#125;);</span><br><span class="line">			ComThread.Release();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//将原本是2007版本的word转换为2003版本的word，解决word转pdf导致目录为空的问题</span></span><br><span class="line">PoiUtil.convertDocFmt(savePath, doc_path, PoiUtil.DOC_FMT);</span><br><span class="line">DocConverterUtil d = <span class="keyword">new</span> DocConverterUtil(doc_path);</span><br></pre></td></tr></table></figure>


<p>参考：<a href="https://www.cnblogs.com/chbyiming-bky/articles/8611703.html">java实现word文档doc和docx两种格式互转</a>  <a href="https://www.cnblogs.com/chbyiming-bky/articles/8611703.html">https://www.cnblogs.com/chbyiming-bky/articles/8611703.html</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Java实现图片白边剪切</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Java%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E7%99%BD%E8%BE%B9%E5%89%AA%E5%88%87/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">	 * 裁剪，图片保存 </span><br><span class="line">	 * @param source 待裁剪图片路径</span><br><span class="line">	 * @param target 裁剪后图片生成路径</span><br><span class="line">	 * @throws IOException</span><br><span class="line">	 *&#x2F;</span><br><span class="line">	public static void pictureCut(String source,String target) throws IOException &#123;</span><br><span class="line">		FileInputStream is &#x3D; null;</span><br><span class="line">		ImageInputStream iis &#x3D; null;</span><br><span class="line">		try &#123;</span><br><span class="line">			BufferedImage bufImage &#x3D; ImageIO.read(new File(source));</span><br><span class="line">			int width&#x3D;bufImage.getWidth();</span><br><span class="line">			int height&#x3D;bufImage.getHeight();</span><br><span class="line">			&#x2F;&#x2F; 读取图片文件</span><br><span class="line">			is &#x3D; new FileInputStream(source);</span><br><span class="line">			&#x2F;*</span><br><span class="line">			 * 返回包含所有当前已注册 ImageReader 的 Iterator，这些 ImageReader 声称能够解码指定格式。 参数：formatName -</span><br><span class="line">			 * 包含非正式格式名称 .（例如 &quot;jpeg&quot; 或 &quot;tiff&quot;）等 。</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			Iterator&lt;ImageReader&gt; it &#x3D; ImageIO.getImageReadersByFormatName(&quot;png&quot;);</span><br><span class="line">			ImageReader reader &#x3D; it.next();</span><br><span class="line">			&#x2F;&#x2F; 获取图片流</span><br><span class="line">			iis &#x3D; ImageIO.createImageInputStream(is);</span><br><span class="line">			&#x2F;*</span><br><span class="line">			 * &lt;p&gt;iis:读取源.true:只向前搜索 &lt;&#x2F;p&gt;.将它标记为 ‘只向前搜索’。 此设置意味着包含在输入源中的图像将只按顺序读取，可能允许 reader</span><br><span class="line">			 * 避免缓存包含与以前已经读取的图像关联的数据的那些输入部分。</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			reader.setInput(iis, true);</span><br><span class="line">			&#x2F;*</span><br><span class="line">			 * &lt;p&gt;描述如何对流进行解码的类&lt;p&gt;.用于指定如何在输入时从 Java Image I&#x2F;O</span><br><span class="line">			 * 框架的上下文中的流转换一幅图像或一组图像。用于特定图像格式的插件 将从其 ImageReader 实现的 getDefaultReadParam</span><br><span class="line">			 * 方法中返回 ImageReadParam 的实例。</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			ImageReadParam param &#x3D; reader.getDefaultReadParam();</span><br><span class="line">			&#x2F;*</span><br><span class="line">			 * 图片裁剪区域。Rectangle 指定了坐标空间中的一个区域，通过 Rectangle 对象 的左上顶点的坐标（x，y）、宽度和高度可以定义这个区域。</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			Rectangle rect &#x3D; new Rectangle(width*10&#x2F;100, height*5&#x2F;100, width*80&#x2F;100, height*90&#x2F;100);</span><br><span class="line">			&#x2F;&#x2F; 提供一个 BufferedImage，将其用作解码像素数据的目标。</span><br><span class="line">			param.setSourceRegion(rect);</span><br><span class="line">			&#x2F;*</span><br><span class="line">			 * 使用所提供的 ImageReadParam 读取通过索引 imageIndex 指定的对象，并将 它作为一个完整的 BufferedImage 返回。</span><br><span class="line">			 *&#x2F;</span><br><span class="line">			BufferedImage bi &#x3D; reader.read(0, param);</span><br><span class="line">			&#x2F;&#x2F; 保存新图片</span><br><span class="line">			ImageIO.write(bi, &quot;png&quot;, new File(target));</span><br><span class="line">		&#125; finally &#123;</span><br><span class="line">			if (is !&#x3D; null)</span><br><span class="line">				is.close();</span><br><span class="line">			if (iis !&#x3D; null)</span><br><span class="line">				iis.close();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://blog.csdn.net/xietansheng/article/details/78453570">https://blog.csdn.net/xietansheng/article/details/78453570</a></p>
<p>​            <a href="https://blog.csdn.net/u014704496/article/details/25040947">https://blog.csdn.net/u014704496/article/details/25040947</a></p>
<p>java读取图片对应坐标的颜色值：<a href="https://blog.csdn.net/light_666/article/details/83341575">https://blog.csdn.net/light_666/article/details/83341575</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Maven_slf4j使用</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven-slf4j%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- log --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;scope&gt;test&lt;/scope&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://www.cnblogs.com/bwcode/p/7159624.html">https://www.cnblogs.com/bwcode/p/7159624.html</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-SVN项目被锁住</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-SVN%E9%A1%B9%E7%9B%AE%E8%A2%AB%E9%94%81%E4%BD%8F/</url>
    <content><![CDATA[<h3 id="1、遇到问题："><a href="#1、遇到问题：" class="headerlink" title="1、遇到问题："></a>1、遇到问题：</h3><p>在eclipse上开发项目的时候，svn突然更新不了，报错</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">svn: E155004: There are unfinished work items in &#39;D:\Tools\Eclipse\Eclipse_2020\Data\Feezet_Project\XAPF_XMPF\xmpf&#39;; run &#39;svn cleanup&#39; first.</span><br></pre></td></tr></table></figure>
<h3 id="2、解决问题："><a href="#2、解决问题：" class="headerlink" title="2、解决问题："></a>2、解决问题：</h3><p>百度了一下，发现是被锁住了，于是在eclipse里的Team中进行svn cleanup结果还是报同样的错误，于是到目录下进行cmd svn cleanup，发现电脑没安装svn，于是上官网安装</p>
<p><a href="https://tortoisesvn.net/downloads.zh.html">https://tortoisesvn.net/downloads.zh.html</a><br><a href="https://osdn.net/projects/tortoisesvn/storage/1.14.1/Application/TortoiseSVN-1.14.1.29085-x64-svn-1.14.1.msi/">https://osdn.net/projects/tortoisesvn/storage/1.14.1/Application/TortoiseSVN-1.14.1.29085-x64-svn-1.14.1.msi/</a></p>
<p>安装后在项目目录下右键打开svn的cleanup，选择Break write locks，clean完成提示success</p>
<p>再更新项目就可以了</p>
<p>参考网址：  <a href="https://blog.csdn.net/gjp014/article/details/84857016">https://blog.csdn.net/gjp014/article/details/84857016</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Spire依赖</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Spire%E4%BE%9D%E8%B5%96/</url>
    <content><![CDATA[<p><a href="http://repo.e-iceblue.cn/#browse/browse:maven-public">http://repo.e-iceblue.cn/#browse/browse:maven-public</a></p>
<p>参考：<a href="https://blog.csdn.net/Eiceblue/article/details/88239741">https://blog.csdn.net/Eiceblue/article/details/88239741</a></p>
<p>​    <a href="http://repo.e-iceblue.cn/#browse/search/maven">http://repo.e-iceblue.cn/#browse/search/maven</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-SpringBoot启动失败_循环依赖</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-SpringBoot%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5-%E5%BE%AA%E7%8E%AF%E4%BE%9D%E8%B5%96/</url>
    <content><![CDATA[<p>报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error creating bean with name &#39;khtbAttrServiceImpl&#39;: Bean with name &#39;khtbAttrServiceImpl&#39; has been injected into other beans [khtbServiceImpl] in its raw version as part of a circular reference, but has eventually been wrapped. This means that said other beans do not use the final version of the bean. This is often the result of over-eager type matching - consider using &#39;getBeanNamesOfType&#39; with the &#39;allowEagerInit&#39; flag turned off, for example.</span><br></pre></td></tr></table></figure>


<p>参考：<a href="https://blog.csdn.net/heboy19/article/details/79373832">https://blog.csdn.net/heboy19/article/details/79373832</a> 解决spring循环依赖的问题：has been injected into other beans</p>
<p>解决：将方法移动到同一个ServiceImpl中即可</p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-pom文件目录顺序</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-pom%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E9%A1%BA%E5%BA%8F/</url>
    <content><![CDATA[<p>报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pom-xml添加＜plugins＞和＜plugin＞报错的解决办法Invalid-content-was-found-starting-with-element</span><br></pre></td></tr></table></figure>
<p>解决：</p>
<p>正确的目录顺序应该是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">&lt;defaultGoal&gt;clean compile&lt;&#x2F;defaultGoal&gt;</span><br><span class="line"></span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">    &lt;plugin&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;plugin&gt;</span><br><span class="line">&lt;&#x2F;plugins&gt;</span><br><span class="line">&lt;&#x2F;build&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>






<p>参考：pom.xml添加＜plugins＞和＜plugin＞报错的解决办法Invalid content was found starting with element</p>
<p>​            <a href="https://blog.csdn.net/moso_wang/article/details/109560460">https://blog.csdn.net/moso_wang/article/details/109560460</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-金蝶天燕替代Tomcat启动项目</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<h4 id="1、Eclipse导出项目war包"><a href="#1、Eclipse导出项目war包" class="headerlink" title="1、Eclipse导出项目war包"></a>1、Eclipse导出项目war包</h4><img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143100745.png" class="">

<h4 id="2、将项目war包放置到示例的mydomain域中的Application文件夹中"><a href="#2、将项目war包放置到示例的mydomain域中的Application文件夹中" class="headerlink" title="2、将项目war包放置到示例的mydomain域中的Application文件夹中"></a>2、将项目war包放置到示例的mydomain域中的Application文件夹中</h4><img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143203675.png" class="">

<h4 id="3、进入mydomain域中的bin目录下打开cmd"><a href="#3、进入mydomain域中的bin目录下打开cmd" class="headerlink" title="3、进入mydomain域中的bin目录下打开cmd"></a>3、进入mydomain域中的bin目录下打开cmd</h4><img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143258217.png" class="">

<h4 id="4、输入命令startapusic启动金蝶天燕服务器"><a href="#4、输入命令startapusic启动金蝶天燕服务器" class="headerlink" title="4、输入命令startapusic启动金蝶天燕服务器"></a>4、输入命令startapusic启动金蝶天燕服务器</h4><img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143342181.png" class="">

<h4 id="5、在日志开头查看JDK等环境信息"><a href="#5、在日志开头查看JDK等环境信息" class="headerlink" title="5、在日志开头查看JDK等环境信息"></a>5、在日志开头查看JDK等环境信息</h4><img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143447039.png" class="">

<h4 id="6、服务器启动成功"><a href="#6、服务器启动成功" class="headerlink" title="6、服务器启动成功"></a>6、服务器启动成功</h4><img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143513417.png" class="">

<h4 id="7、浏览器输入网址访问金蝶天燕管理界面"><a href="#7、浏览器输入网址访问金蝶天燕管理界面" class="headerlink" title="7、浏览器输入网址访问金蝶天燕管理界面"></a>7、浏览器输入网址访问金蝶天燕管理界面</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;localhost:6888&#x2F;admin</span><br></pre></td></tr></table></figure>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143613461.png" class="">

<h4 id="8、密码为初次启动金蝶天燕服务器时设置的密码"><a href="#8、密码为初次启动金蝶天燕服务器时设置的密码" class="headerlink" title="8、密码为初次启动金蝶天燕服务器时设置的密码"></a>8、密码为初次启动金蝶天燕服务器时设置的密码</h4><img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143710395.png" class="">

<h4 id="9、点击应用管理，查看应用是否启动成功"><a href="#9、点击应用管理，查看应用是否启动成功" class="headerlink" title="9、点击应用管理，查看应用是否启动成功"></a>9、点击应用管理，查看应用是否启动成功</h4><img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143756713.png" class="">

<h4 id="10、点击查看应用模块，可以访问应用"><a href="#10、点击查看应用模块，可以访问应用" class="headerlink" title="10、点击查看应用模块，可以访问应用"></a>10、点击查看应用模块，可以访问应用</h4><img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%87%91%E8%9D%B6%E5%A4%A9%E7%87%95%E6%9B%BF%E4%BB%A3Tomcat%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE/image-20210311143925418.png" class="">







<p>附上厂家提供的安装包:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1X8j_Of9gN3-lxLpndZOk-g 提取码:hhzy</span><br></pre></td></tr></table></figure>
<p>还有找厂家要的临时许可证文件</p>
<p>license.xml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;license</span><br><span class="line">    product&#x3D;&quot;Apusic Application Server&quot;</span><br><span class="line">    edition&#x3D;&quot;Enterprise Edition&quot;</span><br><span class="line">    version&#x3D;&quot;9.0&quot;</span><br><span class="line">    licensee&#x3D;&quot;厦门浪潮云临时license申请&quot;</span><br><span class="line">    datefrom&#x3D;&quot;2021-02-23&quot;</span><br><span class="line">    expiration&#x3D;&quot;2021-05-22&quot;</span><br><span class="line">    license_ver&#x3D;&quot;4&quot;</span><br><span class="line">    signature&#x3D;&quot;hIWeQKgtd1GHFx9Q5xvnXgBY30ZOw0yqrXtmy+zFk5GuWbOuaF65IgzLkVZpfF2PiKYW5CKGOceDNNHN5WdTEw1HxhFFhj4SgOmpVZZ0apm9q5KJ1KIKox6prCc0cQBin0N80lCauRzc7YbTD4TjcQvmCcYPDX0trbY8Gh2G0okt+O1oXmcTeTxRoexLvKsY7hJQ&#x2F;S9aeSYGmit8J0S9LBG4dgOEsPecv4mSU0y05rrF1NrumaFeH8YMR6U457SjaZg2drpblhIhbwmNuuGaODBNYxPw57yE4pgk2&#x2F;CtR6otXVG6X5Ag16FVldx6YmUeLc+WMn1cSQLnrvxmysb9rUCfgIZdzA8VJH9tKJYctDxoStyI8G&#x2F;4kAa8WNJ0O6WhnEgkGQfOqbytQGgE5DXQv66EftlW855wkUFWkdgb3BtF2DCM9Z0qCKWN0dzEMFBh+Fb3LD&#x2F;9pxt6TMLlbbg0k2zUQTyU28w5BS3CWqJfHOHfNZ7wD2ViHmZSmtJYX&#x2F;pO&quot;</span><br><span class="line">&#x2F;&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-项目修改JDK版本报错</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-%E9%A1%B9%E7%9B%AE%E4%BF%AE%E6%94%B9JDK%E7%89%88%E6%9C%AC%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<p>一、</p>
<p>报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Dynamic Web Module 3.1 requires Java 1.7 or newer.qywxline 1Maven Java EE Configuration Problem</span><br></pre></td></tr></table></figure>
<p>原因：</p>
<p>​        使用maven构建web项目时，经常会遇见这个问题，问题原因报错讲述的很清晰明了，就是web模块需要使用java1.7及以后的版本，目前的版本不符合。因而只需要修改java版本到1.7及以上即可。</p>
<p>解决方法：<br>       1. 在eclipse 构建 web中关于java版本有三处需要修改统一。<br>        （1）在 Java Build Path的libraries中修改<br>        （2）在Java Compiler 中修改<br>        （3）在Project Facet中修改<br>       2. 大部分按上上述修改就应该可以了，但总是有意外，还是报错。因为使用了 maven构建项目，因而最好在pom.xml文件中的build标签中加入以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">  &lt;plugins&gt;</span><br><span class="line">       &lt;plugin&gt;</span><br><span class="line">             &lt;groupId&gt;org.apache.maven.plugins&lt;&#x2F;groupId&gt;</span><br><span class="line">             &lt;artifactId&gt;maven-compiler-plugin&lt;&#x2F;artifactId&gt;</span><br><span class="line">             &lt;version&gt;3.1&lt;&#x2F;version&gt;</span><br><span class="line">             &lt;configuration&gt;</span><br><span class="line">                 &lt;source&gt;1.7&lt;&#x2F;source&gt;     &#x2F;&#x2F;如果是1.8，修改为1.8</span><br><span class="line">                 &lt;target&gt;1.7&lt;&#x2F;target&gt;      &#x2F;&#x2F;如果是1.8，修改为1.8</span><br><span class="line">             &lt;&#x2F;configuration&gt;</span><br><span class="line">       &lt;&#x2F;plugin&gt;</span><br><span class="line">  &lt;&#x2F;plugins&gt;</span><br><span class="line">&lt;&#x2F;build&gt;</span><br></pre></td></tr></table></figure>
<p>二、</p>
<p>1、Maven报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">One or more constraints have not been satisfied</span><br></pre></td></tr></table></figure>
<p>2、解决办法：pom.xml的project节点中加上</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!-- liuwf 加在project节点中--&gt;</span><br><span class="line">&lt;profiles&gt;</span><br><span class="line">	&lt;profile&gt;</span><br><span class="line">		&lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class="line">		&lt;!-- 另外一种激活方式 --&gt;</span><br><span class="line">		&lt;activation&gt;</span><br><span class="line">			&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">			&lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class="line">		&lt;/activation&gt;</span><br><span class="line">		&lt;properties&gt;</span><br><span class="line">			&lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">			&lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">			&lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class="line">		&lt;/properties&gt;</span><br><span class="line">	&lt;/profile&gt;</span><br><span class="line">&lt;/profiles&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!-- liuwf 加在project节点中的build节点中--&gt;</span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">	&lt;plugin&gt;</span><br><span class="line">		&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">		&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">		&lt;version&gt;3.8.1&lt;/version&gt;</span><br><span class="line">		&lt;configuration&gt;</span><br><span class="line">			&lt;source&gt;1.8&lt;/source&gt;</span><br><span class="line">			&lt;target&gt;1.8&lt;/target&gt;</span><br><span class="line">			&lt;encoding&gt;UTF8&lt;/encoding&gt;</span><br><span class="line">		&lt;/configuration&gt;</span><br><span class="line">	&lt;/plugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br></pre></td></tr></table></figure>




<p>參考：<a href="https://blog.csdn.net/qq_31614947/article/details/70231289">https://blog.csdn.net/qq_31614947/article/details/70231289</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>新版notepad++无法修改为简体中文</title>
    <url>/2021/03/23/%E6%96%B0%E7%89%88notepad-%E6%97%A0%E6%B3%95%E4%BF%AE%E6%94%B9%E4%B8%BA%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87/</url>
    <content><![CDATA[<img src="/2021/03/23/%E6%96%B0%E7%89%88notepad-%E6%97%A0%E6%B3%95%E4%BF%AE%E6%94%B9%E4%B8%BA%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87/image-20210323144117358.png" class="">

<img src="/2021/03/23/%E6%96%B0%E7%89%88notepad-%E6%97%A0%E6%B3%95%E4%BF%AE%E6%94%B9%E4%B8%BA%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87/image-20210323144058100.png" class="">

<img src="/2021/03/23/%E6%96%B0%E7%89%88notepad-%E6%97%A0%E6%B3%95%E4%BF%AE%E6%94%B9%E4%B8%BA%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87/image-20210323144206810.png" class="">]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>新版notepad++无法修改为简体中文</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora编写博客文章，图片无法显示</title>
    <url>/2021/02/20/%E8%A7%A3%E5%86%B3Typora%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%87%BA%E6%9D%A5/</url>
    <content><![CDATA[<h2 id="1、Typora偏好设置"><a href="#1、Typora偏好设置" class="headerlink" title="1、Typora偏好设置"></a>1、Typora偏好设置</h2><img src="/2021/02/20/%E8%A7%A3%E5%86%B3Typora%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%87%BA%E6%9D%A5/image-20210220182708911.png" class="">

<h2 id="2、添加插件解决问题"><a href="#2、添加插件解决问题" class="headerlink" title="2、添加插件解决问题"></a>2、添加插件解决问题</h2><h3 id="（1）修改-config-yml文件"><a href="#（1）修改-config-yml文件" class="headerlink" title="（1）修改_config.yml文件"></a>（1）修改_config.yml文件</h3><img src="/2021/02/20/%E8%A7%A3%E5%86%B3Typora%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%87%BA%E6%9D%A5/image-20210220182841995.png" class="">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>
<img src="/2021/02/20/%E8%A7%A3%E5%86%B3Typora%E7%BC%96%E5%86%99%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%87%BA%E6%9D%A5/image-20210220182818282.png" class="">

<h3 id="（2）npm安装插件"><a href="#（2）npm安装插件" class="headerlink" title="（2）npm安装插件"></a>（2）npm安装插件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-image-link --save</span><br></pre></td></tr></table></figure>




<p>参考：<a href="https://cloud.tencent.com/developer/article/1600295">https://cloud.tencent.com/developer/article/1600295</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Typora无法显示图片</tag>
      </tags>
  </entry>
  <entry>
    <title>解决jacob使用遇到问题_Dispatch not hooked to windows memory</title>
    <url>/2021/06/16/%E8%A7%A3%E5%86%B3jacob%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98-Dispatch-not-hooked-to-windows-memory/</url>
    <content><![CDATA[<p>1</p>
<p>今天使用jacob读取word文档中的表格内容报异常：Dispatch not hooked to windows memory</p>
<p>仔细单步调试发现在for循环中第二次循环时之前的Dispatch变为空，需要重新赋值</p>
<p>在重新赋值之前先判断是否为空</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//判断Dispatch是否为空的函数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isNull</span><span class="params">(Dispatch d)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Dispatch.call(d, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IllegalStateException ise) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ComFailException cfe) &#123;</span><br><span class="line">        <span class="comment">// that&#x27;s ok, we didn&#x27;t expect this call to succeed</span></span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//判断这些Dispatch是否为空，为空则重新赋值</span></span><br><span class="line"><span class="keyword">if</span>(isNull(table)) &#123;</span><br><span class="line">    <span class="keyword">if</span>(isNull(tables)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(isNull(doc)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(isNull(documents)) &#123;</span><br><span class="line">                <span class="keyword">if</span>(isNull(app)) &#123;</span><br><span class="line">                    app = <span class="keyword">new</span> ActiveXComponent(<span class="string">&quot;Word.Application&quot;</span>);</span><br><span class="line">                    app.setProperty(<span class="string">&quot;Visible&quot;</span>, <span class="keyword">new</span> Variant(<span class="keyword">false</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                documents = app.getProperty(<span class="string">&quot;Documents&quot;</span>).toDispatch();</span><br><span class="line">            &#125;</span><br><span class="line">            doc = Dispatch</span><br><span class="line">            .invoke(documents, <span class="string">&quot;Open&quot;</span>, Dispatch.Method,</span><br><span class="line">            <span class="keyword">new</span> Object[] &#123; docfile, <span class="keyword">new</span> Variant(<span class="keyword">false</span>), <span class="keyword">new</span> Variant(<span class="keyword">true</span>) &#125;, <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>])</span><br><span class="line">            .toDispatch();</span><br><span class="line">            &#125;</span><br><span class="line">        tables = Dispatch.get(doc, <span class="string">&quot;Tables&quot;</span>).toDispatch();</span><br><span class="line">        &#125;</span><br><span class="line">    table = Dispatch.call(tables, <span class="string">&quot;Item&quot;</span>, <span class="keyword">new</span> Variant(<span class="number">1</span>)).toDispatch();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在释放进程时也需要判断</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 实例化ComThread线程与ActiveXComponent</span></span><br><span class="line">ComThread.InitSTA();</span><br><span class="line">ActiveXComponent app = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;&#125;</span><br><span class="line"><span class="keyword">catch</span>&#123;&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">// 释放线程与ActiveXComponent</span></span><br><span class="line">    <span class="comment">// 判断app是否为空 不为空则释放</span></span><br><span class="line">    <span class="keyword">if</span>(!isNull(app)) &#123;</span><br><span class="line">    	app.invoke(<span class="string">&quot;Quit&quot;</span>, <span class="keyword">new</span> Variant[] &#123;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ComThread.Release();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>参考:<a href="https://blog.csdn.net/weixin_40389421/article/details/90486060">https://blog.csdn.net/weixin_40389421/article/details/90486060</a></p>
<p>​        <a href="https://stackoverflow.com/questions/12871152/dispatch-not-hooked-to-windows-memory">https://stackoverflow.com/questions/12871152/dispatch-not-hooked-to-windows-memory</a></p>
]]></content>
  </entry>
  <entry>
    <title>VUE-学习</title>
    <url>/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>一、</p>
<p>1、VUE实现在表格中显示date数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    </span><br><span class="line">&lt;style&gt;</span><br><span class="line">table tr td&#123;</span><br><span class="line">    border:1px solid gray;</span><br><span class="line">    padding:10px;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">    border-collapse:collapse;</span><br><span class="line">    width:800px;</span><br><span class="line">    table-layout:fixed;</span><br><span class="line">&#125;</span><br><span class="line">tr.firstLine&#123;</span><br><span class="line">    background-color: lightGray;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">  </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;table align&#x3D;&quot;center&quot; &gt;</span><br><span class="line">        &lt;tr class&#x3D;&quot;firstLine&quot;&gt;</span><br><span class="line">            &lt;td&gt;人民币&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;美元&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;       </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">        	&lt;td align&#x3D;&quot;center&quot; colspan&#x3D;&quot;2&quot;&gt;</span><br><span class="line">        	汇率： &lt;input type&#x3D;&quot;number&quot; v-model.number&#x3D;&quot;exchange&quot; &#x2F;&gt;</span><br><span class="line">        	&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">        </span><br><span class="line">        	&lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">        		￥: &lt;input type&#x3D;&quot;number&quot; v-model.number &#x3D; &quot;rmb&quot;  &#x2F;&gt;</span><br><span class="line">        	&lt;&#x2F;td&gt;</span><br><span class="line">        	&lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">        		$: &#123;&#123; rmb&#x2F;exchange &#125;&#125;</span><br><span class="line">        	&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;&#x2F;table&gt;</span><br><span class="line">  </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">     </span><br><span class="line">&lt;script&gt;</span><br><span class="line">   </span><br><span class="line">new Vue(&#123;</span><br><span class="line">      el: &#39;#div1&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">    	  exchange:6.4,</span><br><span class="line">          rmb:0</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">     </span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617164253747.png" class="" title="image-20210617164253747">

<p>2、VUE中computed使用</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">直接在&#123;&#123;&#125;&#125;中调用computed就可，不用加括号，就像个普通的变量</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">     </span><br><span class="line">&lt;style&gt;</span><br><span class="line">table tr td&#123;</span><br><span class="line">    border:1px solid gray;</span><br><span class="line">    padding:10px;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">    border-collapse:collapse;</span><br><span class="line">    width:800px;</span><br><span class="line">    table-layout:fixed;</span><br><span class="line">&#125;</span><br><span class="line">tr.firstLine&#123;</span><br><span class="line">    background-color: lightGray;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">   </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;table align&#x3D;&quot;center&quot; &gt;</span><br><span class="line">        &lt;tr class&#x3D;&quot;firstLine&quot;&gt;</span><br><span class="line">            &lt;td&gt;人民币&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;美元&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;      </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot; colspan&#x3D;&quot;2&quot;&gt;</span><br><span class="line">            汇率： &lt;input type&#x3D;&quot;number&quot; v-model.number&#x3D;&quot;exchange&quot; &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">         </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">         </span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                ￥: &lt;input type&#x3D;&quot;number&quot; v-model.number &#x3D; &quot;rmb&quot;  &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                $: &#123;&#123; dollar &#125;&#125;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;&#x2F;table&gt;</span><br><span class="line">   </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">      </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">new Vue(&#123;</span><br><span class="line">      el: &#39;#div1&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">          exchange:6.4,</span><br><span class="line">          rmb:0</span><br><span class="line">      &#125;,</span><br><span class="line">      computed:&#123;</span><br><span class="line">          dollar:function() &#123;</span><br><span class="line">              return this.rmb &#x2F; this.exchange;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      </span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>3、VUE中methods的使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">也是在&#123;&#123;&#125;&#125;中调用，但是调用的是方法，要加括号</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">     </span><br><span class="line">&lt;style&gt;</span><br><span class="line">table tr td&#123;</span><br><span class="line">    border:1px solid gray;</span><br><span class="line">    padding:10px;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">    border-collapse:collapse;</span><br><span class="line">    width:800px;</span><br><span class="line">    table-layout:fixed;</span><br><span class="line">&#125;</span><br><span class="line">tr.firstLine&#123;</span><br><span class="line">    background-color: lightGray;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">   </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;table align&#x3D;&quot;center&quot; &gt;</span><br><span class="line">        &lt;tr class&#x3D;&quot;firstLine&quot;&gt;</span><br><span class="line">            &lt;td&gt;人民币&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;美元&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;      </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot; colspan&#x3D;&quot;2&quot;&gt;</span><br><span class="line">            汇率： &lt;input type&#x3D;&quot;number&quot; v-model.number&#x3D;&quot;exchange&quot; &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">         </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">         </span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                ￥: &lt;input type&#x3D;&quot;number&quot; v-model.number &#x3D; &quot;rmb&quot;  &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                $: &#123;&#123; getDollar() &#125;&#125;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;&#x2F;table&gt;</span><br><span class="line">   </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">      </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">new Vue(&#123;</span><br><span class="line">      el: &#39;#div1&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">          exchange:6.4,</span><br><span class="line">          rmb:0</span><br><span class="line">      &#125;,</span><br><span class="line">      methods:&#123;</span><br><span class="line">          getDollar:function() &#123;</span><br><span class="line">              return this.rmb &#x2F; this.exchange;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      </span><br><span class="line">&lt;&#x2F;script&gt;v</span><br></pre></td></tr></table></figure>
<p>computed和methods的区别：</p>
<p>​    computed 是有缓存的，只要rmb没有变化，dollar 会直接返回以前计算出来的值，而不会再次计算。 这样如果是复杂计算，就会节约    不少时间。<br>​    而methods每次都会调用</p>
<p>二、</p>
<p>1、通过watch实现数据双向修改，这边以人民币和美元的汇率作为例子</p>
<p>​    watch中也是直接调用数据，如果数据数值改变就会触发watch中的方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">     </span><br><span class="line">&lt;style&gt;</span><br><span class="line">table tr td&#123;</span><br><span class="line">    border:1px solid gray;</span><br><span class="line">    padding:10px;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">    border-collapse:collapse;</span><br><span class="line">    width:800px;</span><br><span class="line">    table-layout:fixed;</span><br><span class="line">&#125;</span><br><span class="line">tr.firstLine&#123;</span><br><span class="line">    background-color: lightGray;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">   </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;table align&#x3D;&quot;center&quot; &gt;</span><br><span class="line">        &lt;tr class&#x3D;&quot;firstLine&quot;&gt;</span><br><span class="line">            &lt;td&gt;人民币&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;美元&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;      </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot; colspan&#x3D;&quot;2&quot;&gt;</span><br><span class="line">            汇率： &lt;input type&#x3D;&quot;number&quot; v-model.number&#x3D;&quot;exchange&quot; &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">         </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">         </span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                ￥: &lt;input type&#x3D;&quot;number&quot; v-model.number &#x3D; &quot;rmb&quot;  &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                $: &lt;input type&#x3D;&quot;number&quot; v-model.number &#x3D; &quot;dollar&quot;   &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;&#x2F;table&gt;</span><br><span class="line">   </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">      </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">new Vue(&#123;</span><br><span class="line">      el: &#39;#div1&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">          exchange:6.4,</span><br><span class="line">          rmb:0,</span><br><span class="line">          dollar:0</span><br><span class="line">      &#125;,</span><br><span class="line">      watch:&#123;</span><br><span class="line">          rmb:function(val) &#123;</span><br><span class="line">              this.rmb &#x3D; val;</span><br><span class="line">              this.dollar &#x3D; this.rmb &#x2F; this.exchange;</span><br><span class="line">          &#125;,</span><br><span class="line">          dollar:function(val) &#123;</span><br><span class="line">              this.dollar &#x3D; val;</span><br><span class="line">              this.rmb &#x3D; this.dollar * this.exchange;</span><br><span class="line">          &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;)</span><br><span class="line">      </span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617165419792.png" class="" title="image-20210617165419792">

<p>三、</p>
<p>1、VUE-过滤器filters-单个过滤器</p>
<p>​    在filters中定义一个类似变量的东西，格式如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">table tr td&#123;</span><br><span class="line">    border:1px solid gray;</span><br><span class="line">    padding:10px;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">    border-collapse:collapse;</span><br><span class="line">    width:800px;</span><br><span class="line">    table-layout:fixed;</span><br><span class="line">&#125;</span><br><span class="line">tr.firstLine&#123;</span><br><span class="line">    background-color: lightGray;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">   </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;table align&#x3D;&quot;center&quot; &gt;</span><br><span class="line">        &lt;tr class&#x3D;&quot;firstLine&quot;&gt;</span><br><span class="line">            &lt;td&gt;输入数据&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;过滤后的结果&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;      </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                &lt;input v-model&#x3D; &quot;data&quot;  &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                &#123;&#123; data|capitalize &#125;&#125;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;&#x2F;table&gt;</span><br><span class="line">   </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">      </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">new Vue(&#123;</span><br><span class="line">      el: &#39;#div1&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">          data:&#39;&#39;</span><br><span class="line">      &#125;,</span><br><span class="line">      filters:&#123;</span><br><span class="line">          capitalize:function(value) &#123;</span><br><span class="line">                if (!value) return &#39;&#39; &#x2F;&#x2F;如果为空，则返回空字符串</span><br><span class="line">                value &#x3D; value.toString()</span><br><span class="line">                return value.charAt(0).toUpperCase() + value.substring(1)</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      </span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617170249875.png" class="" title="image-20210617170249875">

<p>2、VUE-过滤器filters-多个过滤器</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">table tr td&#123;</span><br><span class="line">    border:1px solid gray;</span><br><span class="line">    padding:10px;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">    border-collapse:collapse;</span><br><span class="line">    width:800px;</span><br><span class="line">    table-layout:fixed;</span><br><span class="line">&#125;</span><br><span class="line">tr.firstLine&#123;</span><br><span class="line">    background-color: lightGray;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">   </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;table align&#x3D;&quot;center&quot; &gt;</span><br><span class="line">        &lt;tr class&#x3D;&quot;firstLine&quot;&gt;</span><br><span class="line">            &lt;td&gt;输入数据&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;过滤后的结果&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;      </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                &lt;input v-model&#x3D; &quot;data&quot;  &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                &#123;&#123; data|capitalize|capitalizeLastLetter &#125;&#125;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;&#x2F;table&gt;</span><br><span class="line">   </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">      </span><br><span class="line">&lt;script&gt;</span><br><span class="line">    </span><br><span class="line">new Vue(&#123;</span><br><span class="line">      el: &#39;#div1&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">          data:&#39;&#39;</span><br><span class="line">      &#125;,</span><br><span class="line">      filters:&#123;</span><br><span class="line">          capitalize:function(value) &#123;</span><br><span class="line">                if (!value) return &#39;&#39; &#x2F;&#x2F;如果为空，则返回空字符串</span><br><span class="line">                value &#x3D; value.toString()</span><br><span class="line">                return value.charAt(0).toUpperCase() + value.substring(1)</span><br><span class="line">          &#125;,</span><br><span class="line">          capitalizeLastLetter:function(value) &#123;</span><br><span class="line">                if (!value) return &#39;&#39; &#x2F;&#x2F;如果为空，则返回空字符串</span><br><span class="line">                value &#x3D; value.toString()</span><br><span class="line">                return value.substring(0,value.length-1)+ value.charAt(value.length-1).toUpperCase()</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      </span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617170527894.png" class="" title="image-20210617170527894">

<p>3、VUE-过滤器filters-全局过滤器（重、难点）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">table tr td&#123;</span><br><span class="line">    border:1px solid gray;</span><br><span class="line">    padding:10px;</span><br><span class="line">      </span><br><span class="line">&#125;</span><br><span class="line">table&#123;</span><br><span class="line">    border-collapse:collapse;</span><br><span class="line">    width:800px;</span><br><span class="line">    table-layout:fixed;</span><br><span class="line">&#125;</span><br><span class="line">tr.firstLine&#123;</span><br><span class="line">    background-color: lightGray;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line">   </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">     </span><br><span class="line">    &lt;table align&#x3D;&quot;center&quot; &gt;</span><br><span class="line">        &lt;tr class&#x3D;&quot;firstLine&quot;&gt;</span><br><span class="line">            &lt;td&gt;输入数据&lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;过滤后的结果&lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;      </span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                &lt;input v-model&#x3D; &quot;data&quot;  &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td align&#x3D;&quot;center&quot;&gt;</span><br><span class="line">                &#123;&#123; data|capitalize|capitalizeLastLetter &#125;&#125;</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;&#x2F;table&gt;</span><br><span class="line">   </span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">      </span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.filter(&#39;capitalize&#39;, function (value) &#123;</span><br><span class="line">    if (!value) return &#39;&#39;</span><br><span class="line">    value &#x3D; value.toString()</span><br><span class="line">    return value.charAt(0).toUpperCase() + value.slice(1)</span><br><span class="line">&#125;)</span><br><span class="line">     </span><br><span class="line">Vue.filter(&#39;capitalizeLastLetter&#39;, function (value) &#123;</span><br><span class="line">    if (!value) return &#39;&#39; &#x2F;&#x2F;如果为空，则返回空字符串</span><br><span class="line">    value &#x3D; value.toString()</span><br><span class="line">    return value.substring(0,value.length-1)+ value.charAt(value.length-1).toUpperCase()</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">new Vue(&#123;</span><br><span class="line">      el: &#39;#div1&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">          data:&#39;&#39;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">      </span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617170715298.png" class="" title="image-20210617170715298">

<p>四、组件-components</p>
<p>1、局部组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">components:&#123;</span><br><span class="line">    &#39;product&#39;:&#123;</span><br><span class="line">    	template:&#39;&lt;div class&#x3D;&quot;product&quot; &gt;MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮&lt;&#x2F;div&gt;&#39;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">div.product&#123;</span><br><span class="line">  float:left;</span><br><span class="line">  border:1px solid lightGray;</span><br><span class="line">  width:200px;</span><br><span class="line">  margin:10px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">    &lt;product&gt;&lt;&#x2F;product&gt;</span><br><span class="line">    &lt;product&gt;&lt;&#x2F;product&gt;</span><br><span class="line">    &lt;product&gt;&lt;&#x2F;product&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;script&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#div1&#39;,</span><br><span class="line">  components:&#123;</span><br><span class="line">      &#39;product&#39;:&#123;</span><br><span class="line">          template:&#39;&lt;div class&#x3D;&quot;product&quot; &gt;MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮&lt;&#x2F;div&gt;&#39;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617171939285.png" class="" title="image-20210617171939285">

<p>2、全局组件</p>
<p>​    全局组件和局部组件的定义方式是不一样的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Vue.component(&#39;product&#39;, &#123;</span><br><span class="line">      template: &#39;&lt;div class&#x3D;&quot;product&quot; &gt;MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮&lt;&#x2F;div&gt;&#39;</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">div.product&#123;</span><br><span class="line">  float:left;</span><br><span class="line">  border:1px solid lightGray;</span><br><span class="line">  width:200px;</span><br><span class="line">  margin:10px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">    &lt;product&gt;&lt;&#x2F;product&gt;</span><br><span class="line">    &lt;product&gt;&lt;&#x2F;product&gt;</span><br><span class="line">    &lt;product&gt;&lt;&#x2F;product&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.component(&#39;product&#39;, &#123;</span><br><span class="line">      template: &#39;&lt;div class&#x3D;&quot;product&quot; &gt;MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮&lt;&#x2F;div&gt;&#39;</span><br><span class="line">    &#125;)</span><br><span class="line"> </span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#div1&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>3、传递参数给组件-实现自定义产品的名称</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">div.product&#123;</span><br><span class="line">  float:left;</span><br><span class="line">  border:1px solid lightGray;</span><br><span class="line">  width:200px;</span><br><span class="line">  margin:10px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">    &lt;product name&#x3D;&quot;MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮&quot;&gt;&lt;&#x2F;product&gt;</span><br><span class="line">    &lt;product name&#x3D;&quot;宾度 男士手包真皮大容量手拿包牛皮个性潮男包手抓包软皮信封包&quot;&gt;&lt;&#x2F;product&gt;</span><br><span class="line">    &lt;product name&#x3D;&quot;唯美诺新款男士手包男包真皮大容量小羊皮手拿包信封包软皮夹包潮&quot;&gt;&lt;&#x2F;product&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.component(&#39;product&#39;, &#123;</span><br><span class="line">      props:[&#39;name&#39;],</span><br><span class="line">      template: &#39;&lt;div class&#x3D;&quot;product&quot; &gt;&#123;&#123;name&#125;&#125;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">    &#125;)</span><br><span class="line"> </span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#div1&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617172106561.png" class="" title="image-20210617172106561">

<p>4、动态参数传递-名称由用户输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;在div中是使用&quot;&quot;来传入name，而且name要用v-bind绑定</span><br><span class="line">&lt;product v-bind:name&#x3D;&quot;outName&quot;&gt;&lt;&#x2F;product&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">div.product&#123;</span><br><span class="line">  float:left;</span><br><span class="line">  border:1px solid lightGray;</span><br><span class="line">  width:200px;</span><br><span class="line">  margin:10px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">    组件外的值：&lt;input v-model&#x3D;&quot;outName&quot; &gt;&lt;br&gt;</span><br><span class="line">    &lt;product v-bind:name&#x3D;&quot;outName&quot;&gt;&lt;&#x2F;product&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.component(&#39;product&#39;, &#123;</span><br><span class="line">      props:[&#39;name&#39;],</span><br><span class="line">      template: &#39;&lt;div class&#x3D;&quot;product&quot; &gt;&#123;&#123;name&#125;&#125;&lt;&#x2F;div&gt;&#39;</span><br><span class="line">    &#125;)</span><br><span class="line"> </span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#div1&#39;,</span><br><span class="line">  data:&#123;</span><br><span class="line">      outName:&#39;产品名称&#39;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617172207867.png" class="" title="image-20210617172207867">

<p>5、增加一个点击时间-改变组件中的成员变量</p>
<p>​    这时的onclick方法和methods的方法加在组件中，这样看组件有点像是自定义的机构体</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">方法methods中的this可以表示的方法中的局部变量</span><br><span class="line"></span><br><span class="line">​	***注意：如果是ajax或者axios请求，需要增加var that&#x3D;this;来获取全局在data中声明的全局变量，直接使用this获取不到全局变量，因为这时的this表示ajax中的局部变量</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">div.product&#123;</span><br><span class="line">  float:left;</span><br><span class="line">  border:1px solid lightGray;</span><br><span class="line">  width:200px;</span><br><span class="line">  margin:10px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">    &lt;product name&#x3D;&quot;MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮&quot; sale&#x3D;&quot;10&quot; &gt;&lt;&#x2F;product&gt;</span><br><span class="line">    &lt;product name&#x3D;&quot;宾度 男士手包真皮大容量手拿包牛皮个性潮男包手抓包软皮信封包&quot; sale&#x3D;&quot;20&quot; &gt;&lt;&#x2F;product&gt;</span><br><span class="line">    &lt;product name&#x3D;&quot;唯美诺新款男士手包男包真皮大容量小羊皮手拿包信封包软皮夹包潮&quot; sale&#x3D;&quot;30&quot; &gt;&lt;&#x2F;product&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.component(&#39;product&#39;, &#123;</span><br><span class="line">      props:[&#39;name&#39;,&#39;sale&#39;],</span><br><span class="line">      template: &#39;&lt;div class&#x3D;&quot;product&quot; v-on:click&#x3D;&quot;increaseSale&quot;&gt;&#123;&#123;name&#125;&#125; 销量: &#123;&#123;sale&#125;&#125; &lt;&#x2F;div&gt;&#39;,</span><br><span class="line">      methods:&#123;</span><br><span class="line">          increaseSale:function()&#123;</span><br><span class="line">              this.sale++</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"> </span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#div1&#39;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617173846717.png" class="" title="image-20210617173846717">

<p>6、使用组件渲染后端传过来的json数据</p>
<p>​    使用v-for循环展示json中的数据，这时要修改组件的模板格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">div.product&#123;</span><br><span class="line">  float:left;</span><br><span class="line">  border:1px solid lightGray;</span><br><span class="line">  width:200px;</span><br><span class="line">  margin:10px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">    &lt;product v-for&#x3D;&quot;item in products&quot; v-bind:product&#x3D;&quot;item&quot;&gt;&lt;&#x2F;product&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">Vue.component(&#39;product&#39;, &#123;</span><br><span class="line">      props:[&#39;product&#39;],</span><br><span class="line">      template: &#39;&lt;div class&#x3D;&quot;product&quot; v-on:click&#x3D;&quot;increaseSale&quot;&gt;&#123;&#123;product.name&#125;&#125; 销量: &#123;&#123;product.sale&#125;&#125; &lt;&#x2F;div&gt;&#39;,</span><br><span class="line">      methods:&#123;</span><br><span class="line">          increaseSale:function()&#123;</span><br><span class="line">              this.product.sale++</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"> </span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#div1&#39;,</span><br><span class="line">  data:&#123;</span><br><span class="line">      products:[</span><br><span class="line">                &#123;&quot;name&quot;:&quot;MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮&quot;,&quot;sale&quot;:&quot;18&quot;&#125;,</span><br><span class="line">                &#123;&quot;name&quot;:&quot;宾度 男士手包真皮大容量手拿包牛皮个性潮男包手抓包软皮信封包&quot;,&quot;sale&quot;:&quot;35&quot;&#125;,</span><br><span class="line">                &#123;&quot;name&quot;:&quot;唯美诺新款男士手包男包真皮大容量小羊皮手拿包信封包软皮夹包潮&quot;,&quot;sale&quot;:&quot;29&quot;&#125;</span><br><span class="line">                ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617174302680.png" class="" title="image-20210617174302680">

<p>7、如果组件中的模板内容过多-使用html编写，然后根据id获取到该html</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">组件的模板使用style&#x3D;&quot;display:none&quot;来让他隐藏不显示</span><br><span class="line">使用</span><br><span class="line">var tempalateDiv&#x3D;document.getElementById(&quot;tempalate&quot;).innerHTML;</span><br><span class="line">获取到模板的html</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;how2j.cn&#x2F;study&#x2F;vue.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">div.product&#123;</span><br><span class="line">  float:left;</span><br><span class="line">  border:1px solid lightGray;</span><br><span class="line">  width:200px;</span><br><span class="line">  margin:10px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">div.product:hover&#123;</span><br><span class="line">  border:1px solid #c40000;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line">div.price&#123;</span><br><span class="line">  color:#c40000; </span><br><span class="line">  font-weight:bold;</span><br><span class="line">  font-size:1.2em;</span><br><span class="line">  margin:10px;</span><br><span class="line">&#125;</span><br><span class="line">div.productName&#123;</span><br><span class="line">  color:gray;</span><br><span class="line">  font-size:0.8em;</span><br><span class="line">  margin:10px;</span><br><span class="line">&#125;</span><br><span class="line">div.sale&#123;</span><br><span class="line">  float:left; </span><br><span class="line">  width:100px;</span><br><span class="line">  border:1px solid lightgray;</span><br><span class="line">  border-width:1px 0px 0px 0px;</span><br><span class="line">  color:gray;</span><br><span class="line">  font-size:0.8em;</span><br><span class="line">  padding-left:10px;</span><br><span class="line">&#125;</span><br><span class="line">div.review&#123;</span><br><span class="line">  overflow:hidden;</span><br><span class="line">  border:1px solid lightgray;</span><br><span class="line">  border-width:1px 0px 0px 1px;</span><br><span class="line">  color:gray;</span><br><span class="line">  font-size:0.8em; </span><br><span class="line">  padding-left:10px;</span><br><span class="line">&#125; </span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div id&#x3D;&quot;tempalate&quot; style&#x3D;&quot;display:none&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;product&quot; v-on:click&#x3D;&quot;increaseSales&quot;&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;price&quot;&gt;</span><br><span class="line">                    ¥ &#123;&#123;product.price&#125;&#125;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;productName&quot;&gt;</span><br><span class="line">            &#123;&#123;product.name&#125;&#125;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;sale&quot;&gt; 月成交 &#123;&#123;product.sale&#125;&#125; 笔&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;review&quot;&gt; 评价 &#123;&#123;product.review&#125;&#125; &lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;div id&#x3D;&quot;div1&quot;&gt;</span><br><span class="line">    &lt;product v-for&#x3D;&quot;item in products&quot; v-bind:product&#x3D;&quot;item&quot;&gt;&lt;&#x2F;product&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;script&gt;</span><br><span class="line">var tempalateDiv&#x3D;document.getElementById(&quot;tempalate&quot;).innerHTML;</span><br><span class="line">var templateObject &#x3D; &#123;</span><br><span class="line">    props: [&#39;product&#39;],</span><br><span class="line">    template: tempalateDiv,</span><br><span class="line">      methods: &#123;</span><br><span class="line">            increaseSales: function () &#123;</span><br><span class="line">                this.product.sale &#x3D; parseInt(this.product.sale);</span><br><span class="line">              this.product.sale +&#x3D; 1</span><br><span class="line">              this.$emit(&#39;increment&#39;)</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">Vue.component(&#39;product&#39;, templateObject)</span><br><span class="line"> </span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &#39;#div1&#39;,</span><br><span class="line">  data:&#123;</span><br><span class="line">      products:[</span><br><span class="line">                &#123;&quot;name&quot;:&quot;MAXFEEL休闲男士手包真皮手拿包大容量信封包手抓包夹包软韩版潮&quot;,&quot;price&quot;:&quot;889&quot;,&quot;sale&quot;:&quot;18&quot;,&quot;review&quot;:&quot;5&quot;&#125;,</span><br><span class="line">                &#123;&quot;name&quot;:&quot;宾度 男士手包真皮大容量手拿包牛皮个性潮男包手抓包软皮信封包&quot;,&quot;price&quot;:&quot;322&quot;,&quot;sale&quot;:&quot;35&quot;,&quot;review&quot;:&quot;12&quot;&#125;,</span><br><span class="line">                &#123;&quot;name&quot;:&quot;唯美诺新款男士手包男包真皮大容量小羊皮手拿包信封包软皮夹包潮&quot;,&quot;price&quot;:&quot;523&quot;,&quot;sale&quot;:&quot;29&quot;,&quot;review&quot;:&quot;3&quot;&#125;,</span><br><span class="line">                ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/17/VUE-%E5%AD%A6%E4%B9%A0/image-20210617175125631.png" class="" title="image-20210617175125631">

<p>四、VUE-自定义指令-看不懂</p>
<p>参考：<a href="https://how2j.cn/k/vuejs/vuejs-directive/1754.html">https://how2j.cn/k/vuejs/vuejs-directive/1754.html</a></p>
<p>五、</p>
<p>参考：<a href="https://how2j.cn/k/vuejs/vuejs-watch/1748.html#nowhere">https://how2j.cn/k/vuejs/vuejs-watch/1748.html#nowhere</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>VUE学习</tag>
      </tags>
  </entry>
  <entry>
    <title>ch02-SpringMVC-return-处理器方法的返回值</title>
    <url>/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/</url>
    <content><![CDATA[<p>1</p>
<p>处理器方法的返回值表示请求的处理结果</p>
<p>1、ModelAndView: 有数据和视图，对视图执行forward</p>
<p>2、String: 表示视图，可以时逻辑名称，也可以是完整视图路径</p>
<p>3、void：不能表示数据，也不能表示视图</p>
<p>​    在处理ajax的时候，使用void返回值。通过HttpServletResponse输出数据，响应ajax请求</p>
<p>​    ajax请求服务器端返回的就是数据，与视图无关</p>
<p>4、返回对象 Object：</p>
<p>​    这个Object可以是Integer,String,自定义对象，Map，List等。</p>
<p>​    但是，返回的对象不是作为逻辑视图出现的，而是作为直接在页面显示的数据出现的。</p>
<p>​    返回对象，需要使用@ResponseBody注解，将转换后的JSON数据放入到响应体中</p>
<h2 id="一、return逻辑名称字符串-表示视图"><a href="#一、return逻辑名称字符串-表示视图" class="headerlink" title="一、return逻辑名称字符串-表示视图"></a>一、return逻辑名称字符串-表示视图</h2><img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419161612104.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419161643939.png" class="" title="配置了视图解析器">

<h2 id="二、return-void-表示ajax请求"><a href="#二、return-void-表示ajax请求" class="headerlink" title="二、return void-表示ajax请求"></a>二、return void-表示ajax请求</h2><p>1、添加Jackson依赖</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419162617296.png" class="">

<p>2、在首页index.jsp引入jquery</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419162716400.png" class="">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%--引入jquery.js--%&gt;</span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>3、添加按钮发起ajax请求，按钮绑定单击事件。指定jquery入口函数</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419162932909.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419163716477.png" class="">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">/*jquery.js的入口函数*/</span><br><span class="line">       $(function () &#123;</span><br><span class="line">           /**</span><br><span class="line">            * 绑定事件</span><br><span class="line">            * $(&quot;button&quot;)这是标签选择器</span><br><span class="line">            * 选择click绑定事件</span><br><span class="line">            */</span><br><span class="line">           $(&quot;button&quot;).click(function () &#123;</span><br><span class="line">               // alert(&quot;按钮被点击&quot;);</span><br><span class="line">               /**</span><br><span class="line">                * 使用的函数是ajax函数$.ajax</span><br><span class="line">                */</span><br><span class="line">               $.ajax(&#123;</span><br><span class="line">                   /**</span><br><span class="line">                    * 制定json的参数</span><br><span class="line">                    * url 请求地址</span><br><span class="line">                    * 使用参数data 用一个json格式指定name age</span><br><span class="line">                    */</span><br><span class="line">                   url:&quot;returnVoid-ajax.do&quot;,</span><br><span class="line">                   //url:&quot;returnStudentJson.do&quot;,</span><br><span class="line">                   //url:&quot;returnStudentJsonList.do&quot;,</span><br><span class="line">                   // url:&quot;retrunStringData.do&quot;,</span><br><span class="line">                   data:&#123;</span><br><span class="line">                       name:&quot;liuwf&quot;,</span><br><span class="line">                       age:22</span><br><span class="line">                   &#125;,</span><br><span class="line">                   /**</span><br><span class="line">                    * type 请求方式</span><br><span class="line">                    */</span><br><span class="line">                   type:&quot;post&quot;,</span><br><span class="line">                   /**</span><br><span class="line">                    * dataType 指定数据格式</span><br><span class="line">                    */</span><br><span class="line">                   dataType:&quot;json&quot;,</span><br><span class="line">                   /**</span><br><span class="line">                    * 指定success</span><br><span class="line">                    * response 自定义形参</span><br><span class="line">                    */</span><br><span class="line">                   success:function (response) &#123;</span><br><span class="line">                       /*alert(response.name);</span><br><span class="line">                       alert(response.age);*/</span><br><span class="line"></span><br><span class="line">                       /*//循环的response数组和它的处理函数</span><br><span class="line">                       //循环变量i和循环变量n，n就是json对象</span><br><span class="line">                       $.each(response,function (i,n) &#123;</span><br><span class="line">                           alert(n.name+&quot;     &quot;+n.age);</span><br><span class="line">                       &#125;)*/</span><br><span class="line"></span><br><span class="line">                       alert(response.name);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;)</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure>
<p>4、前端发起请求</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419163757387.png" class="">

<p>5、后端接收请求</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419164023685.png" class="">

<p>6、前端显示ajax请求返回的数据</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419164122793.png" class="">

<h2 id="三、return-void-表示ajax请求-使用注解驱动优化ajax请求"><a href="#三、return-void-表示ajax请求-使用注解驱动优化ajax请求" class="headerlink" title="三、return void-表示ajax请求-使用注解驱动优化ajax请求"></a>三、return void-表示ajax请求-使用注解驱动优化ajax请求</h2><img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419172353352.png" class="">

<p>1、在springmvc配置文件中添加注解驱动</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419164412396.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419164441678.png" class="">

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--加上mvc注解驱动--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>2、发起ajax请求</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419165925011.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419165948681.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419171127905.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419170655428.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419170832241.png" class="">

<p>3、后端返回json数据</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419170139020.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419170723799.png" class="">

<p>4、展示</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419170155117.png" class="">

<h2 id="四、return-对象Object-表示ajax请求（重点-常用）"><a href="#四、return-对象Object-表示ajax请求（重点-常用）" class="headerlink" title="四、return 对象Object-表示ajax请求（重点 常用）"></a>四、return 对象Object-表示ajax请求（重点 常用）</h2><img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419172405162.png" class="">

<p>1、将对象转化为json数据是使用jackson工具完成的，导入依赖，添加注解驱动</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419172558829.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419172725755.png" class="">

<p>2、将json数据写入到响应应答对象是使用注解@ResponseBody实现的，加入注解</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419172906857.png" class="">

<p>3、前端发起请求，提交数据</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419173603198.png" class="">

<p>4、服务器端接收参数据，处理数据，返回数据</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419173724781.png" class="">

<p>5、展示</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419173752360.png" class="">

<h2 id="五、return-对象多个Object对象-使用List集合-表示ajax请求（重点-常用）"><a href="#五、return-对象多个Object对象-使用List集合-表示ajax请求（重点-常用）" class="headerlink" title="五、return 对象多个Object对象-使用List集合-表示ajax请求（重点 常用）"></a>五、return 对象多个Object对象-使用List集合-表示ajax请求（重点 常用）</h2><p>1、前端发起请求</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419174349538.png" class="">

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*jquery.js的入口函数*/</span></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 绑定事件</span></span><br><span class="line"><span class="comment">             * $(&quot;button&quot;)这是标签选择器</span></span><br><span class="line"><span class="comment">             * 选择click绑定事件</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            $(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// alert(&quot;按钮被点击&quot;);</span></span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 使用的函数是ajax函数$.ajax</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 制定json的参数</span></span><br><span class="line"><span class="comment">                     * url 请求地址</span></span><br><span class="line"><span class="comment">                     * 使用参数data 用一个json格式指定name age</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    url:<span class="string">&quot;returnStudentJsonList.do&quot;</span>,</span><br><span class="line">                    <span class="comment">//url:&quot;returnStudentJson.do&quot;,</span></span><br><span class="line">                    <span class="comment">//url:&quot;returnStudentJsonList.do&quot;,</span></span><br><span class="line">                    <span class="comment">// url:&quot;retrunStringData.do&quot;,</span></span><br><span class="line">                    data:&#123;</span><br><span class="line">                        name:<span class="string">&quot;liuwf&quot;</span>,</span><br><span class="line">                        age:<span class="number">22</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * type 请求方式</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    type:<span class="string">&quot;post&quot;</span>,</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * dataType 指定数据格式</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    dataType:<span class="string">&quot;json&quot;</span>,</span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 指定success</span></span><br><span class="line"><span class="comment">                     * response 自定义形参</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    success:<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">                        <span class="comment">//循环的response数组和它的处理函数</span></span><br><span class="line">                        <span class="comment">//循环变量i和循环变量n，n就是json对象</span></span><br><span class="line">                        $.each(response,<span class="function"><span class="keyword">function</span> (<span class="params">i,n</span>) </span>&#123;</span><br><span class="line">                            alert(n.name+<span class="string">&quot;     &quot;</span>+n.age);</span><br><span class="line">                        &#125;)</span><br><span class="line">                        <span class="comment">// alert(response.name +&quot;       &quot;+response.age);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>


<p>2、服务器端返回数据</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419174446820.png" class="">

<p>3、前端循环打印</p>
<p><img src="file://D:\MyBlog\liuwf_blog\blog\source_posts\cho2-SpringMVC-return-处理器方法的返回值\image-20210419174349538.png?lastModify=1618825504"></p>
<p>4、展示</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419174529496.png" class="">

<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419174540166.png" class="">

<h2 id="六、return-String-返回一个文本"><a href="#六、return-String-返回一个文本" class="headerlink" title="六、return String-返回一个文本"></a>六、return String-返回一个文本</h2><p>1、发起ajax请求</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419182031198.png" class="">

<p>2、响应ajax请求</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419182414395.png" class="">

<h2 id="七、注意事项"><a href="#七、注意事项" class="headerlink" title="七、注意事项"></a>七、注意事项</h2><p>1、@ResponBody</p>
<ul>
<li><pre><code> 作用：把处理器方法返回对象转为json后，通过HttpServletResponse输出给浏览器</code></pre>
</li>
<li><pre><code> 位置：方法的定义上面，和其他注解没有先后顺序</code></pre>
</li>
</ul>
<h2 id="八、源代码"><a href="#八、源代码" class="headerlink" title="八、源代码"></a>八、源代码</h2><h4 id="一、配置文件"><a href="#一、配置文件" class="headerlink" title="一、配置文件"></a>一、配置文件</h4><p>1、web.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明、注册springmvc的核心对象DispatcherServlet</span></span><br><span class="line"><span class="comment">        需要在tomcat服务器启动时，创建DispatcherServlet对象的实例</span></span><br><span class="line"><span class="comment">        为什么要创建DispatcherServlet对象的实例呢？</span></span><br><span class="line"><span class="comment">            因为DispatcherServlet在他的创建过程中，会同时创建springmvc容器对象，读取springmvc的配置文件，</span></span><br><span class="line"><span class="comment">            把这个配置文件的对象都创建好，当用户发起请求时就可以直接使用对象了。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        servlet初始化会执行init()方法，DispatcherServlet中的init()&#123;</span></span><br><span class="line"><span class="comment">            //创建容器对象，读取配置文件</span></span><br><span class="line"><span class="comment">            webApplicationContext ctx = new ClassPathXlmApplicationContext(&quot;springmvc.xml&quot;);</span></span><br><span class="line"><span class="comment">            //把容器对象放入到ServletContext中</span></span><br><span class="line"><span class="comment">            getServletContext().setAttribute(key,ctx);</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        启动tomcat服务器报错：无法读取这个文件 /WEB-INF/springmvc-servlet.xml(/WEB-INF/myspringmvc-servlet.xml)</span></span><br><span class="line"><span class="comment">        原因：springmvc创建容器对象时读取的配置文件默认地址是： /WEB-INF/&lt;servlet-name&gt;-servlet.xml</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myweb<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--自定义springmvc读取的配置文件的位置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--springmvc配置文件的位置的属性--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--指定自定义文件的位置--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--在tomcat启动后，创建Servelet对象</span></span><br><span class="line"><span class="comment">            load-on-startup:tomcat启动后创建对象的顺序。它的值是一个整数，数值越小，tomcat创建对象的时间越早</span></span><br><span class="line"><span class="comment">                            一般都是&gt;=0，一般不会是个负数</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myweb<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            在使用框架时，url-patten可以使用两种值</span></span><br><span class="line"><span class="comment">            1、使用扩展名方式 语法 *.xxx 其中：xxx是自定义的扩展名 常用的方式：*.do,*.action,*.mvc等等</span></span><br><span class="line"><span class="comment">                http://localhose:8080:/myweb/some.do 表示.do的请求都交给myweb这个中央调度器servlet来处理</span></span><br><span class="line"><span class="comment">                http://localhose:8080:/myweb/other.do</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            2、使用斜杠 &quot;/&quot;</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注册声明过滤器，解决post乱码问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置项目中使用的字符编码--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--强制请求对象（HttpServletRequest）使用encoding编码的值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--强制应答对象（HttpServletResponse）使用encoding编码的值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            /* 表示强制所有的请求先通过过滤器characterEncodingFilter</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>2、pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.bjpowernode<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ch03-return<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--servlet依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springmvc依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Jackson依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 编码和编译和JDK版本 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>3、springmvc.xml</p>
<img src="/2021/04/19/ch02-SpringMVC-return-%E5%A4%84%E7%90%86%E5%99%A8%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/image-20210419162017875.png" class="">

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--想要用@Controller注解就必须有组件扫描器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.bjpowernode.controller&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明springmvc框架中的视图解析器，帮助开发人员设置视图文件的路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--前缀：视图文件的路径--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/view/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--后缀：视图文件的扩展名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--加上mvc注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="二、前端页面"><a href="#二、前端页面" class="headerlink" title="二、前端页面"></a>二、前端页面</h4><p>1、index.jsp</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    &lt;%--引入jquery.js--%&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.4.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">/*jquery.js的入口函数*/</span></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            /**</span><br><span class="line">             * 绑定事件</span><br><span class="line"><span class="javascript">             * $(<span class="string">&quot;button&quot;</span>)这是标签选择器</span></span><br><span class="line">             * 选择click绑定事件</span><br><span class="line">             */</span><br><span class="line"><span class="javascript">            $(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// alert(&quot;按钮被点击&quot;);</span></span></span><br><span class="line">                /**</span><br><span class="line"><span class="javascript">                 * 使用的函数是ajax函数$.ajax</span></span><br><span class="line">                 */</span><br><span class="line"><span class="javascript">                $.ajax(&#123;</span></span><br><span class="line">                    /**</span><br><span class="line">                     * 制定json的参数</span><br><span class="line">                     * url 请求地址</span><br><span class="line">                     * 使用参数data 用一个json格式指定name age</span><br><span class="line">                     */</span><br><span class="line"><span class="javascript">                    url:<span class="string">&quot;returnStudentJsonList.do&quot;</span>,</span></span><br><span class="line"><span class="javascript">                    <span class="comment">//url:&quot;returnStudentJson.do&quot;,</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//url:&quot;returnStudentJsonList.do&quot;,</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// url:&quot;retrunStringData.do&quot;,</span></span></span><br><span class="line">                    data:&#123;</span><br><span class="line"><span class="javascript">                        name:<span class="string">&quot;liuwf&quot;</span>,</span></span><br><span class="line">                        age:22</span><br><span class="line">                    &#125;,</span><br><span class="line">                    /**</span><br><span class="line">                     * type 请求方式</span><br><span class="line">                     */</span><br><span class="line"><span class="javascript">                    type:<span class="string">&quot;post&quot;</span>,</span></span><br><span class="line">                    /**</span><br><span class="line">                     * dataType 指定数据格式</span><br><span class="line">                     */</span><br><span class="line"><span class="javascript">                    dataType:<span class="string">&quot;json&quot;</span>,</span></span><br><span class="line">                    /**</span><br><span class="line">                     * 指定success</span><br><span class="line">                     * response 自定义形参</span><br><span class="line">                     */</span><br><span class="line"><span class="javascript">                    success:<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//循环的response数组和它的处理函数</span></span></span><br><span class="line"><span class="javascript">                        <span class="comment">//循环变量i和循环变量n，n就是json对象</span></span></span><br><span class="line"><span class="javascript">                        $.each(response,<span class="function"><span class="keyword">function</span> (<span class="params">i,n</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                            alert(n.name+<span class="string">&quot;     &quot;</span>+n.age);</span></span><br><span class="line">                        &#125;)</span><br><span class="line"><span class="javascript">                        <span class="comment">// alert(response.name +&quot;       &quot;+response.age);</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>returnString-view.do<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&lt;%--    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span> = <span class="string">&quot;returnString-view.do&quot;</span> <span class="attr">method</span> = <span class="string">&quot;post&quot;</span>&gt;</span>--%&gt;</span><br><span class="line">&lt;%--        姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span>--%&gt;</span><br><span class="line">&lt;%--        年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span>--%&gt;</span><br><span class="line">&lt;%--        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交参数&quot;</span>&gt;</span>--%&gt;</span><br><span class="line">&lt;%--    <span class="tag">&lt;/<span class="name">form</span>&gt;</span>--%&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;button&quot;</span>&gt;</span>点击按钮触发Ajax请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2、show.jsp</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Stack</span><br><span class="line">  Date: 2021/1/14</span><br><span class="line">  Time: 16:59</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>/WEB-INF/view/show.jsp<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>myname：$&#123;myname&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>myage：$&#123;myage&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>myStudent：$&#123;myStudent&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>3、other.jsp</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: Stack</span><br><span class="line">  Date: 2021&#x2F;1&#x2F;14</span><br><span class="line">  Time: 16:59</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType&#x3D;&quot;text&#x2F;html;charset&#x3D;UTF-8&quot; language&#x3D;&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;&#x2F;WEB-INF&#x2F;view&#x2F;other.jsp从request作用域来获取数据&lt;&#x2F;h3&gt;&lt;br &#x2F;&gt;</span><br><span class="line">    &lt;h3&gt;msg数据：$&#123;msg&#125;&lt;&#x2F;h3&gt;&lt;br&#x2F;&gt;</span><br><span class="line">    &lt;h3&gt;fun数据：$&#123;fun&#125;&lt;&#x2F;h3&gt;&lt;br&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="三、后端"><a href="#三、后端" class="headerlink" title="三、后端"></a>三、后端</h4><p>1、MyController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bjpowernode.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bjpowernode.vo.Student;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.sun.deploy.net.HttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@RequestMapping</span>:</span></span><br><span class="line"><span class="comment"> *      value:所有请求地址的公共部分，叫做模块名称</span></span><br><span class="line"><span class="comment"> *      位置：放在类的上面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/returnString-view.do&quot;&#125;)</span><span class="comment">/*斜杆表示这个地址是根地址*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">doReturnStringView</span><span class="params">(HttpServletRequest request,String name, Integer age)</span></span>&#123; <span class="comment">//doGet() --调用service请求处理数据等</span></span><br><span class="line">        System.out.println(<span class="string">&quot;name:&quot;</span>+name+<span class="string">&quot;\nage:&quot;</span>+age);</span><br><span class="line">        request.setAttribute(<span class="string">&quot;myname&quot;</span>,name);</span><br><span class="line">        request.setAttribute(<span class="string">&quot;myage&quot;</span>,age);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;show&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//returnVoid-ajax.do</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理器返回void 响应ajax请求</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> age</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/returnVoid-ajax.do&quot;&#125;)</span><span class="comment">/*斜杆表示这个地址是根地址*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doReturnVoid</span><span class="params">(HttpServletResponse response, String name, Integer age)</span> <span class="keyword">throws</span> IOException </span>&#123; <span class="comment">//doGet() --调用service请求处理数据等</span></span><br><span class="line">        System.out.println(<span class="string">&quot;name:&quot;</span>+name+<span class="string">&quot;\nage:&quot;</span>+age);</span><br><span class="line"></span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setName(<span class="string">&quot;liuwf&quot;</span>);</span><br><span class="line">        student.setAge(<span class="number">18</span>);</span><br><span class="line"></span><br><span class="line">        String json = <span class="string">&quot;&#123;&#125;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(student != <span class="keyword">null</span> ) &#123;</span><br><span class="line">            ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">            json = objectMapper.writeValueAsString(student);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出json，响应ajax的请求</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        PrintWriter printWriter = response.getWriter();</span><br><span class="line">        <span class="comment">//将java对象对应的json字符串传到前端的response</span></span><br><span class="line">        printWriter.println(json);</span><br><span class="line">        printWriter.flush();</span><br><span class="line">        printWriter.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 利用注解驱动开发ajax请求，相当于用注解封装了代码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@ResponBody</span></span></span><br><span class="line"><span class="comment">     *      作用：把处理器方法返回对象转为json后，通过HttpServletResponse输出给浏览器</span></span><br><span class="line"><span class="comment">     *      位置：方法的定义上面，和其他注解没有先后顺序</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> age</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/returnStudentJson.do&quot;&#125;)</span><span class="comment">/*斜杆表示这个地址是根地址*/</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">doReturnStudentJson</span><span class="params">(String name, Integer age)</span> </span>&#123; <span class="comment">//doGet() --调用service请求处理数据等</span></span><br><span class="line"></span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setName(name);</span><br><span class="line">        student.setAge(age);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> student;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 控制器返回List&lt;Student&gt;前台接收的是一个json数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> age</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/returnStudentJsonList.do&quot;&#125;)</span><span class="comment">/*斜杆表示这个地址是根地址*/</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">doReturnStudentJsonList</span><span class="params">(String name, Integer age)</span> </span>&#123; <span class="comment">//doGet() --调用service请求处理数据等</span></span><br><span class="line"></span><br><span class="line">        List&lt;Student&gt; studentList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setName(<span class="string">&quot;刘某人&quot;</span>);</span><br><span class="line">        student.setAge(<span class="number">22</span>);</span><br><span class="line">        studentList.add(student);</span><br><span class="line"></span><br><span class="line">        Student student1 = <span class="keyword">new</span> Student();</span><br><span class="line">        student1.setName(<span class="string">&quot;陈英俊&quot;</span>);</span><br><span class="line">        student1.setAge(<span class="number">26</span>);</span><br><span class="line">        studentList.add(student1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> studentList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回表示数据的字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@ResponseBody</span> 加了这个注解返回的String表示返回数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &#123;&quot;/retrunStringData.do&quot;&#125;,produces = &quot;text/plain;charset=utf-8&quot;)</span><span class="comment">/*斜杆表示这个地址是根地址*/</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">retrunStringData</span><span class="params">(String name,Integer age)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello,this is SpringMVC,返回表示数据的字符串！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2、Student.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bjpowernode.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//属性名要和请求中参数名一样</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=============这是Student的无参构造方法================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setName&quot;</span>+name);</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(Integer age)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setAge&quot;</span>+age);</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>SpringMVC-处理器方法的返回值</tag>
      </tags>
  </entry>
  <entry>
    <title>工作-Maven环境配置及本地jar包导入到仓库中</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E5%AF%BC%E5%85%A5%E5%88%B0%E4%BB%93%E5%BA%93%E4%B8%AD/</url>
    <content><![CDATA[<p>一、Maven环境配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MAVEN_HOME</span><br><span class="line">D:\Environment\MAVEN\Install\apache-maven-3.6.3</span><br><span class="line"></span><br><span class="line">path</span><br><span class="line">%MAVEN_HOME%\bin</span><br></pre></td></tr></table></figure>


<p>参考：<a href="https://www.runoob.com/maven/maven-setup.html">https://www.runoob.com/maven/maven-setup.html</a></p>
<p>二、本地jar包导入到本地仓库中</p>
<p>1.去百度搜素下载jar包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">关键词：maven kaptcha</span><br></pre></td></tr></table></figure>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E5%AF%BC%E5%85%A5%E5%88%B0%E4%BB%93%E5%BA%93%E4%B8%AD/image-20210629170552052.png" class="" title="image-20210629170552052">

<p>2.查看pom文件中jar包的信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.google.code&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;kaptcha&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.3.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E5%AF%BC%E5%85%A5%E5%88%B0%E4%BB%93%E5%BA%93%E4%B8%AD/image-20210629170640573.png" class="" title="image-20210629170640573">

<p>3.输入命令进行jar包安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn install:install-file -Dfile&#x3D;D:\Environment\MAVEN\Data\MyLocalRepository\com\google\code\kaptcha\2.3.0\kaptcha-2.3.2.jar -DgroupId&#x3D;com.google.code -DartifactId&#x3D;kaptcha -Dversion&#x3D;2.3.0 -Dpackaging&#x3D;jar</span><br></pre></td></tr></table></figure>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E5%AF%BC%E5%85%A5%E5%88%B0%E4%BB%93%E5%BA%93%E4%B8%AD/image-20210629170726959.png" class="" title="image-20210629170726959">

<p>4.查看结果</p>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E5%AF%BC%E5%85%A5%E5%88%B0%E4%BB%93%E5%BA%93%E4%B8%AD/image-20210629170758461.png" class="" title="image-20210629170758461">

<p>附上：在pom文件中添加阿里镜像</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 阿里云maven仓库 --&gt;</span><br><span class="line">&lt;repositories&gt;</span><br><span class="line">	&lt;repository&gt;</span><br><span class="line">		&lt;id&gt;public&lt;&#x2F;id&gt;</span><br><span class="line">		&lt;name&gt;aliyun nexus&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;</span><br><span class="line">		&lt;releases&gt;</span><br><span class="line">			&lt;enabled&gt;true&lt;&#x2F;enabled&gt;</span><br><span class="line">		&lt;&#x2F;releases&gt;</span><br><span class="line">	&lt;&#x2F;repository&gt;</span><br><span class="line">&lt;&#x2F;repositories&gt;</span><br><span class="line">&lt;pluginRepositories&gt;</span><br><span class="line">	&lt;pluginRepository&gt;</span><br><span class="line">		&lt;id&gt;public&lt;&#x2F;id&gt;</span><br><span class="line">		&lt;name&gt;aliyun nexus&lt;&#x2F;name&gt;</span><br><span class="line">		&lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;</span><br><span class="line">		&lt;releases&gt;</span><br><span class="line">			&lt;enabled&gt;true&lt;&#x2F;enabled&gt;</span><br><span class="line">		&lt;&#x2F;releases&gt;</span><br><span class="line">		&lt;snapshots&gt;</span><br><span class="line">			&lt;enabled&gt;false&lt;&#x2F;enabled&gt;</span><br><span class="line">		&lt;&#x2F;snapshots&gt;</span><br><span class="line">	&lt;&#x2F;pluginRepository&gt;</span><br><span class="line">&lt;&#x2F;pluginRepositories&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E5%AF%BC%E5%85%A5%E5%88%B0%E4%BB%93%E5%BA%93%E4%B8%AD/image-20210629170903690.png" class="" title="image-20210629170903690">

<p>二、导入paoding依赖</p>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E5%AF%BC%E5%85%A5%E5%88%B0%E4%BB%93%E5%BA%93%E4%B8%AD/image-20210702104754985.png" class="" title="image-20210702104754985">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mvn install:install-file -Dfile&#x3D;D:\jar\paoding-analysis.jar -DgroupId&#x3D;net.paoding -DartifactId&#x3D;paoding-analysis -Dversion&#x3D;2.0 -Dpackaging&#x3D;jar</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import net.paoding.analysis.analyzer.PaodingAnalyzer;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;net.paoding&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;paoding-analysis&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8A%E6%9C%AC%E5%9C%B0jar%E5%8C%85%E5%AF%BC%E5%85%A5%E5%88%B0%E4%BB%93%E5%BA%93%E4%B8%AD/image-20210702104824500.png" class="" title="image-20210702104824500">

<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">Microsoft Windows [版本 <span class="number">10</span>.<span class="number">0</span>.<span class="number">19042</span>.<span class="number">1052</span>]</span><br><span class="line">(c) Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Administrator</span>&gt;<span class="title">mvn</span> <span class="title">install:install</span>-<span class="title">file</span> -<span class="title">Dfile</span>=<span class="title">D</span>:\<span class="title">jar</span>\<span class="title">paoding</span>-<span class="title">analysis.jar</span> -<span class="title">DgroupId</span>=<span class="title">net.paoding.analysis</span> -<span class="title">DartifactId</span>=<span class="title">paoding</span>-<span class="title">analysis</span> -<span class="title">Dpackaging</span>=<span class="title">jar</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Scanning</span> <span class="title">for</span> <span class="title">projects</span>...</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>]</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------&lt; <span class="title">org.apache.maven:standalone</span>-<span class="title">pom</span> &gt;-------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Building</span> <span class="title">Maven</span> <span class="title">Stub</span> <span class="title">Project</span> (<span class="title">No</span> <span class="title">POM</span>) 1</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] --------------------------------[ <span class="title">pom</span> ]---------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>]</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] --- <span class="title">maven</span>-<span class="title">install</span>-<span class="title">plugin</span>:2.4:<span class="title">install</span>-<span class="title">file</span> (<span class="title">default</span>-<span class="title">cli</span>) @ <span class="title">standalone</span>-<span class="title">pom</span> ---</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------------------------------------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">BUILD</span> <span class="title">FAILURE</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------------------------------------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Total</span> <span class="title">time</span>:  0.585 <span class="title">s</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Finished</span> <span class="title">at</span>: 2021-07-02<span class="title">T10</span>:32:43+08:00</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------------------------------------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>] <span class="title">Failed</span> <span class="title">to</span> <span class="title">execute</span> <span class="title">goal</span> <span class="title">org.apache.maven.plugins:maven</span>-<span class="title">install</span>-<span class="title">plugin</span>:2.4:<span class="title">install</span>-<span class="title">file</span> (<span class="title">default</span>-<span class="title">cli</span>) <span class="title">on</span> <span class="title">project</span> <span class="title">standalone</span>-<span class="title">pom</span>: <span class="title">The</span> <span class="title">artifact</span> <span class="title">information</span> <span class="title">is</span> <span class="title">incomplete</span> <span class="title">or</span> <span class="title">not</span> <span class="title">valid</span>:</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>]   [0]  &#x27;<span class="title">version</span>&#x27; <span class="title">is</span> <span class="title">missing</span>.</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>]</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>] -&gt; [<span class="title">Help</span> 1]</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>]</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>] <span class="title">To</span> <span class="title">see</span> <span class="title">the</span> <span class="title">full</span> <span class="title">stack</span> <span class="title">trace</span> <span class="title">of</span> <span class="title">the</span> <span class="title">errors</span>, <span class="title">re</span>-<span class="title">run</span> <span class="title">Maven</span> <span class="title">with</span> <span class="title">the</span> -<span class="title">e</span> <span class="title">switch</span>.</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>] <span class="title">Re</span>-<span class="title">run</span> <span class="title">Maven</span> <span class="title">using</span> <span class="title">the</span> -<span class="title">X</span> <span class="title">switch</span> <span class="title">to</span> <span class="title">enable</span> <span class="title">full</span> <span class="title">debug</span> <span class="title">logging</span>.</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>]</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>] <span class="title">For</span> <span class="title">more</span> <span class="title">information</span> <span class="title">about</span> <span class="title">the</span> <span class="title">errors</span> <span class="title">and</span> <span class="title">possible</span> <span class="title">solutions</span>, <span class="title">please</span> <span class="title">read</span> <span class="title">the</span> <span class="title">following</span> <span class="title">articles</span>:</span></span><br><span class="line"><span class="function">[<span class="title">ERROR</span>] [<span class="title">Help</span> 1] <span class="title">http</span>://<span class="title">cwiki.apache.org</span>/<span class="title">confluence</span>/<span class="title">display</span>/<span class="title">MAVEN</span>/<span class="title">MojoExecutionException</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Administrator</span>&gt;<span class="title">mvn</span> <span class="title">install:install</span>-<span class="title">file</span> -<span class="title">Dfile</span>=<span class="title">D</span>:\<span class="title">jar</span>\<span class="title">paoding</span>-<span class="title">analysis.jar</span> -<span class="title">DgroupId</span>=<span class="title">net.paoding</span> -<span class="title">DartifactId</span>=<span class="title">paoding</span>-<span class="title">analysis</span> -<span class="title">Dversion</span>=2.0 -<span class="title">Dpackaging</span>=<span class="title">jar</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Scanning</span> <span class="title">for</span> <span class="title">projects</span>...</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>]</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------&lt; <span class="title">org.apache.maven:standalone</span>-<span class="title">pom</span> &gt;-------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Building</span> <span class="title">Maven</span> <span class="title">Stub</span> <span class="title">Project</span> (<span class="title">No</span> <span class="title">POM</span>) 1</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] --------------------------------[ <span class="title">pom</span> ]---------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>]</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] --- <span class="title">maven</span>-<span class="title">install</span>-<span class="title">plugin</span>:2.4:<span class="title">install</span>-<span class="title">file</span> (<span class="title">default</span>-<span class="title">cli</span>) @ <span class="title">standalone</span>-<span class="title">pom</span> ---</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Installing</span> <span class="title">D</span>:\<span class="title">jar</span>\<span class="title">paoding</span>-<span class="title">analysis.jar</span> <span class="title">to</span> <span class="title">D</span>:\<span class="title">Environment</span>\<span class="title">MAVEN</span>\<span class="title">Data</span>\<span class="title">MyLocalRepository</span>\<span class="title">net</span>\<span class="title">paoding</span>\<span class="title">paoding</span>-<span class="title">analysis</span>\2.0\<span class="title">paoding</span>-<span class="title">analysis</span>-2.0.<span class="title">jar</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Installing</span> <span class="title">C</span>:\<span class="title">Users</span>\<span class="title">ADMINI</span>~1\<span class="title">AppData</span>\<span class="title">Local</span>\<span class="title">Temp</span>\<span class="title">mvninstall3585807703797388467.pom</span> <span class="title">to</span> <span class="title">D</span>:\<span class="title">Environment</span>\<span class="title">MAVEN</span>\<span class="title">Data</span>\<span class="title">MyLocalRepository</span>\<span class="title">net</span>\<span class="title">paoding</span>\<span class="title">paoding</span>-<span class="title">analysis</span>\2.0\<span class="title">paoding</span>-<span class="title">analysis</span>-2.0.<span class="title">pom</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------------------------------------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">BUILD</span> <span class="title">SUCCESS</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------------------------------------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Total</span> <span class="title">time</span>:  0.622 <span class="title">s</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Finished</span> <span class="title">at</span>: 2021-07-02<span class="title">T10</span>:34:19+08:00</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------------------------------------------------------------</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Administrator</span>&gt;</span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Administrator</span>&gt;<span class="title">mvn</span> <span class="title">install:install</span>-<span class="title">file</span> -<span class="title">Dfile</span>=<span class="title">D</span>:\<span class="title">jar</span>\<span class="title">org.w3c.dom.events</span>-3.0.0.<span class="title">draft20060413_v201105210656.jar</span> -<span class="title">DgroupId</span>=<span class="title">org.w3c.dom</span> -<span class="title">DartifactId</span>=<span class="title">org.w3c.dom.events</span> -<span class="title">Dversion</span>=3.0.0.<span class="title">draft20060413_v201105210656</span> -<span class="title">Dpackaging</span>=<span class="title">jar</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Scanning</span> <span class="title">for</span> <span class="title">projects</span>...</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>]</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------&lt; <span class="title">org.apache.maven:standalone</span>-<span class="title">pom</span> &gt;-------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Building</span> <span class="title">Maven</span> <span class="title">Stub</span> <span class="title">Project</span> (<span class="title">No</span> <span class="title">POM</span>) 1</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] --------------------------------[ <span class="title">pom</span> ]---------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>]</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] --- <span class="title">maven</span>-<span class="title">install</span>-<span class="title">plugin</span>:2.4:<span class="title">install</span>-<span class="title">file</span> (<span class="title">default</span>-<span class="title">cli</span>) @ <span class="title">standalone</span>-<span class="title">pom</span> ---</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Installing</span> <span class="title">D</span>:\<span class="title">jar</span>\<span class="title">org.w3c.dom.events</span>-3.0.0.<span class="title">draft20060413_v201105210656.jar</span> <span class="title">to</span> <span class="title">D</span>:\<span class="title">Environment</span>\<span class="title">MAVEN</span>\<span class="title">Data</span>\<span class="title">MyLocalRepository</span>\<span class="title">org</span>\<span class="title">w3c</span>\<span class="title">dom</span>\<span class="title">org.w3c.dom.events</span>\3.0.0.<span class="title">draft20060413_v201105210656</span>\<span class="title">org.w3c.dom.events</span>-3.0.0.<span class="title">draft20060413_v201105210656.jar</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Installing</span> <span class="title">C</span>:\<span class="title">Users</span>\<span class="title">ADMINI</span>~1\<span class="title">AppData</span>\<span class="title">Local</span>\<span class="title">Temp</span>\<span class="title">mvninstall8392555533854606012.pom</span> <span class="title">to</span> <span class="title">D</span>:\<span class="title">Environment</span>\<span class="title">MAVEN</span>\<span class="title">Data</span>\<span class="title">MyLocalRepository</span>\<span class="title">org</span>\<span class="title">w3c</span>\<span class="title">dom</span>\<span class="title">org.w3c.dom.events</span>\3.0.0.<span class="title">draft20060413_v201105210656</span>\<span class="title">org.w3c.dom.events</span>-3.0.0.<span class="title">draft20060413_v201105210656.pom</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------------------------------------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">BUILD</span> <span class="title">SUCCESS</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------------------------------------------------------------</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Total</span> <span class="title">time</span>:  0.767 <span class="title">s</span></span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] <span class="title">Finished</span> <span class="title">at</span>: 2021-07-02<span class="title">T10</span>:35:59+08:00</span></span><br><span class="line"><span class="function">[<span class="title">INFO</span>] ------------------------------------------------------------------------</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">C</span>:\<span class="title">Users</span>\<span class="title">Administrator</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-解决导入eclipse-svn导入maven项目后右键没有improt-as-maven-project选项</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-%E8%A7%A3%E5%86%B3%E5%AF%BC%E5%85%A5eclipse-svn%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89improt-as-maven-project%E9%80%89%E9%A1%B9/</url>
    <content><![CDATA[<p>1</p>
<p>一、查看项目下是否缺少</p>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E8%A7%A3%E5%86%B3%E5%AF%BC%E5%85%A5eclipse-svn%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89improt-as-maven-project%E9%80%89%E9%A1%B9/image-20210629171242342.png" class="" title="image-20210629171242342">

<p>手动添加这两个文件</p>
<p>1.xxx.classpath文件</p>
<p>​    直接复制进去即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;classpath&gt;</span><br><span class="line">	&lt;classpathentry kind&#x3D;&quot;src&quot; output&#x3D;&quot;target&#x2F;classes&quot; path&#x3D;&quot;src&#x2F;main&#x2F;java&quot;&gt;</span><br><span class="line">		&lt;attributes&gt;</span><br><span class="line">			&lt;attribute name&#x3D;&quot;optional&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">			&lt;attribute name&#x3D;&quot;maven.pomderived&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;attributes&gt;</span><br><span class="line">	&lt;&#x2F;classpathentry&gt;</span><br><span class="line">	&lt;classpathentry excluding&#x3D;&quot;**&quot; kind&#x3D;&quot;src&quot; output&#x3D;&quot;target&#x2F;classes&quot; path&#x3D;&quot;src&#x2F;main&#x2F;resources&quot;&gt;</span><br><span class="line">		&lt;attributes&gt;</span><br><span class="line">			&lt;attribute name&#x3D;&quot;maven.pomderived&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;attributes&gt;</span><br><span class="line">	&lt;&#x2F;classpathentry&gt;</span><br><span class="line">	&lt;classpathentry kind&#x3D;&quot;src&quot; output&#x3D;&quot;target&#x2F;test-classes&quot; path&#x3D;&quot;src&#x2F;test&#x2F;java&quot;&gt;</span><br><span class="line">		&lt;attributes&gt;</span><br><span class="line">			&lt;attribute name&#x3D;&quot;optional&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">			&lt;attribute name&#x3D;&quot;maven.pomderived&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">			&lt;attribute name&#x3D;&quot;test&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;attributes&gt;</span><br><span class="line">	&lt;&#x2F;classpathentry&gt;</span><br><span class="line">	&lt;classpathentry kind&#x3D;&quot;con&quot; path&#x3D;&quot;org.eclipse.jdt.launching.JRE_CONTAINER&#x2F;org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType&#x2F;J2SE-1.5&quot;&gt;</span><br><span class="line">		&lt;attributes&gt;</span><br><span class="line">			&lt;attribute name&#x3D;&quot;maven.pomderived&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;attributes&gt;</span><br><span class="line">	&lt;&#x2F;classpathentry&gt;</span><br><span class="line">	&lt;classpathentry kind&#x3D;&quot;con&quot; path&#x3D;&quot;org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER&quot;&gt;</span><br><span class="line">		&lt;attributes&gt;</span><br><span class="line">			&lt;attribute name&#x3D;&quot;maven.pomderived&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span><br><span class="line">		&lt;&#x2F;attributes&gt;</span><br><span class="line">	&lt;&#x2F;classpathentry&gt;</span><br><span class="line">	&lt;classpathentry kind&#x3D;&quot;con&quot; path&#x3D;&quot;org.eclipse.jst.server.core.container&#x2F;org.eclipse.jst.server.tomcat.runtimeTarget&#x2F;Apache Tomcat v8.0&quot;&#x2F;&gt;</span><br><span class="line">	&lt;classpathentry kind&#x3D;&quot;output&quot; path&#x3D;&quot;target&#x2F;classes&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;classpath&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2.xxx.project文件</p>
<p>​    注意事项：要修改name标签</p>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E8%A7%A3%E5%86%B3%E5%AF%BC%E5%85%A5eclipse-svn%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89improt-as-maven-project%E9%80%89%E9%A1%B9/image-20210629171443493.png" class="" title="image-20210629171443493">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;projectDescription&gt;</span><br><span class="line">	&lt;name&gt;qywx&lt;&#x2F;name&gt;</span><br><span class="line">	&lt;comment&gt;&lt;&#x2F;comment&gt;</span><br><span class="line">	&lt;projects&gt;</span><br><span class="line">	&lt;&#x2F;projects&gt;</span><br><span class="line">	&lt;buildSpec&gt;</span><br><span class="line">		&lt;buildCommand&gt;</span><br><span class="line">			&lt;name&gt;org.eclipse.jdt.core.javabuilder&lt;&#x2F;name&gt;</span><br><span class="line">			&lt;arguments&gt;</span><br><span class="line">			&lt;&#x2F;arguments&gt;</span><br><span class="line">		&lt;&#x2F;buildCommand&gt;</span><br><span class="line">		&lt;buildCommand&gt;</span><br><span class="line">			&lt;name&gt;org.eclipse.wst.common.project.facet.core.builder&lt;&#x2F;name&gt;</span><br><span class="line">			&lt;arguments&gt;</span><br><span class="line">			&lt;&#x2F;arguments&gt;</span><br><span class="line">		&lt;&#x2F;buildCommand&gt;</span><br><span class="line">		&lt;buildCommand&gt;</span><br><span class="line">			&lt;name&gt;org.eclipse.wst.validation.validationbuilder&lt;&#x2F;name&gt;</span><br><span class="line">			&lt;arguments&gt;</span><br><span class="line">			&lt;&#x2F;arguments&gt;</span><br><span class="line">		&lt;&#x2F;buildCommand&gt;</span><br><span class="line">		&lt;buildCommand&gt;</span><br><span class="line">			&lt;name&gt;org.eclipse.m2e.core.maven2Builder&lt;&#x2F;name&gt;</span><br><span class="line">			&lt;arguments&gt;</span><br><span class="line">			&lt;&#x2F;arguments&gt;</span><br><span class="line">		&lt;&#x2F;buildCommand&gt;</span><br><span class="line">	&lt;&#x2F;buildSpec&gt;</span><br><span class="line">	&lt;natures&gt;</span><br><span class="line">		&lt;nature&gt;org.eclipse.jem.workbench.JavaEMFNature&lt;&#x2F;nature&gt;</span><br><span class="line">		&lt;nature&gt;org.eclipse.wst.common.modulecore.ModuleCoreNature&lt;&#x2F;nature&gt;</span><br><span class="line">		&lt;nature&gt;org.eclipse.jdt.core.javanature&lt;&#x2F;nature&gt;</span><br><span class="line">		&lt;nature&gt;org.eclipse.m2e.core.maven2Nature&lt;&#x2F;nature&gt;</span><br><span class="line">		&lt;nature&gt;org.eclipse.wst.common.project.facet.core.nature&lt;&#x2F;nature&gt;</span><br><span class="line">		&lt;nature&gt;org.eclipse.wst.jsdt.core.jsNature&lt;&#x2F;nature&gt;</span><br><span class="line">	&lt;&#x2F;natures&gt;</span><br><span class="line">&lt;&#x2F;projectDescription&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>二、</p>
<p>1、缺少插件，搜索安装就可以了</p>
<p>maven integration for eclipse</p>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E8%A7%A3%E5%86%B3%E5%AF%BC%E5%85%A5eclipse-svn%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89improt-as-maven-project%E9%80%89%E9%A1%B9/20201201174809912.png" class="">
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E8%A7%A3%E5%86%B3%E5%AF%BC%E5%85%A5eclipse-svn%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89improt-as-maven-project%E9%80%89%E9%A1%B9/20201201175001780.png" class="">

<p>选择luna and newer版本安装</p>
<p>2、如果装了还不行的话使用</p>
<p> <a href="http://download.eclipse.org/technology/m2e/releases/">http://download.eclipse.org/technology/m2e/releases/</a><br> 安装</p>
<img src="/2021/06/29/%E5%B7%A5%E4%BD%9C-%E8%A7%A3%E5%86%B3%E5%AF%BC%E5%85%A5eclipse-svn%E5%AF%BC%E5%85%A5maven%E9%A1%B9%E7%9B%AE%E5%90%8E%E5%8F%B3%E9%94%AE%E6%B2%A1%E6%9C%89improt-as-maven-project%E9%80%89%E9%A1%B9/20201203170658883.png" class="">
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Maven项目报错_Cannot change version of project facet Dynamic Web Module to 3.1</title>
    <url>/2021/06/29/%E5%B7%A5%E4%BD%9C-Maven%E9%A1%B9%E7%9B%AE%E6%8A%A5%E9%94%99-Cannot-change-version-of-project-facet-Dynamic-Web-Module-to-3-1/</url>
    <content><![CDATA[<p>参考：<a href="https://blog.csdn.net/steveguoshao/article/details/38414145">https://blog.csdn.net/steveguoshao/article/details/38414145</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-惠普1216打印机驱动</title>
    <url>/2021/06/30/%E5%B7%A5%E4%BD%9C-%E6%83%A0%E6%99%AE1216%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/</url>
    <content><![CDATA[<p><a href="https://support.hp.com/cn-zh/drivers/selfservice/hp-laserjet-pro-m1216nfh-multifunction-printer-series/4292047">https://support.hp.com/cn-zh/drivers/selfservice/hp-laserjet-pro-m1216nfh-multifunction-printer-series/4292047</a></p>
<img src="/2021/06/30/%E5%B7%A5%E4%BD%9C-%E6%83%A0%E6%99%AE1216%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/image-20210630101418578.png" class="" title="image-20210630101418578">
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Oracle导出和导入dmp文件</title>
    <url>/2021/07/01/%E5%B7%A5%E4%BD%9C-Oracle%E5%AF%BC%E5%87%BA%E5%92%8C%E5%AF%BC%E5%85%A5dmp%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>一、导出dmp文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exp cms&#x2F;123456@192.168.5.23:1521&#x2F;orcl file&#x3D;E:\expdir64\backup\2021-06-29\cms.dmp log&#x3D;E:\expdir64\backup\2021-06-29\cms.log</span><br></pre></td></tr></table></figure>
<p>二、导入dmp文件</p>
<p>1.创建表空间、临时表空间、用户以及给用户赋予权限</p>
<p>​    注意：在执行前要知道原先的数据库中的表空间的名称和用户名称 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--cms</span></span><br><span class="line"><span class="keyword">create</span> temporary tablespace cms_linshi </span><br><span class="line">tempfile <span class="string">&#x27;D:\app\feezet01\oradata\orcl\cms_linshi.dbf&#x27;</span></span><br><span class="line">size <span class="number">50</span>m </span><br><span class="line">autoextend <span class="keyword">on</span> </span><br><span class="line">next <span class="number">50</span>m maxsize <span class="number">20480</span>m </span><br><span class="line">extent management <span class="keyword">local</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span>space cms </span><br><span class="line">logging </span><br><span class="line">datafile <span class="string">&#x27;D:\app\feezet01\oradata\orcl\cms.dbf&#x27;</span></span><br><span class="line">size <span class="number">50</span>m </span><br><span class="line">autoextend <span class="keyword">on</span> </span><br><span class="line">next <span class="number">50</span>m maxsize <span class="number">20480</span>m </span><br><span class="line">extent management <span class="keyword">local</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> fjsycms identified <span class="keyword">by</span> cms </span><br><span class="line"><span class="keyword">default</span> tablespace cms </span><br><span class="line">temporary tablespace cms_linshi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">connect</span>,resource,dba <span class="keyword">to</span> cms;</span><br></pre></td></tr></table></figure>
<p>2.运行dmp文件</p>
<p>使用cmd运行命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">imp cms&#x2F;cms@192.25.25.5:1521&#x2F;orcl file&#x3D;D:&#x2F;Datas&#x2F;cms&#x2F;cms.dmp full&#x3D;y</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-webxml文件报错:Error while downloading</title>
    <url>/2021/07/02/%E5%B7%A5%E4%BD%9C-webxml%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99-Error-while-downloading/</url>
    <content><![CDATA[<p>报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error while downloading &#39;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;xml.xsd&#39; to C:\Users\Administrator\.lemminx\cache\http\www.w3.org\2001\xml.xsd.</span><br></pre></td></tr></table></figure>
<img src="/2021/07/02/%E5%B7%A5%E4%BD%9C-webxml%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99-Error-while-downloading/image-20210702095439191.png" class="" title="image-20210702095439191">

<p>解决：</p>
<p>添加标签</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;xml-body&gt;</span><br></pre></td></tr></table></figure>
<img src="/2021/07/02/%E5%B7%A5%E4%BD%9C-webxml%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99-Error-while-downloading/image-20210702095544292.png" class="" title="image-20210702095544292">

<img src="/2021/07/02/%E5%B7%A5%E4%BD%9C-webxml%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99-Error-while-downloading/image-20210702095557595.png" class="" title="image-20210702095557595">

<p>参考：<a href="https://www.cnblogs.com/zhangyuanbo/p/11250563.html">https://www.cnblogs.com/zhangyuanbo/p/11250563.html</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-解决maven中jar包和jdk中jar包的冲突</title>
    <url>/2021/07/02/%E5%B7%A5%E4%BD%9C-%E8%A7%A3%E5%86%B3maven%E4%B8%ADjar%E5%8C%85%E5%92%8Cjdk%E4%B8%ADjar%E5%8C%85%E7%9A%84%E5%86%B2%E7%AA%81/</url>
    <content><![CDATA[<p>参考：<a href="https://blog.csdn.net/weisong530624687/article/details/56839276">https://blog.csdn.net/weisong530624687/article/details/56839276</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-使用SpringContextHolder获取bean实例</title>
    <url>/2021/07/02/%E5%B7%A5%E4%BD%9C-%E4%BD%BF%E7%94%A8SpringContextHolder%E8%8E%B7%E5%8F%96bean%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">严重: Servlet.service() for servlet [jsp] in context with path [&#x2F;cms] threw exception [javax.servlet.ServletException: java.lang.NoClassDefFoundError: Could not initialize class com.shh.org.cms.utils.CodeNameUtil] with root cause</span><br><span class="line">java.lang.NoClassDefFoundError: Could not initialize class com.shh.org.cms.utils.CodeNameUtil</span><br><span class="line">	at org.apache.jsp.index_jsp._jspService(index_jsp.java:128)</span><br><span class="line">	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)</span><br><span class="line">	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)</span><br><span class="line">	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:476)</span><br><span class="line">	at org.apache.jasper.servlet.JspServlet._serviceJspFile(JspServlet.java:386)</span><br><span class="line">	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:40001)</span><br><span class="line">	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:330)</span><br><span class="line">	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)</span><br><span class="line">	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)</span><br><span class="line">	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)</span><br><span class="line">	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)</span><br><span class="line">	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:96)</span><br><span class="line">	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)</span><br><span class="line">	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)</span><br><span class="line">	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)</span><br><span class="line">	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)</span><br><span class="line">	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)</span><br><span class="line">	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)</span><br><span class="line">	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)</span><br><span class="line">	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:798)</span><br><span class="line">	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)</span><br><span class="line">	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:808)</span><br><span class="line">	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)</span><br><span class="line">	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)</span><br><span class="line">	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)</span><br><span class="line">	at java.lang.Thread.run(Thread.java:748)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<img src="/2021/07/02/%E5%B7%A5%E4%BD%9C-%E4%BD%BF%E7%94%A8SpringContextHolder%E8%8E%B7%E5%8F%96bean%E5%AE%9E%E4%BE%8B/image-20210702170841154.png" class="" title="image-20210702170841154">

<img src="/2021/07/02/%E5%B7%A5%E4%BD%9C-%E4%BD%BF%E7%94%A8SpringContextHolder%E8%8E%B7%E5%8F%96bean%E5%AE%9E%E4%BE%8B/image-20210702170900398.png" class="" title="image-20210702170900398">

<img src="/2021/07/02/%E5%B7%A5%E4%BD%9C-%E4%BD%BF%E7%94%A8SpringContextHolder%E8%8E%B7%E5%8F%96bean%E5%AE%9E%E4%BE%8B/image-20210702170933680.png" class="" title="image-20210702170933680">

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 设全局变量以便可以获得对应的注入bean --&gt;</span><br><span class="line">&lt;bean id&#x3D;&quot;springContextHolder&quot;</span><br><span class="line">	class&#x3D;&quot;org.springside.modules.spring.SpringContextHolder&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure>






<p>参考：<a href="https://www.cnblogs.com/blogslee/p/10825703.html">https://www.cnblogs.com/blogslee/p/10825703.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>工作-在JDK6和JDK7以及JDK8中FtpClient使用区别</title>
    <url>/2021/07/02/%E5%B7%A5%E4%BD%9C-%E5%9C%A8JDK6%E5%92%8CJDK7%E4%BB%A5%E5%8F%8AJDK8%E4%B8%ADFtpClient%E4%BD%BF%E7%94%A8%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;			ftpClient &#x3D; new FtpClient();</span><br><span class="line">			ftpClient &#x3D; FtpClient.create(); &#x2F;&#x2F; 1.7的替换方式</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;			ftpClient.openServer(ip, port);</span><br><span class="line">			SocketAddress addr &#x3D; new InetSocketAddress(ip, port);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;			ftpClient.login(user, password);</span><br><span class="line">			ftpClient.login(user, password.toCharArray());</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;				ftpClient.cd(path);</span><br><span class="line">				ftpClient.changeDirectory(path);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;ftpClient.pwd()</span><br><span class="line">ftpClient.getWorkingDirectory()</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;			ftpClient.binary();</span><br><span class="line">			ftpClient.setBinaryType();</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;				ftpClient.closeServer();</span><br><span class="line">				ftpClient.close();</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;				ftpClient.sendServer(&quot;MKD &quot; + pathName + &quot;\r\n&quot;);</span><br><span class="line">				ftpClient.makeDirectory(pathName);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;				int reply &#x3D; ftpClient.readServerResponse();</span><br><span class="line">				ftpClient.setBinaryType();</span><br><span class="line">				String reply&#x3D;ftpClient.getLastResponseString();</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;			TelnetOutputStream os &#x3D; ftpClient.put(relativePath);</span><br><span class="line">			OutputStream os &#x3D; ftpClient.putFileStream(relativePath);</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;			TelnetInputStream is &#x3D; ftpClient.get(remoteFile);</span><br><span class="line">			InputStream is &#x3D; ftpClient.getFileStream(remoteFile);</span><br></pre></td></tr></table></figure>
<p>参考：<a href="https://blog.csdn.net/qq_25763843/article/details/83143803">https://blog.csdn.net/qq_25763843/article/details/83143803</a></p>
<p>​        <a href="https://blog.csdn.net/qq_33314107/article/details/79448819">https://blog.csdn.net/qq_33314107/article/details/79448819</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Oracle完全卸载</title>
    <url>/2021/07/05/%E5%B7%A5%E4%BD%9C-Oracle%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BD/</url>
    <content><![CDATA[<p>参考：<a href="https://www.cnblogs.com/summary-2017/p/9326094.html">https://www.cnblogs.com/summary-2017/p/9326094.html</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>学习-Oracle</title>
    <url>/2021/07/06/%E5%AD%A6%E4%B9%A0-Oracle/</url>
    <content><![CDATA[<p>1.查看当前数据库中的所有表的表名及其记录数量</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> T.TABLE_NAME, T.NUM_ROWS <span class="keyword">FROM</span> USER_TABLES T <span class="keyword">order</span> <span class="keyword">by</span> table_name;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
  </entry>
  <entry>
    <title>工作-Exception starting filter struts2Filter Unable to load configuration</title>
    <url>/2021/07/06/%E5%B7%A5%E4%BD%9C-Exception-starting-filter-struts2Filter-Unable-to-load-configuration/</url>
    <content><![CDATA[<p>报错：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2021-7-6 14:07:29 org.apache.catalina.core.StandardContext filterStart</span><br><span class="line">严重: Exception starting filter struts2Filter</span><br><span class="line">Unable to load configuration. - [unknown location]</span><br><span class="line">	at org.apache.struts2.dispatcher.Dispatcher.init(Dispatcher.java:431)</span><br><span class="line">	at org.apache.struts2.dispatcher.ng.InitOperations.initDispatcher(InitOperations.java:69)</span><br><span class="line">	at org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter.init(StrutsPrepareAndExecuteFilter.java:51)</span><br><span class="line">	at org.apache.catalina.core.ApplicationFilterConfig.initFilter(ApplicationFilterConfig.java:279)</span><br><span class="line">	at org.apache.catalina.core.ApplicationFilterConfig.getFilter(ApplicationFilterConfig.java:260)</span><br><span class="line">	at org.apache.catalina.core.ApplicationFilterConfig.&lt;init&gt;(ApplicationFilterConfig.java:105)</span><br><span class="line">	at org.apache.catalina.core.StandardContext.filterStart(StandardContext.java:4809)</span><br><span class="line">	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5485)</span><br><span class="line">	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class="line">	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)</span><br><span class="line">	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)</span><br><span class="line">	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)</span><br><span class="line">	at java.util.concurrent.FutureTask.run(FutureTask.java:138)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)</span><br><span class="line">	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)</span><br><span class="line">	at java.lang.Thread.run(Thread.java:662)</span><br><span class="line">Caused by: Unable to load configuration. - [unknown location]</span><br><span class="line">	at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:58)</span><br><span class="line">	at org.apache.struts2.dispatcher.Dispatcher.init_PreloadConfiguration(Dispatcher.java:374)</span><br><span class="line">	at org.apache.struts2.dispatcher.Dispatcher.init(Dispatcher.java:418)</span><br><span class="line">	... 15 more</span><br><span class="line">Caused by: Unable to load file:&#x2F;D:&#x2F;Tools&#x2F;Eclipse&#x2F;Eclipse_2020&#x2F;Data&#x2F;Feezet_Project&#x2F;fjsy_total&#x2F;.metadata&#x2F;.plugins&#x2F;org.eclipse.wst.server.core&#x2F;tmp0&#x2F;wtpwebapps&#x2F;cms&#x2F;WEB-INF&#x2F;classes&#x2F;struts.xml - [unknown location]</span><br><span class="line">	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadConfigurationFiles(XmlConfigurationProvider.java:898)</span><br><span class="line">	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadDocuments(XmlConfigurationProvider.java:143)</span><br><span class="line">	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.init(XmlConfigurationProvider.java:110)</span><br><span class="line">	at com.opensymphony.xwork2.config.impl.DefaultConfiguration.reloadContainer(DefaultConfiguration.java:168)</span><br><span class="line">	at com.opensymphony.xwork2.config.ConfigurationManager.getConfiguration(ConfigurationManager.java:55)</span><br><span class="line">	... 17 more</span><br><span class="line">Caused by: Connection timed out: connect - [unknown location]</span><br><span class="line">	at com.opensymphony.xwork2.util.DomHelper.parse(DomHelper.java:115)</span><br><span class="line">	at com.opensymphony.xwork2.config.providers.XmlConfigurationProvider.loadConfigurationFiles(XmlConfigurationProvider.java:893)</span><br><span class="line">	... 21 more</span><br><span class="line">Caused by: java.net.ConnectException: Connection timed out: connect</span><br><span class="line">	at java.net.PlainSocketImpl.socketConnect(Native Method)</span><br><span class="line">	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)</span><br><span class="line">	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)</span><br><span class="line">	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)</span><br><span class="line">	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)</span><br><span class="line">	at java.net.Socket.connect(Socket.java:529)</span><br><span class="line">	at java.net.Socket.connect(Socket.java:478)</span><br><span class="line">	at sun.net.NetworkClient.doConnect(NetworkClient.java:163)</span><br><span class="line">	at sun.net.www.http.HttpClient.openServer(HttpClient.java:411)</span><br><span class="line">	at sun.net.www.http.HttpClient.openServer(HttpClient.java:525)</span><br><span class="line">	at sun.net.www.http.HttpClient.&lt;init&gt;(HttpClient.java:208)</span><br><span class="line">	at sun.net.www.http.HttpClient.New(HttpClient.java:291)</span><br><span class="line">	at sun.net.www.http.HttpClient.New(HttpClient.java:310)</span><br><span class="line">	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:987)</span><br><span class="line">	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:923)</span><br><span class="line">	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:841)</span><br><span class="line">	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1195)</span><br><span class="line">	at org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)</span><br><span class="line">	at org.apache.xerces.impl.XMLEntityManager.startEntity(Unknown Source)</span><br><span class="line">	at org.apache.xerces.impl.XMLEntityManager.startDTDEntity(Unknown Source)</span><br><span class="line">	at org.apache.xerces.impl.XMLDTDScannerImpl.setInputSource(Unknown Source)</span><br><span class="line">	at org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(Unknown Source)</span><br><span class="line">	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)</span><br><span class="line">	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)</span><br><span class="line">	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)</span><br><span class="line">	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)</span><br><span class="line">	at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)</span><br><span class="line">	at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)</span><br><span class="line">	at org.apache.xerces.jaxp.SAXParserImpl.parse(Unknown Source)</span><br><span class="line">	at com.opensymphony.xwork2.util.DomHelper.parse(DomHelper.java:113)</span><br><span class="line">	... 22 more</span><br></pre></td></tr></table></figure>
<p>2.尝试解决：</p>
<p>判断是内存溢出导致系统假死</p>
<p>修改run config和debug config的内存配置</p>
<p>参考：<a href="https://liuwf.top/2021/02/25/eclipse%E8%BF%90%E8%A1%8C%E6%8A%A5java-lang-OutOfMemoryError-PermGen-space%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/">Eclipse运行报错java.lang.OutOfMemoryError: PermGen space解决方法 | Welcome to my blog (liuwf.top)</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
  <entry>
    <title>工作-系统漏洞修复</title>
    <url>/2021/07/06/%E5%B7%A5%E4%BD%9C-%E7%B3%BB%E7%BB%9F%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D/</url>
    <content><![CDATA[<p>一、Oracle漏洞修复</p>
<p>1.有购买Oracle服务，下载安装补丁教程</p>
<p>参考：<a href="http://blog.itpub.net/31397003/viewspace-2145807/">http://blog.itpub.net/31397003/viewspace-2145807/</a></p>
<p>2.未购买Oracle服务，无法下载补丁，进行IP访问限制修复漏洞</p>
<p>参考：<a href="https://blog.csdn.net/javaee_ssh/article/details/38400101">https://blog.csdn.net/javaee_ssh/article/details/38400101</a></p>
]]></content>
      <categories>
        <category>工作</category>
      </categories>
  </entry>
</search>
